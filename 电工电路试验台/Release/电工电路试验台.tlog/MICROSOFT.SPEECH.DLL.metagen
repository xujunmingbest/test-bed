  ExceptionStringTable.resources - Embedded, ContainedInManifestFile, 
  upstable_enu.upsmap - Embedded, ContainedInManifestFile, 
  upstable_chs.upsmap - Embedded, ContainedInManifestFile, 
  upstable_cht.upsmap - Embedded, ContainedInManifestFile, 
  upstable_deu.upsmap - Embedded, ContainedInManifestFile, 
  upstable_esp.upsmap - Embedded, ContainedInManifestFile, 
  upstable_fra.upsmap - Embedded, ContainedInManifestFile, 
  upstable_jpn.upsmap - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v2.0.50727
Assembly Microsoft.Speech, Version=10.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly sysglobl, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class Microsoft.Speech.Internal.AudioFormatConverter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToSpeechAudioFormatInfo(IntPtr): PrivateScope, Assembly, Static, HideBySig
    ToSpeechAudioFormatInfo(String): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Speech.AudioFormat.EncodingFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.AudioFormat.EncodingFormat Pcm = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.AudioFormat.EncodingFormat ALaw = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.AudioFormat.EncodingFormat ULaw = 7 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Microsoft.Speech.AudioFormat.EncodingFormat, Int32, Int32, Int32, Int32, Int32, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Microsoft.Speech.AudioFormat.AudioBitsPerSample, Microsoft.Speech.AudioFormat.AudioChannel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 AverageBytesPerSecond 'get ' : 
    Int32 BitsPerSample 'get ' : 
    Int32 BlockAlign 'get ' : 
    Microsoft.Speech.AudioFormat.EncodingFormat EncodingFormat 'get ' : 
    Int32 ChannelCount 'get ' : 
    Int32 SamplesPerSecond 'get ' : 
    Byte[] WaveFormat 'get ' : 
  Methods:
    get_AverageBytesPerSecond(): PrivateScope, Public, HideBySig, SpecialName
    get_BitsPerSample(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockAlign(): PrivateScope, Public, HideBySig, SpecialName
    get_EncodingFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SamplesPerSecond(): PrivateScope, Public, HideBySig, SpecialName
    FormatSpecificData(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_WaveFormat(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.AudioFormat.AudioChannel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.AudioFormat.AudioChannel Mono = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.AudioFormat.AudioChannel Stereo = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.AudioFormat.AudioBitsPerSample: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.AudioFormat.AudioBitsPerSample Eight = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.AudioFormat.AudioBitsPerSample Sixteen = 16 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.IAsyncDispatch: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Post(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Post(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PostOperation(Delegate, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PostOperationCallback(Delegate, AsyncWorkerDelegate, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.AsyncWorkerDelegate: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, Exception, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Internal.AsyncSerializedWorker: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Threading.WaitCallback, System.ComponentModel.AsyncOperation): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.IAsyncDispatch
    System.IDisposable
  Properties:
    Boolean Enabled 'get set' : 
    System.Threading.WaitCallback DefaultCallback 'get ' : 
    Boolean AsyncMode 'get set' : 
  Events:
    System.Threading.WaitCallback WorkItemPending: 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Post(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Post(Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PostOperation(Delegate, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PostOperationCallback(Delegate, AsyncWorkerDelegate, Object, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Enabled(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Purge(): PrivateScope, Assembly, HideBySig
    get_DefaultCallback(): PrivateScope, Assembly, HideBySig, SpecialName
    NextWorkItem(): PrivateScope, Assembly, HideBySig
    ConsumeQueue(): PrivateScope, Assembly, HideBySig
    set_AsyncMode(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_AsyncMode(): PrivateScope, Assembly, HideBySig, SpecialName
    add_WorkItemPending(WaitCallback): PrivateScope, Assembly, HideBySig, SpecialName
    remove_WorkItemPending(WaitCallback): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.AsyncWorkItem: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Delegate, Microsoft.Speech.Internal.AsyncWorkerDelegate, System.Object, System.Object[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Helpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Char[] _achTrimChars : Assembly, Static, InitOnly
    Int32 _sizeOfChar = 2 : Assembly, Static, Literal, HasDefault
    System.String _noClassificationResult = RecognitionResultRejected : Assembly, Static, Literal, HasDefault
  Methods:
    ThrowIfEmptyOrNull(String, String): PrivateScope, Assembly, Static, HideBySig
    ThrowIfNull(Object, String): PrivateScope, Assembly, Static, HideBySig
    CompareInvariantCulture(CultureInfo, CultureInfo): PrivateScope, Assembly, Static, HideBySig
    CopyStream(Stream, Stream, Int32): PrivateScope, Assembly, Static, HideBySig
    ReadStreamToByteArray(Stream, UInt32): PrivateScope, Assembly, Static, HideBySig
    ReadStreamToByteArray(Stream, Byte[]): PrivateScope, Assembly, Static, HideBySig
    BlockingRead(Stream, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ExceptionFromSapiError(COMException): PrivateScope, Assembly, Static, HideBySig
    ExceptionFromSapiError(SAPIErrorCodes): PrivateScope, Assembly, Static, HideBySig
    CombineCulture(String, String, CultureInfo, Int32): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.HGlobalSafeHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    Buffer(Int32): PrivateScope, Assembly, HideBySig
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.AlphabetType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.AlphabetType Sapi = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.AlphabetType Ipa = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.AlphabetType Ups = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.AlphabetConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SapiToIpa(Char[]): PrivateScope, Assembly, HideBySig
    IpaToSapi(Char[]): PrivateScope, Assembly, HideBySig
    IsPrefix(String, Boolean): PrivateScope, Assembly, HideBySig
    IsConvertibleUnit(String, Boolean): PrivateScope, Assembly, HideBySig
    SetLanguageId(Int32): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.AlphabetConverter+PhoneMapData: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsPrefix(String, Boolean): PrivateScope, Assembly, HideBySig
    ConvertPhoneme(String, Boolean): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Logger: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Microsoft.Speech.Internal.TraceProvider tracerProvider : Assembly, Static
  Methods:
    LogStart(): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.PhonemeConverter: AutoLayout, AnsiClass, Class, Sealed
  Properties:
    Microsoft.Speech.Internal.PhonemeConverter UpsConverter 'get ' : 
  Methods:
    get_UpsConverter(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ConvertPronToId(String, Int32): PrivateScope, Assembly, Static, HideBySig
    ConvertPronToId(String): PrivateScope, Assembly, HideBySig
    ValidateUpsIds(String): PrivateScope, Assembly, Static, HideBySig
    ValidateUpsIds(Char[]): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.RedBackList: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Boolean IsEmpty 'get ' : 
    Boolean CountIsOne 'get ' : 
    Boolean ContainsMoreThanOneItem 'get ' : 
    System.Object First 'get ' : 
  Methods:
    Add(Object): PrivateScope, Assembly, HideBySig
    Remove(Object): PrivateScope, Assembly, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsEmpty(): PrivateScope, Assembly, HideBySig, SpecialName
    get_CountIsOne(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ContainsMoreThanOneItem(): PrivateScope, Assembly, HideBySig, SpecialName
    get_First(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.ResourceLoader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    LoadFile(Uri, String&(Out), Uri&(Out), String&(Out)): PrivateScope, Assembly, HideBySig
    UnloadFile(String): PrivateScope, Assembly, HideBySig
    LoadFile(Uri, String&(Out), Uri&(Out)): PrivateScope, Assembly, HideBySig
    SetResourceLoader(ISpeechResourceLoader): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.SapiAttributeParser: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCultureInfoFromLanguageString(String): PrivateScope, Assembly, Static, HideBySig
    GetAudioFormatsFromString(String): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.SeekableReadStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CacheDataForSeeking 'set' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    set_CacheDataForSeeking(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Speech.Internal.StreamMarshaler: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.IO.Stream Stream 'get ' : 
    UInt32 Position 'set' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadArray(T[], Int32): PrivateScope, Assembly, HideBySig
    WriteArray(T[], Int32): PrivateScope, Assembly, HideBySig
    ReadArrayChar(Char[], Int32): PrivateScope, Assembly, HideBySig
    ReadNullTerminatedString(): PrivateScope, Assembly, HideBySig
    WriteArrayChar(Char[], Int32): PrivateScope, Assembly, HideBySig
    ReadStream(Object): PrivateScope, Assembly, HideBySig
    WriteStream(Object): PrivateScope, Assembly, HideBySig
    get_Stream(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Position(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.StringBlob: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Add(String, Int32&(Out)): PrivateScope, Assembly, HideBySig
    Find(String): PrivateScope, Assembly, HideBySig
    get_Item(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    FromOffset(Int32): PrivateScope, Assembly, HideBySig
    StringSize(): PrivateScope, Assembly, HideBySig
    SerializeSize(): PrivateScope, Assembly, HideBySig
    SerializeData(): PrivateScope, Assembly, HideBySig
    OffsetFromId(Int32): PrivateScope, Assembly, HideBySig
    ToStringArray(): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Assembly, HideBySig, SpecialName
Interface Microsoft.Speech.Internal.ObjectTokens.ISpDataKey: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetData(String(HasFieldMarshal), UInt32, Byte[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetData(String(HasFieldMarshal), UInt32&, Byte[](Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStringValue(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringValue(String(HasFieldMarshal), String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDWORD(String(HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDWORD(String(HasFieldMarshal), UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteKey(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteValue(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumKeys(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumValues(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.ObjectTokens.RegistryDataKey: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Interfaces:
    Microsoft.Speech.Internal.ObjectTokens.ISpDataKey
    System.Collections.Generic.IEnumerable`1[Microsoft.Speech.Internal.ObjectTokens.RegistryDataKey]
    System.Collections.IEnumerable
    System.IDisposable
  Fields:
    System.String _sKeyId : Assembly
    Microsoft.Win32.RegistryKey _hkey : Assembly
    Boolean _rwKey : Assembly
  Properties:
    System.String Id 'get ' : 
    System.String Name 'get ' : 
  Methods:
    Create(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Create(String, RegistryKey): PrivateScope, Assembly, Static, HideBySig
    CreateKey(String, Boolean, String&(Out)): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegistryPathToHkey(String, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    SetData(String(HasFieldMarshal), UInt32, Byte[](HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetData(String(HasFieldMarshal), UInt32&, Byte[](Out, HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetStringValue(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetStringValue(String(HasFieldMarshal), String&(Out, HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetDWORD(String(HasFieldMarshal), UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDWORD(String(HasFieldMarshal), UInt32&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeleteKey(String(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DeleteValue(String(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumKeys(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EnumValues(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Id(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    SetString(String, String): PrivateScope, Assembly, HideBySig
    TryGetString(String, String&(Out)): PrivateScope, Assembly, HideBySig
    HasValue(String): PrivateScope, Assembly, HideBySig
    TryGetDWORD(String, UInt32&): PrivateScope, Assembly, HideBySig
    OpenKey(String): PrivateScope, Assembly, HideBySig
    CreateKey(String): PrivateScope, Assembly, HideBySig
    GetValueNames(): PrivateScope, Assembly, HideBySig
    TryOpenKey(String, RegistryDataKey&(Out)): PrivateScope, Assembly, HideBySig
Struct Microsoft.Speech.Internal.ObjectTokens.RegistryDataKey+SAPIErrorCodes: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SAPIErrorCodes STG_E_FILENOTFOUND = -2147287038 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_UNSUPPORTED_FORMAT = -2147201021 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_DEVICE_BUSY = -2147201018 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_DEVICE_NOT_SUPPORTED = -2147201017 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_DEVICE_NOT_ENABLED = -2147201016 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_NO_DRIVER = -2147201015 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_TOO_MANY_GRAMMARS = -2147200990 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_INVALID_IMPORT = -2147200988 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_AUDIO_BUFFER_OVERFLOW = -2147200977 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_NO_AUDIO_DATA = -2147200976 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_NO_MORE_ITEMS = -2147200967 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_NOT_FOUND = -2147200966 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_GENERIC_MMSYS_ERROR = -2147200964 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_NOT_TOPLEVEL_RULE = -2147200940 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_NOT_ACTIVE_SESSION = -2147200925 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_SML_GENERATION_FAIL = -2147200921 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_SHARED_ENGINE_DISABLED = -2147200906 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_RECOGNIZER_NOT_FOUND = -2147200905 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SPERR_AUDIO_NOT_FOUND = -2147200904 : Public, Static, Literal, HasDefault
    SAPIErrorCodes S_OK = 0 : Public, Static, Literal, HasDefault
    SAPIErrorCodes S_FALSE = 1 : Public, Static, Literal, HasDefault
    SAPIErrorCodes SP_NO_RULES_TO_ACTIVATE = 282747 : Public, Static, Literal, HasDefault
    SAPIErrorCodes ERROR_MORE_DATA = 20714 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.ObjectTokens.ISpObjectToken: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.ObjectTokens.ISpDataKey
  Methods:
    SetData(String(HasFieldMarshal), UInt32, Byte[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetData(String(HasFieldMarshal), UInt32&, Byte[](Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStringValue(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringValue(String(HasFieldMarshal), String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDWORD(String(HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDWORD(String(HasFieldMarshal), UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteKey(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteValue(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumKeys(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumValues(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetId(String(HasFieldMarshal), String(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetId(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot15(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot17(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot18(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot19(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot20(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot21(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MatchesAttributes(String(HasFieldMarshal), Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.ObjectTokens.ISpObjectTokenMss: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.ObjectTokens.ISpDataKey
  Methods:
    SetData(String(HasFieldMarshal), UInt32, Byte[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetData(String(HasFieldMarshal), UInt32&, Byte[](Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStringValue(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringValue(String(HasFieldMarshal), String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDWORD(String(HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDWORD(String(HasFieldMarshal), UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteKey(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteValue(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumKeys(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumValues(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetId(String(HasFieldMarshal), String(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetId(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot15(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot17(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot18(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot19(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot20(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot21(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MatchesAttributes(String(HasFieldMarshal), Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.ObjectTokens.ObjectToken: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.ObjectTokens.RegistryDataKey
  Interfaces:
    Microsoft.Speech.Internal.ObjectTokens.ISpObjectToken
    Microsoft.Speech.Internal.ObjectTokens.ISpObjectTokenMss
  Properties:
    Microsoft.Speech.Internal.ObjectTokens.RegistryDataKey Attributes 'get ' : 
    System.Globalization.CultureInfo Culture 'get ' : 
    System.String Description 'get ' : 
  Methods:
    FindBestMatch(String, String, String): PrivateScope, Assembly, Static, HideBySig
    CreateKey(String, String, Boolean, String&(Out)): PrivateScope, Assembly, Static, HideBySig
    Create(String, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Attributes(): PrivateScope, Assembly, HideBySig, SpecialName
    TokenName(): PrivateScope, Assembly, HideBySig
    get_Culture(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Description(): PrivateScope, Assembly, HideBySig, SpecialName
    SetId(String(HasFieldMarshal), String(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetId(IntPtr&(Out, HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot15(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot16(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot17(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot18(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot19(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot20(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot21(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MatchesAttributes(String(HasFieldMarshal), Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MatchesAttributes(String[]): PrivateScope, Assembly, HideBySig
    CreateObjectFromToken(String): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.ObjectTokens.ObjectTokenCategory: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.ObjectTokens.RegistryDataKey
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Microsoft.Speech.Internal.ObjectTokens.ObjectToken]
  Methods:
    Create(String): PrivateScope, Assembly, Static, HideBySig
    OpenToken(String): PrivateScope, Assembly, HideBySig
    FindMatchingTokens(String, String): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.ObjectTokens.SAPICategories: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String PromptVoices = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech Server\v10.0\PromptVoices : Assembly, Static, Literal, HasDefault
    System.String CurrentUserVoices = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech Server\v10.0\Voices : Assembly, Static, Literal, HasDefault
    System.String Recognizers = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech Server\v10.0\Recognizers : Assembly, Static, Literal, HasDefault
    System.String Voices = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech Server\v10.0\Voices : Assembly, Static, Literal, HasDefault
    System.String AudioIn = HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech Server\v10.0\AudioInput : Assembly, Static, Literal, HasDefault
  Methods:
    DefaultToken(String): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.ObjectTokens.VoiceObjectToken: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.ObjectTokens.ObjectToken
  Properties:
    System.String Age 'get ' : 
    System.String Gender 'get ' : 
    Microsoft.Speech.Internal.ObjectTokens.VoiceCategory VoiceCategory 'get set' : 
  Methods:
    Create(String, String): PrivateScope, Assembly, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Age(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Gender(): PrivateScope, Assembly, HideBySig, SpecialName
    set_VoiceCategory(VoiceCategory): PrivateScope, Assembly, HideBySig, SpecialName
    get_VoiceCategory(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.ObjectTokens.VoiceCategory: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.ObjectTokens.VoiceCategory Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.ObjectTokens.VoiceCategory ScanSoft = 1 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SapiInterop.ISpNotifySink: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    Notify(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SapiInterop.SpNotifySink: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.EventNotify): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpNotifySink
Class Microsoft.Speech.Internal.SapiInterop.EventNotify: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpEventSource, Microsoft.Speech.Internal.IAsyncDispatch, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo AudioFormat 'set' : 
  Methods:
    Dispose(): PrivateScope, Assembly, HideBySig
    SendNotification(Object): PrivateScope, Assembly, HideBySig
    set_AudioFormat(SpeechAudioFormatInfo): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SapiInterop.SPEVENT: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM eEventId : Public
    Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE elParamType : Public
    UInt32 ulStreamNum : Public
    UInt64 ullAudioStreamOffset : Public
    IntPtr wParam : Public
    IntPtr lParam : Public
Struct Microsoft.Speech.Internal.SapiInterop.SPEVENTEX: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM eEventId : Public
    Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE elParamType : Public
    UInt32 ulStreamNum : Public
    UInt64 ullAudioStreamOffset : Public
    IntPtr wParam : Public
    IntPtr lParam : Public
    UInt64 ullAudioTimeOffset : Public
Struct Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_UNDEFINED = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_START_INPUT_STREAM = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_END_INPUT_STREAM = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_VOICE_CHANGE = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_TTS_BOOKMARK = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_WORD_BOUNDARY = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_PHONEME = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_SENTENCE_BOUNDARY = 7 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_VISEME = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_TTS_AUDIO_LEVEL = 9 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_TTS_PRIVATE = 15 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_MIN_TTS = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_MAX_TTS = 15 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_END_SR_STREAM = 34 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_SOUND_START = 35 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_SOUND_END = 36 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_PHRASE_START = 37 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_RECOGNITION = 38 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_HYPOTHESIS = 39 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_SR_BOOKMARK = 40 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_PROPERTY_NUM_CHANGE = 41 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_PROPERTY_STRING_CHANGE = 42 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_FALSE_RECOGNITION = 43 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_INTERFERENCE = 44 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_REQUEST_UI = 45 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_RECO_STATE_CHANGE = 46 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_ADAPTATION = 47 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_START_SR_STREAM = 48 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_RECO_OTHER_CONTEXT = 49 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_SR_AUDIO_LEVEL = 50 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_SR_RETAINEDAUDIO = 51 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_SR_PRIVATE = 52 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_ACTIVE_CATEGORY_CHANGED = 53 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_TEXTFEEDBACK = 54 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_RECOGNITION_ALL = 55 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_BARGE_IN = 56 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_RESERVED1 = 30 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_RESERVED2 = 33 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM SPEI_RESERVED3 = 63 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SapiInterop.ISpNotifySource: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetNotifySink(ISpNotifySink): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetNotifyWindowMessage(UInt32, UInt32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WaitForNotifyEvent(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpEventSource: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpNotifySource
  Methods:
    SetNotifySink(ISpNotifySink): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetNotifyWindowMessage(UInt32, UInt32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WaitForNotifyEvent(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInterest(UInt64, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEvents(UInt32, SPEVENT&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpEventSource2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpEventSource
    Microsoft.Speech.Internal.SapiInterop.ISpNotifySource
  Methods:
    SetNotifySink(ISpNotifySink): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetNotifyWindowMessage(UInt32, UInt32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WaitForNotifyEvent(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInterest(UInt64, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEvents(UInt32, SPEVENT&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEventsEx(UInt32, SPEVENTEX&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SapiInterop.SapiGrammar: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    UInt64 GrammarId 'get ' : 
  Methods:
    GetInstance(ISpRecoGrammar, SapiProxy, UInt64): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetGrammarState(SPGRAMMARSTATE): PrivateScope, Assembly, HideBySig
    SetWordSequenceData(String, SPTEXTSELECTIONINFO): PrivateScope, Assembly, HideBySig
    IsPronounceable(String): PrivateScope, Assembly, HideBySig
    LoadDictation(String, SPLOADOPTIONS): PrivateScope, Assembly, HideBySig
    SetDictationState(SPRULESTATE): PrivateScope, Assembly, HideBySig
    SetRuleState(String, SPRULESTATE): PrivateScope, Assembly, HideBySig
    SetGrammarLoader(ISpGrammarResourceLoader): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    LoadCmdFromMemory2(IntPtr, SPLOADOPTIONS, String, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    LoadCmdFromFile2(Uri, SPLOADOPTIONS, String, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetRulePriority(String, UInt32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetRuleWeight(String, UInt32, Single): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetDictationWeight(Single): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_GrammarId(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.SapiInterop.SapiGrammar51: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.SapiInterop.SapiGrammar
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpRecoGrammar, Microsoft.Speech.Internal.SapiInterop.SapiProxy, UInt64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetGrammarLoader(ISpGrammarResourceLoader): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    LoadCmdFromMemory2(IntPtr, SPLOADOPTIONS, String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    LoadCmdFromFile2(Uri, SPLOADOPTIONS, String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetRulePriority(String, UInt32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetRuleWeight(String, UInt32, Single): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetDictationWeight(Single): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Internal.SapiInterop.SapiGrammar53: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.SapiInterop.SapiGrammar
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpRecoGrammar2, Microsoft.Speech.Internal.SapiInterop.SapiProxy, UInt64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetGrammarLoader(ISpGrammarResourceLoader): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    LoadCmdFromMemory2(IntPtr, SPLOADOPTIONS, String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    LoadCmdFromFile2(Uri, SPLOADOPTIONS, String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetRulePriority(String, UInt32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetRuleWeight(String, UInt32, Single): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetDictationWeight(Single): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Struct Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes S_OK = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes S_FALSE = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SP_NO_RULE_ACTIVE = 282709 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SP_NO_RULES_TO_ACTIVATE = 282747 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes S_LIMIT_REACHED = 282751 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SP_NO_PARSE_FOUND = 282668 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SP_WORD_EXISTS_WITHOUT_PRONUNCIATION = 282679 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_FIRST = -2147201023 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_LAST = -2147200890 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes CLASS_E_CLASSNOTAVAILABLE = -2147221231 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes REGDB_E_CLASSNOTREG = -2147221164 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_UNSUPPORTED_FORMAT = -2147201021 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_NOT_IN_LEX = -2147200999 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_TOO_MANY_GRAMMARS = -2147200990 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_INVALID_IMPORT = -2147200988 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_NOT_FOUND = -2147200966 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_NOT_TOPLEVEL_RULE = -2147200940 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_SHARED_ENGINE_DISABLED = -2147200906 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_RECOGNIZER_NOT_FOUND = -2147200905 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_AUDIO_NOT_FOUND = -2147200904 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_NOT_SUPPORTED_FOR_INPROC_RECOGNIZER = -2147200893 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_LEX_INVALID_DATA = -2147200891 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SAPIErrorCodes SPERR_CFG_INVALID_DATA = -2147200890 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.PEErrorCodes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.PEErrorCodes SPERR_FIRST = -2147200767 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.PEErrorCodes SPERR_LAST = -2147200751 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.PEErrorCodes PEERR_NO_TTS_VOICE = -2147200736 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.PEErrorCodes PEERR_SCRIPT_LANGUAGE = -2147200731 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.SapiInterop.SapiConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String SPPROP_RESPONSE_SPEED = ResponseSpeed : Assembly, Static, Literal, HasDefault
    System.String SPPROP_COMPLEX_RESPONSE_SPEED = ComplexResponseSpeed : Assembly, Static, Literal, HasDefault
    System.String SPPROP_CFG_CONFIDENCE_REJECTION_THRESHOLD = CFGConfidenceRejectionThreshold : Assembly, Static, Literal, HasDefault
    UInt32 SPDF_ALL = 255 : Assembly, Static, Literal, HasDefault
  Methods:
    SapiErrorCode2SRID(SAPIErrorCodes): PrivateScope, Assembly, Static, HideBySig
    PEErrorCode2SRID(PEErrorCodes): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.SapiInterop.SAPIGuids: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid SPDFID_WaveFormatEx : Assembly, Static, InitOnly
Class Microsoft.Speech.Internal.SapiInterop.SapiProxy: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Speech.Internal.SapiInterop.ISpRecognizer Recognizer 'get ' : 
    Microsoft.Speech.Internal.SapiInterop.ISpRecognizer2 Recognizer2 'get ' : 
    Microsoft.Speech.Internal.SapiInterop.ISpSerializeState SerializeState 'get ' : 
    Microsoft.Speech.Internal.SapiInterop.ISpeechRecognizer SapiSpeechRecognizer 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Invoke(ObjectDelegate): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Invoke2(VoidDelegate): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_Recognizer(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Recognizer2(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SerializeState(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SapiSpeechRecognizer(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.SapiInterop.SapiProxy+PassThrough: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :Microsoft.Speech.Internal.SapiInterop.SapiProxy
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpRecognizer): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Dispose(): PrivateScope, Public, Virtual, HideBySig
    Invoke(ObjectDelegate): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Invoke2(VoidDelegate): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Internal.SapiInterop.SapiProxy+ObjectDelegate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Internal.SapiInterop.SapiProxy+VoidDelegate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Internal.SapiInterop.SapiRecognizer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(RecognizerType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Boolean simulatedSTASapi51 : Assembly, Static
  Properties:
    Boolean IsSapi53 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetPropertyNum(String, Int32): PrivateScope, Assembly, HideBySig
    GetPropertyNum(String): PrivateScope, Assembly, HideBySig
    SetPropertyString(String, String): PrivateScope, Assembly, HideBySig
    GetPropertyString(String): PrivateScope, Assembly, HideBySig
    SetRecognizer(ISpObjectToken): PrivateScope, Assembly, HideBySig
    GetRecognizerInfo(): PrivateScope, Assembly, HideBySig
    SetInput(Object, Boolean): PrivateScope, Assembly, HideBySig
    CreateRecoContext(): PrivateScope, Assembly, HideBySig
    GetRecoState(): PrivateScope, Assembly, HideBySig
    SetRecoState(SPRECOSTATE): PrivateScope, Assembly, HideBySig
    GetStatus(): PrivateScope, Assembly, HideBySig
    GetFormat(SPSTREAMFORMATTYPE): PrivateScope, Assembly, HideBySig
    EmulateRecognition(String): PrivateScope, Assembly, HideBySig
    EmulateRecognition(ISpPhrase, UInt32): PrivateScope, Assembly, HideBySig
    SetSerializedState(Byte[]): PrivateScope, Assembly, HideBySig
    GetSerializedState(): PrivateScope, Assembly, HideBySig
    get_IsSapi53(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SapiInterop.SapiRecognizer+RecognizerType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RecognizerType InProc = 0 : Public, Static, Literal, HasDefault
    RecognizerType Shared = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPFILEMODE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPFILEMODE SPFM_OPEN_READONLY = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPFILEMODE SPFM_CREATE_ALWAYS = 3 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SapiInterop.ISpStreamFormat: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    System.Runtime.InteropServices.ComTypes.IStream
  Methods:
    Read(Byte[](Out, HasFieldMarshal), Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(Byte[](HasFieldMarshal), Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Seek(Int64, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSize(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyTo(IStream, Int64, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Commit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Revert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LockRegion(Int64, Int64, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnlockRegion(Int64, Int64, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Stat(STATSTG&(Out), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(IStream&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFormat(Guid&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpStream: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpStreamFormat
    System.Runtime.InteropServices.ComTypes.IStream
  Methods:
    Read(Byte[](Out, HasFieldMarshal), Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(Byte[](HasFieldMarshal), Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Seek(Int64, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSize(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyTo(IStream, Int64, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Commit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Revert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LockRegion(Int64, Int64, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnlockRegion(Int64, Int64, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Stat(STATSTG&(Out), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(IStream&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFormat(Guid&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBaseStream(IStream, Guid&, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot14(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BindToFile(String, SPFILEMODE, Guid&, IntPtr, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SapiInterop.SpStream: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_DEFAULT = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_ASYNC = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_PURGEBEFORESPEAK = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_IS_FILENAME = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_IS_XML = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_IS_NOT_XML = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_PERSIST_XML = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_NLP_SPEAK_PUNC = 64 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_PARSE_SAPI = 128 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEAKFLAGS SPF_PARSE_SSML = 256 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SpeechRunState: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SpeechRunState SPRS_DONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SpeechRunState SPRS_IS_SPEAKING = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPRECOSTATE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPRECOSTATE SPRST_INACTIVE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOSTATE SPRST_ACTIVE = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOSTATE SPRST_ACTIVE_ALWAYS = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOSTATE SPRST_INACTIVE_WITH_PURGE = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOSTATE SPRST_NUM_STATES = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPVPRIORITY: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPVPRIORITY SPVPRI_NORMAL = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPVPRIORITY SPVPRI_ALERT = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPVPRIORITY SPVPRI_OVER = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPLOADOPTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPLOADOPTIONS SPLO_STATIC = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPLOADOPTIONS SPLO_DYNAMIC = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPRULESTATE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPRULESTATE SPRS_INACTIVE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRULESTATE SPRS_ACTIVE = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRULESTATE SPRS_ACTIVE_WITH_AUTO_PAUSE = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRULESTATE SPRS_ACTIVE_USER_DELIMITED = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_SAPI = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_SRGS = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_UPS = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_SRGS_MSS_SCRIPT = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_FILE = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_HTTP = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_RES = 64 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_OBJECT = 128 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_SRGS_W3C_SCRIPT = 256 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_SRGS_STG_SCRIPT = 512 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_SRGS_SCRIPT = 778 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_DEFAULT = 243 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMAROPTIONS SPGO_ALL = 1019 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPSTREAMFORMATTYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPSTREAMFORMATTYPE SPWF_INPUT = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPSTREAMFORMATTYPE SPWF_SRENGINE = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SpeechEmulationCompareFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SpeechEmulationCompareFlags SECFIgnoreCase = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SpeechEmulationCompareFlags SECFIgnoreKanaType = 65536 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SpeechEmulationCompareFlags SECFIgnoreWidth = 131072 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SpeechEmulationCompareFlags SECFSimulateOnce = 536870912 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SpeechEmulationCompareFlags SECFEmulateResult = 1073741824 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SpeechEmulationCompareFlags SECFDefault = 196609 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONSETTINGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONSETTINGS SPADS_Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONSETTINGS SPADS_CurrentRecognizer = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONSETTINGS SPADS_RecoProfile = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONSETTINGS SPADS_Immediate = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONSETTINGS SPADS_Reset = 8 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONRELEVANCE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONRELEVANCE SPAR_Unknown = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONRELEVANCE SPAR_Low = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONRELEVANCE SPAR_Medium = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPADAPTATIONRELEVANCE SPAR_High = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS SPREF_AutoPause = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS SPREF_Emulated = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS SPREF_SMLTimeout = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS SPREF_ExtendableParse = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS SPREF_ReSent = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS SPREF_Hypothesis = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRECOEVENTFLAGS SPREF_FalseRecognition = 64 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPBOOKMARKOPTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPBOOKMARKOPTIONS SPBO_NONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPBOOKMARKOPTIONS SPBO_PAUSE = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPBOOKMARKOPTIONS SPBO_AHEAD = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPBOOKMARKOPTIONS SPBO_TIME_UNITS = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPCATEGORYTYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPCATEGORYTYPE SPCT_COMMAND = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPCATEGORYTYPE SPCT_DICTATION = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPCATEGORYTYPE SPCT_SUB_COMMAND = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPCATEGORYTYPE SPCT_SUB_DICTATION = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPCATEGORYSTATE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPCATEGORYSTATE SPCAS_ENABLED = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPCATEGORYSTATE SPCAS_DISABLED = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SapiConfidenceLevels: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SapiConfidenceLevels SP_LOW_CONFIDENCE = -1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SapiConfidenceLevels SP_NORMAL_CONFIDENCE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SapiConfidenceLevels SP_HIGH_CONFIDENCE = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPAUDIOOPTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOOPTIONS SPAO_NONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOOPTIONS SPAO_RETAIN_AUDIO = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPENDSRSTREAMFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPENDSRSTREAMFLAGS SPESF_NONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPENDSRSTREAMFLAGS SPESF_STREAM_RELEASED = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPENDSRSTREAMFLAGS SPESF_EMULATED = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPCOMMITFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPCOMMITFLAGS SPCF_NONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPCOMMITFLAGS SPCF_ADD_TO_USER_LEXICON = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPCOMMITFLAGS SPCF_DEFINITE_CORRECTION = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPDISPLAYATTRIBUTES: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPDISPLAYATTRIBUTES SPAF_ZERO_TRAILING_SPACE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPDISPLAYATTRIBUTES SPAF_ONE_TRAILING_SPACE = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPDISPLAYATTRIBUTES SPAF_TWO_TRAILING_SPACES = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPDISPLAYATTRIBUTES SPAF_CONSUME_LEADING_SPACES = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPDISPLAYATTRIBUTES SPAF_USER_SPECIFIED = 128 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATE SPAS_CLOSED = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATE SPAS_STOP = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATE SPAS_PAUSE = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATE SPAS_RUN = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPXMLRESULTOPTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPXMLRESULTOPTIONS SPXRO_SML = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPXMLRESULTOPTIONS SPXRO_Alternates_SML = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPXMLRESULTOPTIONS SPXRO_EMMA = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPXMLRESULTOPTIONS SPXRO_Alternates_EMMA = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPCONTEXTSTATE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPCONTEXTSTATE SPCS_DISABLED = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPCONTEXTSTATE SPCS_ENABLED = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE SPINTERFERENCE_NONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE SPINTERFERENCE_NOISE = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE SPINTERFERENCE_NOSIGNAL = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE SPINTERFERENCE_TOOLOUD = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE SPINTERFERENCE_TOOQUIET = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE SPINTERFERENCE_TOOFAST = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE SPINTERFERENCE_TOOSLOW = 6 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPWORDPRONOUNCEABLE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPWORDPRONOUNCEABLE SPWP_UNKNOWN_WORD_UNPRONOUNCEABLE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPWORDPRONOUNCEABLE SPWP_UNKNOWN_WORD_PRONOUNCEABLE = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPWORDPRONOUNCEABLE SPWP_KNOWN_WORD_PRONOUNCEABLE = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPGRAMMARSTATE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMARSTATE SPGS_DISABLED = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMARSTATE SPGS_ENABLED = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGRAMMARSTATE SPGS_EXCLUSIVE = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPRESULTALPHABET: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPRESULTALPHABET SPRA_NONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRESULTALPHABET SPRA_APP_UPS = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPRESULTALPHABET SPRA_ENGINE_UPS = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPLEXICONTYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPLEXICONTYPE eLEXTYPE_USER = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPLEXICONTYPE eLEXTYPE_APP = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPLEXICONTYPE eLEXTYPE_VENDORLEXICON = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPLEXICONTYPE eLEXTYPE_GRAMMAR = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPLEXICONTYPE eLEXTYPE_USER_SHORTCUT = 64 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_BASE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_GRAMMAR_URI = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_DERIVATION_WORD_LIST = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_DERIVATION_RULE_TREE = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_DERIVATION = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_CONFIDENCE = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_AUDIO_TIMING = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_MS_LITERAL_TYPE = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_MS_PHRASE_ELEMENT = 64 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_BASE_STANDARD = 25 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_BASE_INCLUDING_MS_SPECIFIC = 57 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_FULL_STANDARD = 31 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_FULL_INCLUDING_MS_SPECIFIC = 127 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEMMAOPTIONS SPEMO_ALL = 127 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASEALT: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulStartElementInParent : Assembly
    UInt32 cElementsInParent : Assembly
    UInt32 cElementsInAlternate : Assembly
    UInt32 cbAltExtra : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.FILETIME: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 dwLowDateTime : Assembly
    UInt32 dwHighDateTime : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.SPRECORESULTTIMES: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Internal.SapiInterop.FILETIME ftStreamTime : Assembly
    UInt64 ullLength : Assembly
    UInt32 dwTickCount : Assembly
    UInt64 ullStart : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.SPTEXTSELECTIONINFO: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32, UInt32, UInt32, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulStartActiveOffset : Assembly
    UInt32 cchActiveChars : Assembly
    UInt32 ulStartSelection : Assembly
    UInt32 cchSelection : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATUS: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbFreeBuffSpace : Assembly
    UInt32 cbNonBlockingIO : Assembly
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATE State : Assembly
    UInt64 CurSeekPos : Assembly
    UInt64 CurDevicePos : Assembly
    UInt32 dwAudioLevel : Assembly
    UInt32 dwReserved2 : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.SPRECOGNIZERSTATUS: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Internal.SapiInterop.SPAUDIOSTATUS AudioStatus : Assembly
    UInt64 ullRecognitionStreamPos : Assembly
    UInt32 ulStreamNumber : Assembly
    UInt32 ulNumActive : Assembly
    System.Guid clsidEngine : Assembly
    UInt32 cLangIDs : Assembly
    Int16[] aLangID : Assembly, HasFieldMarshal
    UInt64 ullRecognitionStreamTime : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.SPRECOCONTEXTSTATUS: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Internal.SapiInterop.SPINTERFERENCE eInterference : Assembly
    Int16[] szRequestTypeOfUI : Assembly, HasFieldMarshal
    UInt32 dwReserved1 : Assembly
    UInt32 dwReserved2 : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPSEMANTICERRORINFO: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulLineNumber : Assembly
    UInt32 pszScriptLineOffset : Assembly
    UInt32 pszSourceOffset : Assembly
    UInt32 pszDescriptionOffset : Assembly
    Int32 hrResultCode : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDRESULT: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 ulSerializedSize : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPRESULTHEADER_Sapi51: AutoLayout, AnsiClass, Class, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulSerializedSize : Assembly
    UInt32 cbHeaderSize : Assembly
    System.Guid clsidEngine : Assembly
    System.Guid clsidAlternates : Assembly
    UInt32 ulStreamNum : Assembly
    UInt64 ullStreamPosStart : Assembly
    UInt64 ullStreamPosEnd : Assembly
    UInt32 ulPhraseDataSize : Assembly
    UInt32 ulPhraseOffset : Assembly
    UInt32 ulPhraseAltDataSize : Assembly
    UInt32 ulPhraseAltOffset : Assembly
    UInt32 ulNumPhraseAlts : Assembly
    UInt32 ulRetainedDataSize : Assembly
    UInt32 ulRetainedOffset : Assembly
    UInt32 ulDriverDataSize : Assembly
    UInt32 ulDriverDataOffset : Assembly
    Single fTimePerByte : Assembly
    Single fInputScaleFactor : Assembly
    Microsoft.Speech.Internal.SapiInterop.SPRECORESULTTIMES times : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPRESULTHEADER: AutoLayout, AnsiClass, Class, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.SPRESULTHEADER_Sapi51): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulSerializedSize : Assembly
    UInt32 cbHeaderSize : Assembly
    System.Guid clsidEngine : Assembly
    System.Guid clsidAlternates : Assembly
    UInt32 ulStreamNum : Assembly
    UInt64 ullStreamPosStart : Assembly
    UInt64 ullStreamPosEnd : Assembly
    UInt32 ulPhraseDataSize : Assembly
    UInt32 ulPhraseOffset : Assembly
    UInt32 ulPhraseAltDataSize : Assembly
    UInt32 ulPhraseAltOffset : Assembly
    UInt32 ulNumPhraseAlts : Assembly
    UInt32 ulRetainedDataSize : Assembly
    UInt32 ulRetainedOffset : Assembly
    UInt32 ulDriverDataSize : Assembly
    UInt32 ulDriverDataOffset : Assembly
    Single fTimePerByte : Assembly
    Single fInputScaleFactor : Assembly
    Microsoft.Speech.Internal.SapiInterop.SPRECORESULTTIMES times : Assembly
    UInt32 fAlphabet : Assembly
  Methods:
    Validate(): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASE_Sapi51: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulSerializedSize : Assembly
    UInt32 cbSize : Assembly
    UInt16 LangID : Assembly
    UInt16 wHomophoneGroupId : Assembly
    UInt64 ullGrammarID : Assembly
    UInt64 ftStartTime : Assembly
    UInt64 ullAudioStreamPosition : Assembly
    UInt32 ulAudioSizeBytes : Assembly
    UInt32 ulRetainedSizeBytes : Assembly
    UInt32 ulAudioSizeTime : Assembly
    Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASERULE Rule : Assembly
    UInt32 PropertiesOffset : Assembly
    UInt32 ElementsOffset : Assembly
    UInt32 cReplacements : Assembly
    UInt32 ReplacementsOffset : Assembly
    System.Guid SREngineID : Assembly
    UInt32 ulSREnginePrivateDataSize : Assembly
    UInt32 SREnginePrivateDataOffset : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPPHRASE: AutoLayout, AnsiClass, Class, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 cbSize : Assembly
    UInt16 LangID : Assembly
    UInt16 wReserved : Assembly
    UInt64 ullGrammarID : Assembly
    UInt64 ftStartTime : Assembly
    UInt64 ullAudioStreamPosition : Assembly
    UInt32 ulAudioSizeBytes : Assembly
    UInt32 ulRetainedSizeBytes : Assembly
    UInt32 ulAudioSizeTime : Assembly
    Microsoft.Speech.Internal.SapiInterop.SPPHRASERULE Rule : Assembly
    IntPtr pProperties : Assembly
    IntPtr pElements : Assembly
    UInt32 cReplacements : Assembly
    IntPtr pReplacements : Assembly
    System.Guid SREngineID : Assembly
    UInt32 ulSREnginePrivateDataSize : Assembly
    IntPtr pSREnginePrivateData : Assembly
  Methods:
    CreatePhraseFromText(String, CultureInfo, GCHandle[]&(Out), IntPtr&(Out)): PrivateScope, Assembly, Static, HideBySig
    CreatePhraseFromWordUnits(RecognizedWordUnit[], CultureInfo, GCHandle[]&(Out), IntPtr&(Out)): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.SapiInterop.SPPHRASERULE: AutoLayout, AnsiClass, Class, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String pszName : Assembly, HasFieldMarshal
    UInt32 ulId : Assembly
    UInt32 ulFirstElement : Assembly
    UInt32 ulCountOfElements : Assembly
    IntPtr pNextSibling : Assembly
    IntPtr pFirstChild : Assembly
    Single SREngineConfidence : Assembly
    Byte Confidence : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPPHRASEELEMENT: AutoLayout, AnsiClass, Class, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulAudioTimeOffset : Assembly
    UInt32 ulAudioSizeTime : Assembly
    UInt32 ulAudioStreamOffset : Assembly
    UInt32 ulAudioSizeBytes : Assembly
    UInt32 ulRetainedStreamOffset : Assembly
    UInt32 ulRetainedSizeBytes : Assembly
    IntPtr pszDisplayText : Assembly
    IntPtr pszLexicalForm : Assembly
    IntPtr pszPronunciation : Assembly
    Byte bDisplayAttributes : Assembly
    Byte RequiredConfidence : Assembly
    Byte ActualConfidence : Assembly
    Byte Reserved : Assembly
    Single SREngineConfidence : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASE: AutoLayout, AnsiClass, Class, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASE_Sapi51): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulSerializedSize : Assembly
    UInt32 cbSize : Assembly
    UInt16 LangID : Assembly
    UInt16 wHomophoneGroupId : Assembly
    UInt64 ullGrammarID : Assembly
    UInt64 ftStartTime : Assembly
    UInt64 ullAudioStreamPosition : Assembly
    UInt32 ulAudioSizeBytes : Assembly
    UInt32 ulRetainedSizeBytes : Assembly
    UInt32 ulAudioSizeTime : Assembly
    Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASERULE Rule : Assembly
    UInt32 PropertiesOffset : Assembly
    UInt32 ElementsOffset : Assembly
    UInt32 cReplacements : Assembly
    UInt32 ReplacementsOffset : Assembly
    System.Guid SREngineID : Assembly
    UInt32 ulSREnginePrivateDataSize : Assembly
    UInt32 SREnginePrivateDataOffset : Assembly
    UInt32 SMLOffset : Assembly
    UInt32 SemanticErrorInfoOffset : Assembly
    UInt32 SemanticTagFormat : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASERULE: AutoLayout, AnsiClass, Class, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 pszNameOffset : Assembly
    UInt32 ulId : Assembly
    UInt32 ulFirstElement : Assembly
    UInt32 ulCountOfElements : Assembly
    UInt32 NextSiblingOffset : Assembly
    UInt32 FirstChildOffset : Assembly
    Single SREngineConfidence : Assembly
    SByte Confidence : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASEELEMENT: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulAudioTimeOffset : Assembly
    UInt32 ulAudioSizeTime : Assembly
    UInt32 ulAudioStreamOffset : Assembly
    UInt32 ulAudioSizeBytes : Assembly
    UInt32 ulRetainedStreamOffset : Assembly
    UInt32 ulRetainedSizeBytes : Assembly
    UInt32 pszDisplayTextOffset : Assembly
    UInt32 pszLexicalFormOffset : Assembly
    UInt32 pszPronunciationOffset : Assembly
    Byte bDisplayAttributes : Assembly
    Char RequiredConfidence : Assembly
    Char ActualConfidence : Assembly
    Byte Reserved : Assembly
    Single SREngineConfidence : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASEPROPERTY: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 pszNameOffset : Assembly
    UInt32 ulId : Assembly
    UInt32 pszValueOffset : Assembly
    UInt16 vValue : Assembly
    UInt64 SpVariantSubset : Assembly
    UInt32 ulFirstElement : Assembly
    UInt32 ulCountOfElements : Assembly
    UInt32 pNextSiblingOffset : Assembly
    UInt32 pFirstChildOffset : Assembly
    Single SREngineConfidence : Assembly
    SByte Confidence : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPPHRASEREPLACEMENT: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte bDisplayAttributes : Assembly
    UInt32 pszReplacementText : Assembly
    UInt32 ulFirstElement : Assembly
    UInt32 ulCountOfElements : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.SPVOICESTATUS: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 ulCurrentStream : Assembly
    UInt32 ulLastStreamQueued : Assembly
    Int32 hrLastResult : Assembly
    Microsoft.Speech.Internal.SapiInterop.SpeechRunState dwRunningState : Assembly
    UInt32 ulInputWordPos : Assembly
    UInt32 ulInputWordLen : Assembly
    UInt32 ulInputSentPos : Assembly
    UInt32 ulInputSentLen : Assembly
    Int32 lBookmarkId : Assembly
    UInt16 PhonemeId : Assembly
    Int32 VisemeId : Assembly
    UInt32 dwReserved1 : Assembly
    UInt32 dwReserved2 : Assembly
Class Microsoft.Speech.Internal.SapiInterop.SPWAVEFORMATEX: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 cbUsed : Public
    System.Guid Guid : Public
    UInt16 wFormatTag : Public
    UInt16 nChannels : Public
    UInt32 nSamplesPerSec : Public
    UInt32 nAvgBytesPerSec : Public
    UInt16 nBlockAlign : Public
    UInt16 wBitsPerSample : Public
    UInt16 cbSize : Public
Interface Microsoft.Speech.Internal.SapiInterop.ISpCategory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetType(SPCATEGORYTYPE&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPrefix(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPrefix(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetIsPrefixRequired(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIsPrefixRequired(Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetState(SPCATEGORYSTATE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetState(SPCATEGORYSTATE&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetName(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetName(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetIcon(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIcon(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpObjectTokenCategory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.ObjectTokens.ISpDataKey
  Methods:
    SetData(String(HasFieldMarshal), UInt32, Byte[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetData(String(HasFieldMarshal), UInt32&, Byte[](Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStringValue(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringValue(String(HasFieldMarshal), String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDWORD(String(HasFieldMarshal), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDWORD(String(HasFieldMarshal), UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateKey(String(HasFieldMarshal), ISpDataKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteKey(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteValue(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumKeys(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumValues(UInt32, String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetId(String(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetId(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot14(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EnumTokens(String(HasFieldMarshal), String(HasFieldMarshal), IEnumSpObjectTokens&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDefaultTokenId(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.IEnumSpObjectTokens: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    Slot1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Item(UInt32, ISpObjectToken&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCount(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpGrammarBuilder: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    Slot1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecoGrammar: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpGrammarBuilder
  Methods:
    Slot1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot9(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadCmdFromFile(String(HasFieldMarshal), SPLOADOPTIONS): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot12(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot13(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadCmdFromMemory(IntPtr, SPLOADOPTIONS): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot15(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetRuleState(String(HasFieldMarshal), IntPtr, SPRULESTATE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot17(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadDictation(String(HasFieldMarshal), SPLOADOPTIONS): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot19(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDictationState(SPRULESTATE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetWordSequenceData(String(HasFieldMarshal), UInt32, SPTEXTSELECTIONINFO&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTextSelection(SPTEXTSELECTIONINFO&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsPronounceable(String(HasFieldMarshal), SPWORDPRONOUNCEABLE&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGrammarState(SPGRAMMARSTATE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot25(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot26(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecoGrammar2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetRules(IntPtr&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadCmdFromFile2(String(HasFieldMarshal), SPLOADOPTIONS, String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadCmdFromMemory2(IntPtr, SPLOADOPTIONS, String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetRulePriority(String(HasFieldMarshal), UInt32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetRuleWeight(String(HasFieldMarshal), UInt32, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDictationWeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGrammarLoader(ISpGrammarResourceLoader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecoContext: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpEventSource
    Microsoft.Speech.Internal.SapiInterop.ISpNotifySource
  Methods:
    SetNotifySink(ISpNotifySink): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetNotifyWindowMessage(UInt32, UInt32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WaitForNotifyEvent(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInterest(UInt64, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEvents(UInt32, SPEVENT&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRecognizer(ISpRecognizer&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGrammar(UInt64, ISpRecoGrammar&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStatus(SPRECOCONTEXTSTATUS&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMaxAlternates(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMaxAlternates(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAudioOptions(SPAUDIOOPTIONS, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot17(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot18(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Bookmark(SPBOOKMARKOPTIONS, UInt64, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot20(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Pause(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Resume(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot23(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot24(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot25(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot26(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetContextState(SPCONTEXTSTATE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot28(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecoContext2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetGrammarOptions(SPGRAMMAROPTIONS): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAdaptationData2(String(HasFieldMarshal), UInt32, String(HasFieldMarshal), SPADAPTATIONSETTINGS, SPADAPTATIONRELEVANCE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpProperties: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetPropertyNum(String(HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyNum(String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyString(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyString(String(HasFieldMarshal), String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecognizer: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpProperties
  Methods:
    SetPropertyNum(String(HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyNum(String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPropertyString(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPropertyString(String(HasFieldMarshal), String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetRecognizer(ISpObjectToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRecognizer(ISpObjectToken&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInput(Object(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot9(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateRecoContext(ISpRecoContext&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot11(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot12(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot13(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRecoState(SPRECOSTATE&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetRecoState(SPRECOSTATE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStatus(SPRECOGNIZERSTATUS&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFormat(SPSTREAMFORMATTYPE, Guid&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsUISupported(String(HasFieldMarshal), IntPtr, UInt32, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayUI(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal), IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmulateRecognition(ISpPhrase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecognizer2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    EmulateRecognitionEx(ISpPhrase, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTrainingState(Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetAcousticModelAdaptation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpPhoneticAlphabetSelection: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    IsAlphabetUPS(Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAlphabetToUPS(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpeechRecognizer: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Properties:
    System.Object Slot1 'get set' : 
    System.Object Slot2 'get set' : 
    System.Object Slot3 'get set' : 
    System.Object Slot4 'get set' : 
    System.Object Slot5 'get ' : 
    System.Object Slot6 'get set' : 
    System.Object Slot7 'get set' : 
    System.Object Slot8 'get ' : 
  Methods:
    set_Slot1(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Slot2(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Slot3(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Slot4(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Slot6(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Slot7(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    EmulateRecognition(Object, Object&, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot11(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot12(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot13(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot14(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot15(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot17(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot18(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot19(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot20(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpPhrase: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSerializedPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetText(UInt32, UInt32, Boolean(HasFieldMarshal), String&(Out, HasFieldMarshal), Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discard(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecoResult: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpPhrase
  Methods:
    GetPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSerializedPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetText(UInt32, UInt32, Boolean(HasFieldMarshal), String&(Out, HasFieldMarshal), Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discard(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAlternates(Int32, Int32, Int32, IntPtr[](Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAudio(UInt32, UInt32, ISpStreamFormat&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Serialize(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot11(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpPhraseAlt: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpPhrase
  Methods:
    GetPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSerializedPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetText(UInt32, UInt32, Boolean(HasFieldMarshal), String&(Out, HasFieldMarshal), Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discard(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAltInfo(ISpPhrase&(Out), UInt32&(Out), UInt32&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Commit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpRecoResult2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpRecoResult
    Microsoft.Speech.Internal.SapiInterop.ISpPhrase
  Methods:
    GetPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSerializedPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetText(UInt32, UInt32, Boolean(HasFieldMarshal), String&(Out, HasFieldMarshal), Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discard(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAlternates(Int32, Int32, Int32, IntPtr[](Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAudio(UInt32, UInt32, ISpStreamFormat&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Serialize(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot11(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CommitAlternate(ISpPhraseAlt, ISpRecoResult&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CommitText(UInt32, UInt32, String(HasFieldMarshal), SPCOMMITFLAGS): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTextFeedback(String(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpXMLRecoResult: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpRecoResult
    Microsoft.Speech.Internal.SapiInterop.ISpPhrase
  Methods:
    GetPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSerializedPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetText(UInt32, UInt32, Boolean(HasFieldMarshal), String&(Out, HasFieldMarshal), Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discard(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAlternates(Int32, Int32, Int32, IntPtr[](Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAudio(UInt32, UInt32, ISpStreamFormat&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Serialize(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot11(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetXMLResult(String&(Out, HasFieldMarshal), SPXMLRESULTOPTIONS): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetXMLErrorInfo(SPSEMANTICERRORINFO&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpPhraseEx: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpPhrase
  Methods:
    GetPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSerializedPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetText(UInt32, UInt32, Boolean(HasFieldMarshal), String&(Out, HasFieldMarshal), Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discard(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetXMLResult(String&(Out, HasFieldMarshal), SPXMLRESULTOPTIONS): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetXMLErrorInfo(SPSEMANTICERRORINFO&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpDisplayAlternates: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetDisplayAlternates(IntPtr, UInt32, IntPtr[](Out, HasFieldMarshal), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpGrammarResourceLoader: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    LoadResource(String, Boolean, IStream&(Out), String&, Int16&, String&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLocalCopy(Uri, String&(Out), Uri&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReleaseLocalCopy(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpEMMAOptions: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetEMMAOptions(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEMMAOptions(UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SapiInterop.SpUnCompressedLexicon: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Microsoft.Speech.Internal.SapiInterop.SPWORDPRONUNCIATION: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr pNextWordPronunciation : Public
    UInt32 eLexiconType : Public
    UInt16 langId : Public
    UInt16 wPronunciationFlags : Public
    UInt32 ePartOfSpeech : Public
Struct Microsoft.Speech.Internal.SapiInterop.SPWORDPRONUNCIATIONLIST: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 ulSize : Public
    IntPtr pvBuffer : Public
    IntPtr pFirstWordPronunciation : Public
Interface Microsoft.Speech.Internal.SapiInterop.ISpLexicon2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetPronunciations(String, UInt16, UInt32, SPWORDPRONUNCIATIONLIST&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadLexiconFromFile(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadLexiconFromStream(IStream, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SaveLexiconToFile(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SaveLexiconToStream(IStream, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpPhraseBuilder: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpPhrase
  Methods:
    GetPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSerializedPhrase(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetText(UInt32, UInt32, Boolean(HasFieldMarshal), String&(Out, HasFieldMarshal), Byte&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discard(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InitFromPhrase(SPPHRASE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot9(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot10(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpSerializeState: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetSerializedState(IntPtr&, UInt32&, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSerializedState(IntPtr, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SapiInterop.SpInprocRecognizer: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Internal.SapiInterop.SpPhraseBuilder: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Internal.SapiInterop.SpObjectToken: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Internal.SapiInterop.SpObjectTokenCategory: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Internal.SapiInterop.SapiRecoContext: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpRecoContext, Microsoft.Speech.Internal.SapiInterop.SapiProxy): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Speech.Internal.SapiInterop.ISpRecoContext RecoContext 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetInterest(UInt64, UInt64): PrivateScope, Assembly, HideBySig
    CreateGrammar(UInt64): PrivateScope, Assembly, HideBySig
    SetMaxAlternates(UInt32): PrivateScope, Assembly, HideBySig
    SetAudioOptions(SPAUDIOOPTIONS, IntPtr, IntPtr): PrivateScope, Assembly, HideBySig
    Bookmark(SPBOOKMARKOPTIONS, UInt64, IntPtr): PrivateScope, Assembly, HideBySig
    Resume(): PrivateScope, Assembly, HideBySig
    SetContextState(SPCONTEXTSTATE): PrivateScope, Assembly, HideBySig
    CreateEventNotify(AsyncSerializedWorker, Boolean): PrivateScope, Assembly, HideBySig
    DisposeEventNotify(EventNotify): PrivateScope, Assembly, HideBySig
    SetGrammarOptions(SPGRAMMAROPTIONS): PrivateScope, Assembly, HideBySig
    SetAlphabetToUPS(Boolean): PrivateScope, Assembly, HideBySig
    get_RecoContext(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.SapiInterop.SpStreamWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.InteropServices.ComTypes.IStream
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[], Int32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(Byte[], Int32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Seek(Int64, Int32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetSize(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(IStream, Int64, IntPtr, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Commit(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Revert(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LockRegion(Int64, Int64, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UnlockRegion(Int64, Int64, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Stat(STATSTG&(Out), Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(IStream&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Internal.SapiInterop.SpAudioStreamWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.SapiInterop.SpStreamWrapper
    Void .ctor(System.IO.Stream, Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpStreamFormat
  Methods:
    GetStreamOffsets(Stream): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.SapiInterop.SapiStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Internal.SapiInterop.SPFILEMODE, System.Guid ByRef, IntPtr, UInt64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.InteropServices.ComTypes.IStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SapiInterop.ISpStream
    Microsoft.Speech.Internal.SapiInterop.ISpStreamFormat
    System.Runtime.InteropServices.ComTypes.IStream
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(Byte[], Int32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Seek(Int64, Int32, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetSize(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(IStream, Int64, IntPtr, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Commit(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Revert(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LockRegion(Int64, Int64, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UnlockRegion(Int64, Int64, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Stat(STATSTG&(Out), Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(IStream&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFormat(Guid&(Out), IntPtr&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetBaseStream(IStream, Guid&, IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Slot14(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BindToFile(String, SPFILEMODE, Guid&, IntPtr, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetBaseStream(Stream, Guid&, IntPtr): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Internal.SapiInterop.SpeechEvent: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Speech.Internal.SapiInterop.SPEVENTENUM EventId 'get ' : 
    UInt64 AudioStreamOffset 'get ' : 
    UInt64 WParam 'get ' : 
    UInt64 LParam 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryCreateSpeechEvent(ISpEventSource, Boolean, SpeechAudioFormatInfo): PrivateScope, Assembly, Static, HideBySig
    get_EventId(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioStreamOffset(): PrivateScope, Assembly, HideBySig, SpecialName
    get_WParam(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LParam(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE SPET_LPARAM_IS_UNDEFINED = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE SPET_LPARAM_IS_TOKEN = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE SPET_LPARAM_IS_OBJECT = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE SPET_LPARAM_IS_POINTER = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPEVENTLPARAMTYPE SPET_LPARAM_IS_STRING = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.SpNormalizationList: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 ulSize : Assembly
    IntPtr ppszzNormalizedList : Assembly
Struct Microsoft.Speech.Internal.SapiInterop.BargeInType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.BargeInType SP_BITYPE_SPEECH = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.BargeInType SP_BITYPE_GRAMMAR = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.BargeInSensitivity: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.BargeInSensitivity SP_BISENS_LOW = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.BargeInSensitivity SP_BISENS_MEDIUM = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.BargeInSensitivity SP_BISENS_HIGH = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SapiInterop.PromptStatus: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.PromptStatus SP_PROMPT_UNKNOWN = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.PromptStatus SP_PROMPT_RUNNING = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.PromptStatus SP_PROMPT_STOPPING = 2 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SapiInterop.ISpEnginePronunciation: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    Normalize(String(In, HasFieldMarshal), String(In, HasFieldMarshal), String(In, HasFieldMarshal), UInt16(In), SpNormalizationList&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpSapiPromptStatus: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetPromptStatus(PromptStatus, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpSapiBargeIn: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetBargeInType(BargeInType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBargeInSensitivity(BargeInSensitivity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Microsoft.Speech.Internal.SapiInterop.SPGCONTENTPERSISTTYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SapiInterop.SPGCONTENTPERSISTTYPE SPGCPT_Binary = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGCONTENTPERSISTTYPE SPGCPT_Source_SAPI_XML = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SapiInterop.SPGCONTENTPERSISTTYPE SPGCPT_Source_SRGS_XML = 2 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SapiInterop.ISpGrammarContentPersist: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    LoadFromStream(IStream, SPGCONTENTPERSISTTYPE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SaveToStream(IStream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Internal.SapiInterop.ISpGrammarContent: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    AddCustomDataForEngine(ISpRecoContext, Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot5(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot6(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot7(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Slot8(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SapiInterop.SpGrammarContent: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Internal.SrgsCompiler.Arc: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Arc): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Arc, Microsoft.Speech.Internal.SrgsCompiler.State, Microsoft.Speech.Internal.SrgsCompiler.State): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Arc, Microsoft.Speech.Internal.SrgsCompiler.State, Microsoft.Speech.Internal.SrgsCompiler.State, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Internal.SrgsCompiler.Rule, Microsoft.Speech.Internal.StringBlob, Single, Int32, Microsoft.Speech.Internal.SrgsCompiler.Rule, Microsoft.Speech.Internal.SrgsParser.MatchMode, Boolean ByRef): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Single, Int32, Int32, Microsoft.Speech.Internal.SrgsParser.MatchMode, Boolean ByRef): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[Microsoft.Speech.Internal.SrgsCompiler.Arc]
    System.IComparable`1[Microsoft.Speech.Internal.SrgsCompiler.Arc]
  Properties:
    Boolean IsEpsilonTransition 'get ' : 
    Boolean IsPropertylessTransition 'get ' : 
    Int32 SemanticTagCount 'get ' : 
    Microsoft.Speech.Internal.SrgsCompiler.State Start 'get set' : 
    Microsoft.Speech.Internal.SrgsCompiler.State End 'get set' : 
    Int32 WordId 'get ' : 
    Microsoft.Speech.Internal.SrgsCompiler.Rule RuleRef 'get set' : 
    Single Weight 'get set' : 
    Int32 SpecialTransitionIndex 'get ' : 
  Methods:
    CompareTo(Arc): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareContent(Arc, Arc): PrivateScope, Assembly, Static, HideBySig
    CompareContentForKey(Arc, Arc): PrivateScope, Assembly, Static, HideBySig
    Serialize(StreamMarshaler, Boolean, UInt32): PrivateScope, Assembly, HideBySig
    SerializeExtraEpsilonWithTag(StreamMarshaler, Arc, Boolean, UInt32): PrivateScope, Assembly, Static, HideBySig
    SetArcIndexForTag(Int32, UInt32, Boolean): PrivateScope, Assembly, HideBySig
    SetEndArcIndexForTags(): PrivateScope, Assembly, HideBySig
    CompareForDuplicateInputTransitions(Arc, Arc): PrivateScope, Assembly, Static, HideBySig
    CompareForDuplicateOutputTransitions(Arc, Arc): PrivateScope, Assembly, Static, HideBySig
    CompareIdenticalTransitions(Arc, Arc): PrivateScope, Assembly, Static, HideBySig
    AddStartTag(Tag): PrivateScope, Assembly, HideBySig
    AddEndTag(Tag): PrivateScope, Assembly, HideBySig
    ClearTags(): PrivateScope, Assembly, HideBySig
    CopyTags(Arc, Arc, Direction): PrivateScope, Assembly, Static, HideBySig
    CloneTags(Arc, List`1, Dictionary`2, Backend): PrivateScope, Assembly, HideBySig
    SameTags(Arc): PrivateScope, Assembly, HideBySig
    ConnectStates(): PrivateScope, Assembly, HideBySig
    get_IsEpsilonTransition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsPropertylessTransition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SemanticTagCount(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Start(State): PrivateScope, Assembly, HideBySig, SpecialName
    get_Start(): PrivateScope, Assembly, HideBySig, SpecialName
    set_End(State): PrivateScope, Assembly, HideBySig, SpecialName
    get_End(): PrivateScope, Assembly, HideBySig, SpecialName
    get_WordId(): PrivateScope, Assembly, HideBySig, SpecialName
    set_RuleRef(Rule): PrivateScope, Assembly, HideBySig, SpecialName
    get_RuleRef(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Weight(Single): PrivateScope, Assembly, HideBySig, SpecialName
    get_Weight(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SpecialTransitionIndex(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SrgsCompiler.Direction: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsCompiler.Direction Right = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.Direction Left = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.SrgsCompiler.ArcList: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.RedBackList
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.SrgsCompiler.Arc First 'get ' : 
  Methods:
    ToList(): PrivateScope, Assembly, HideBySig
    get_First(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.SrgsCompiler.Backend: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.StreamMarshaler): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.StringBlob Words 'get ' : 
    Microsoft.Speech.Internal.StringBlob Symbols 'get ' : 
    System.Uri LexiconUri 'get set' : 
    Microsoft.Speech.Internal.ResourceLoader ResourceLoader 'get set' : 
    Int32 LangId 'get set' : 
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions GrammarOptions 'get set' : 
    Microsoft.Speech.Internal.SrgsParser.GrammarType GrammarMode 'set' : 
    Microsoft.Speech.Internal.AlphabetType Alphabet 'get set' : 
    System.Collections.ObjectModel.Collection`1[System.String] GlobalTags 'get set' : 
  Methods:
    Optimize(): PrivateScope, Assembly, HideBySig
    Commit(StreamMarshaler): PrivateScope, Assembly, HideBySig
    CombineGrammar(String, Backend, Backend): PrivateScope, Assembly, Static, HideBySig
    CreateNewState(Rule): PrivateScope, Assembly, HideBySig
    DeleteState(State): PrivateScope, Assembly, HideBySig
    MoveInputTransitionsAndDeleteState(State, State): PrivateScope, Assembly, HideBySig
    MoveOutputTransitionsAndDeleteState(State, State): PrivateScope, Assembly, HideBySig
    CreateRule(String, SPCFGRULEATTRIBUTES): PrivateScope, Assembly, HideBySig
    FindRule(String): PrivateScope, Assembly, HideBySig
    WordTransition(String, Single, Int32): PrivateScope, Assembly, HideBySig
    SubsetTransition(String, MatchMode): PrivateScope, Assembly, HideBySig
    RuleTransition(Rule, Rule, Single): PrivateScope, Assembly, HideBySig
    EpsilonTransition(Single): PrivateScope, Assembly, HideBySig
    AddSemanticInterpretationTag(Arc, CfgProperty): PrivateScope, Assembly, HideBySig
    AddPropertyTag(Arc, Arc, CfgProperty): PrivateScope, Assembly, HideBySig
    CloneSubGraph(State, State, State): PrivateScope, Assembly, HideBySig
    CloneSubGraph(Rule, Backend, Backend, Dictionary`2, Boolean): PrivateScope, Assembly, HideBySig
    DeleteSubGraph(State): PrivateScope, Assembly, HideBySig
    SetRuleAttributes(Rule, SPCFGRULEATTRIBUTES): PrivateScope, Assembly, HideBySig
    SetBasePath(String): PrivateScope, Assembly, HideBySig
    NormalizeTokenWhiteSpace(String): PrivateScope, Assembly, Static, HideBySig
    get_Words(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Symbols(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LexiconUri(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LexiconUri(Uri): PrivateScope, Assembly, HideBySig, SpecialName
    get_ResourceLoader(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ResourceLoader(ResourceLoader): PrivateScope, Assembly, HideBySig, SpecialName
    InitFromBinaryGrammar(StreamMarshaler): PrivateScope, Assembly, HideBySig
    AddState(State): PrivateScope, Assembly, HideBySig
    get_LangId(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LangId(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_GrammarOptions(): PrivateScope, Assembly, HideBySig, SpecialName
    set_GrammarOptions(GrammarOptions): PrivateScope, Assembly, HideBySig, SpecialName
    set_GrammarMode(GrammarType): PrivateScope, Assembly, HideBySig, SpecialName
    set_Alphabet(AlphabetType): PrivateScope, Assembly, HideBySig, SpecialName
    get_Alphabet(): PrivateScope, Assembly, HideBySig, SpecialName
    get_GlobalTags(): PrivateScope, Assembly, HideBySig, SpecialName
    set_GlobalTags(Collection`1): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SrgsCompiler.CfgArc: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.CfgArc): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean RuleRef 'get set' : 
    Boolean LastArc 'get set' : 
    Boolean HasSemanticTag 'get set' : 
    Boolean LowConfRequired 'get set' : 
    Boolean HighConfRequired 'get set' : 
    UInt32 TransitionIndex 'get set' : 
    UInt32 MatchMode 'set' : 
    UInt32 NextStartArcIndex 'get set' : 
  Methods:
    get_RuleRef(): PrivateScope, Assembly, HideBySig, SpecialName
    set_RuleRef(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_LastArc(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LastArc(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasSemanticTag(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HasSemanticTag(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_LowConfRequired(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LowConfRequired(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HighConfRequired(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HighConfRequired(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_TransitionIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TransitionIndex(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    set_MatchMode(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_NextStartArcIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_NextStartArcIndex(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.SrgsCompiler.CfgGrammar: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Guid _SPGDF_ContextFree : Assembly, Static
    Microsoft.Speech.Internal.SrgsCompiler.Rule SPRULETRANS_TEXTBUFFER : Assembly, Static, InitOnly
    Microsoft.Speech.Internal.SrgsCompiler.Rule SPRULETRANS_WILDCARD : Assembly, Static, InitOnly
    Microsoft.Speech.Internal.SrgsCompiler.Rule SPRULETRANS_DICTATION : Assembly, Static, InitOnly
    Int32 INFINITE = -1 : Assembly, Static, Literal, HasDefault
    Int32 SPTEXTBUFFERTRANSITION = 4194303 : Assembly, Static, Literal, HasDefault
    Int32 SPWILDCARDTRANSITION = 4194302 : Assembly, Static, Literal, HasDefault
    Int32 SPDICTATIONTRANSITION = 4194301 : Assembly, Static, Literal, HasDefault
    Int32 MAX_TRANSITIONS_COUNT = 256 : Assembly, Static, Literal, HasDefault
    Single DEFAULT_WEIGHT = 1 : Assembly, Static, Literal, HasDefault
    Int32 SP_LOW_CONFIDENCE = -1 : Assembly, Static, Literal, HasDefault
    Int32 SP_NORMAL_CONFIDENCE = 0 : Assembly, Static, Literal, HasDefault
    Int32 SP_HIGH_CONFIDENCE = 1 : Assembly, Static, Literal, HasDefault
  Properties:
    UInt32 NextHandle 'get ' : 
  Methods:
    ConvertCfgHeader(StreamMarshaler): PrivateScope, Assembly, Static, HideBySig
    ConvertCfgHeader(StreamMarshaler, Boolean, Boolean, CfgSerializedHeader&(Out)): PrivateScope, Assembly, Static, HideBySig
    get_NextHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SrgsCompiler.CfgGrammar+CfgHeader: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid FormatId : Assembly
    System.Guid GrammarGUID : Assembly
    UInt16 langId : Assembly
    UInt16 pszGlobalTags : Assembly
    Int32 cArcsInLargestState : Assembly
    Microsoft.Speech.Internal.StringBlob pszWords : Assembly
    Microsoft.Speech.Internal.StringBlob pszSymbols : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.CfgRule[] rules : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.CfgArc[] arcs : Assembly
    Single[] weights : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.CfgSemanticTag[] tags : Assembly
    UInt32 ulRootRuleIndex : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions GrammarOptions : Assembly
    Microsoft.Speech.Internal.SrgsParser.GrammarType GrammarMode : Assembly
    System.String BasePath : Assembly
    CfgHeaderExtension HeaderExtension : Assembly
Class Microsoft.Speech.Internal.SrgsCompiler.CfgGrammar+CfgSerializedHeader: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulTotalSerializedSize : Assembly
    System.Guid FormatId : Assembly
    System.Guid GrammarGUID : Assembly
    UInt16 LangID : Assembly
    UInt16 pszSemanticInterpretationGlobals : Assembly
    Int32 cArcsInLargestState : Assembly
    Int32 cchWords : Assembly
    Int32 cWords : Assembly
    UInt32 pszWords : Assembly
    Int32 cchSymbols : Assembly
    UInt32 pszSymbols : Assembly
    Int32 cRules : Assembly
    UInt32 pRules : Assembly
    Int32 cArcs : Assembly
    UInt32 pArcs : Assembly
    UInt32 pWeights : Assembly
    Int32 cTags : Assembly
    UInt32 tags : Assembly
    UInt32 ulReservered1 : Assembly
    UInt32 ulReservered2 : Assembly
    Int32 cScripts : Assembly
    UInt32 pScripts : Assembly
    Int32 cIL : Assembly
    UInt32 pIL : Assembly
    Int32 cPDB : Assembly
    UInt32 pPDB : Assembly
    UInt32 ulRootRuleIndex : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions GrammarOptions : Assembly
    UInt32 cBasePath : Assembly
    UInt32 GrammarMode : Assembly
    UInt32 ulFirstPrivateBlobOffset : Assembly
    UInt32 ulCFGHeaderExtension : Assembly
  Methods:
    IsCfg(Stream, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.SrgsCompiler.CfgGrammar+CfgHeaderExtension: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 ulHeaderExtensionSize : Assembly
    UInt32 ulPronunciationBlobOffset : Assembly
Class Microsoft.Speech.Internal.SrgsCompiler.CfgGrammar+CfgProperty: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String _pszName : Assembly
    UInt32 _ulId : Assembly
    System.Runtime.InteropServices.VarEnum _comType : Assembly
    System.Object _comValue : Assembly
Struct Microsoft.Speech.Internal.SrgsCompiler.CfgRule: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 _flag : Assembly
    Int32 _nameOffset : Assembly
    Int32 _id : Assembly
  Properties:
    Boolean TopLevel 'get set' : 
    Boolean DefaultActive 'set' : 
    Boolean PropRule 'set' : 
    Boolean Import 'get set' : 
    Boolean Export 'get set' : 
    Boolean HasResources 'get ' : 
    Boolean Dynamic 'get set' : 
    Boolean HasDynamicRef 'get set' : 
    UInt32 FirstArcIndex 'get set' : 
    Boolean DirtyRule 'set' : 
  Methods:
    get_TopLevel(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TopLevel(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    set_DefaultActive(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    set_PropRule(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Import(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Import(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Export(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Export(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasResources(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Dynamic(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Dynamic(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasDynamicRef(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HasDynamicRef(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_FirstArcIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_FirstArcIndex(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    set_DirtyRule(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_TopLevel = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_Active = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_Export = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_Import = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_Interpreter = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_Dynamic = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_Root = 64 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_AutoPause = 65536 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES SPRAF_UserDelimited = 131072 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SrgsCompiler.CfgSemanticTag: AutoLayout, AnsiClass, Class, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.CfgSemanticTag): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.StringBlob, CfgProperty): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 _nameOffset : Assembly
    UInt32 _propId : Assembly
    Int32 _valueOffset : Assembly
    Int32 _varInt : Assembly
    Double _varDouble : Assembly
  Properties:
    UInt32 StartArcIndex 'get set' : 
    Boolean StartParallelEpsilonArc 'get set' : 
    UInt32 EndArcIndex 'get set' : 
    Boolean EndParallelEpsilonArc 'get set' : 
    System.Runtime.InteropServices.VarEnum PropVariantType 'get set' : 
    UInt32 ArcIndex 'get set' : 
  Methods:
    get_StartArcIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_StartArcIndex(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_StartParallelEpsilonArc(): PrivateScope, Assembly, HideBySig, SpecialName
    set_StartParallelEpsilonArc(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_EndArcIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_EndArcIndex(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_EndParallelEpsilonArc(): PrivateScope, Assembly, HideBySig, SpecialName
    set_EndParallelEpsilonArc(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_PropVariantType(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PropVariantType(VarEnum): PrivateScope, Assembly, HideBySig, SpecialName
    get_ArcIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ArcIndex(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions KeyValuePairs = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions MssV1 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions KeyValuePairSrgs = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions IpaPhoneme = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions W3cV1 = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions STG = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions TagFormat = 11 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions SemanticInterpretation = 9 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.SrgsCompiler.Graph: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Microsoft.Speech.Internal.SrgsCompiler.State]
    System.Collections.IEnumerable
  Methods:
    Add(State): PrivateScope, Assembly, HideBySig
    Remove(State): PrivateScope, Assembly, HideBySig
    CreateNewState(Rule): PrivateScope, Assembly, HideBySig
    DeleteState(State): PrivateScope, Assembly, HideBySig
    Optimize(): PrivateScope, Assembly, HideBySig
    MoveInputTransitionsAndDeleteState(State, State): PrivateScope, Assembly, HideBySig
    MoveOutputTransitionsAndDeleteState(State, State): PrivateScope, Assembly, HideBySig
    MoveSemanticTagLeft(Arc): PrivateScope, Assembly, Static, HideBySig
    MoveSemanticTagRight(Arc): PrivateScope, Assembly, Static, HideBySig
    CanTagsBeMoved(Arc, Arc): PrivateScope, Assembly, Static, HideBySig
Interface Microsoft.Speech.Internal.SrgsParser.IElement: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    PostParse(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SrgsCompiler.ParseElement: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Rule): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
  Fields:
    Int32 _confidence : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.Rule _rule : Assembly
Class Microsoft.Speech.Internal.SrgsCompiler.ParseElementCollection: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElement
  Methods:
    AddSemanticInterpretationTag(CfgProperty): PrivateScope, Assembly, HideBySig
    AddSementicPropertyTag(CfgProperty): PrivateScope, Assembly, HideBySig
    AddArc(Arc): PrivateScope, Assembly, HideBySig
    AddArc(Arc, Arc): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Struct Microsoft.Speech.Internal.SrgsCompiler.ParseElementCollection+Position: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Position Before = 0 : Public, Static, Literal, HasDefault
    Position After = 1 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SrgsParser.IItem: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
Class Microsoft.Speech.Internal.SrgsCompiler.Item: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElementCollection
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Backend, Microsoft.Speech.Internal.SrgsCompiler.Rule, Int32, Int32, Single, Single): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IItem
Interface Microsoft.Speech.Internal.SrgsParser.IGrammar: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
  Properties:
    System.String Root 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat TagFormat 'get set' : 
    System.Collections.ObjectModel.Collection`1[System.String] GlobalTags 'get set' : 
    Microsoft.Speech.Internal.SrgsParser.GrammarType Mode 'set' : 
    System.Globalization.CultureInfo Culture 'set' : 
    System.Uri XmlBase 'set' : 
    Microsoft.Speech.Internal.AlphabetType PhoneticAlphabet 'set' : 
    System.Uri LexiconUri 'get set' : 
  Methods:
    CreateRule(String, RulePublic, RuleDynamic): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    set_Root(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Root(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TagFormat(SrgsTagFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TagFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalTags(Collection`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalTags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Mode(GrammarType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_XmlBase(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PhoneticAlphabet(AlphabetType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LexiconUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LexiconUri(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Speech.Internal.SrgsCompiler.GrammarElement: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElement
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Backend): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IGrammar
  Properties:
    System.Collections.Generic.List`1[Microsoft.Speech.Internal.SrgsCompiler.Rule] UndefRules 'get ' : 
    Microsoft.Speech.Internal.SrgsCompiler.Backend Backend 'get ' : 
  Methods:
    get_UndefRules(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Backend(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.SrgsCompiler.Lexicon: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.ResourceLoader, Int32, Microsoft.Speech.Internal.AlphabetType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Uri LexiconUri 'set' : 
    Boolean HasPronunciation 'get ' : 
  Methods:
    AddWord(String): PrivateScope, Assembly, HideBySig
    SerializedSize(String[]): PrivateScope, Assembly, HideBySig
    Clear(): PrivateScope, Assembly, HideBySig
    DumpBinary(Stream, String[]): PrivateScope, Assembly, HideBySig
    set_LexiconUri(Uri): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasPronunciation(): PrivateScope, Assembly, HideBySig, SpecialName
Interface Microsoft.Speech.Internal.SrgsParser.IOneOf: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
Class Microsoft.Speech.Internal.SrgsCompiler.OneOf: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElementCollection
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Rule, Microsoft.Speech.Internal.SrgsCompiler.Backend): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IOneOf
  Methods:
    AddArc(Arc, Arc): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Interface Microsoft.Speech.Internal.SrgsParser.IPropertyTag: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
  Methods:
    NameValue(IElement, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SrgsCompiler.PropertyTag: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElement
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.ParseElement, Microsoft.Speech.Internal.SrgsCompiler.Backend): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IPropertyTag
Interface Microsoft.Speech.Internal.SrgsParser.IRule: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
Class Microsoft.Speech.Internal.SrgsCompiler.Rule: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElementCollection
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Backend, System.String, Microsoft.Speech.Internal.SrgsCompiler.CfgRule, Int32, Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions, Int32 ByRef): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Backend, System.String, Int32, Microsoft.Speech.Internal.SrgsCompiler.SPCFGRULEATTRIBUTES, Int32, Int32, Microsoft.Speech.Internal.SrgsCompiler.GrammarOptions, Int32 ByRef): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IRule
    System.IComparable`1[Microsoft.Speech.Internal.SrgsCompiler.Rule]
  Fields:
    Microsoft.Speech.Internal.SrgsCompiler.CfgRule _cfgRule : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.State _firstState : Assembly
    Boolean _fHasExitPath : Assembly
    Boolean _fHasDynamicRef : Assembly
    Boolean _fIsEpsilonRule : Assembly
    Int32 _iSerialize : Assembly
    Int32 _iSerialize2 : Assembly
    System.Collections.Generic.List`1[Microsoft.Speech.Internal.SrgsCompiler.Rule] _listRules : Assembly
    Boolean _fStaticRule : Assembly
  Properties:
    System.String Name 'get ' : 
  Methods:
    Validate(): PrivateScope, Assembly, HideBySig
    PopulateDynamicRef(Int32&): PrivateScope, Assembly, HideBySig
    Clone(StringBlob, String): PrivateScope, Assembly, HideBySig
    Serialize(StreamMarshaler): PrivateScope, Assembly, HideBySig
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
Interface Microsoft.Speech.Internal.SrgsParser.IRuleRef: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
Class Microsoft.Speech.Internal.SrgsCompiler.RuleRef: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElement
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.ParseElementCollection, Microsoft.Speech.Internal.SrgsCompiler.Backend, System.Uri, System.Collections.Generic.List`1[Microsoft.Speech.Internal.SrgsCompiler.Rule], System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IRuleRef
  Properties:
    Microsoft.Speech.Internal.SrgsParser.IRuleRef Null 'get ' : 
    Microsoft.Speech.Internal.SrgsParser.IRuleRef Void 'get ' : 
    Microsoft.Speech.Internal.SrgsParser.IRuleRef Garbage 'get ' : 
  Methods:
    InitSpecialRuleRef(Backend, ParseElementCollection): PrivateScope, Assembly, HideBySig
    get_Null(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Void(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Garbage(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Interface Microsoft.Speech.Internal.SrgsParser.ISemanticTag: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
  Methods:
    Content(IElement, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SrgsCompiler.SemanticTag: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElement
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.ParseElement, Microsoft.Speech.Internal.SrgsCompiler.Backend): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.ISemanticTag
Class Microsoft.Speech.Internal.SrgsCompiler.SrgsCompiler: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CompileStream(XmlReader[], String, Stream, Boolean, Uri, String[], String, GrammarInformation): PrivateScope, Assembly, Static, HideBySig
    CompileStream(SrgsDocument, String, Stream, Boolean, String[], String): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Speech.Internal.SrgsCompiler.RuleScope: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsCompiler.RuleScope PublicRule = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsCompiler.RuleScope PrivateRule = 1 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SrgsParser.IElementFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Speech.Internal.SrgsParser.IGrammar Grammar 'get ' : 
    Microsoft.Speech.Internal.SrgsParser.IRuleRef Null 'get ' : 
    Microsoft.Speech.Internal.SrgsParser.IRuleRef Void 'get ' : 
    Microsoft.Speech.Internal.SrgsParser.IRuleRef Garbage 'get ' : 
  Methods:
    RemoveAllRules(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateText(IElement, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateToken(IElement, String, String, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreatePropertyTag(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSemanticTag(IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateItem(IElement, IRule, Int32, Int32, Single, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateLexicon(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateRuleRef(IElement, Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateRuleRef(IElement, Uri, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InitSpecialRuleRef(IElement, IRuleRef): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateOneOf(IElement, IRule): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSubset(IElement, String, MatchMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Grammar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Null(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Void(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Garbage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AddItem(IOneOf, IItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddElement(IRule, IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddElement(IItem, IElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.SrgsCompiler.SrgsElementCompilerFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Backend): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElementFactory
Class Microsoft.Speech.Internal.SrgsCompiler.State: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Rule, UInt32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Rule, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[Microsoft.Speech.Internal.SrgsCompiler.State]
  Properties:
    Microsoft.Speech.Internal.SrgsCompiler.State Next 'get ' : 
    Microsoft.Speech.Internal.SrgsCompiler.State Prev 'get ' : 
    Int32 NumArcs 'get ' : 
    Int32 NumSemanticTags 'get ' : 
    Microsoft.Speech.Internal.SrgsCompiler.Rule Rule 'get ' : 
    UInt32 Id  'get ' : 
    Microsoft.Speech.Internal.SrgsCompiler.ArcList OutArcs 'get ' : 
    Microsoft.Speech.Internal.SrgsCompiler.ArcList InArcs 'get ' : 
    Int32 SerializeId 'get set' : 
  Methods:
    SerializeStateEntries(StreamMarshaler, Boolean, Single[], UInt32&, Int32&): PrivateScope, Assembly, HideBySig
    SetEndArcIndexForTags(): PrivateScope, Assembly, HideBySig
    Init(): PrivateScope, Assembly, HideBySig
    Add(State): PrivateScope, Assembly, HideBySig
    Remove(): PrivateScope, Assembly, HideBySig
    get_Next(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Prev(): PrivateScope, Assembly, HideBySig, SpecialName
    CheckLeftRecursion(Boolean&(Out)): PrivateScope, Assembly, HideBySig
    get_NumArcs(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NumSemanticTags(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Rule(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Id(): PrivateScope, Assembly, HideBySig, SpecialName
    get_OutArcs(): PrivateScope, Assembly, HideBySig, SpecialName
    get_InArcs(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SerializeId(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_SerializeId(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Internal.SrgsCompiler.State+RecurFlag: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    RecurFlag RF_CHECKED_EPSILON = 1 : Public, Static, Literal, HasDefault
    RecurFlag RF_CHECKED_EXIT_PATH = 2 : Public, Static, Literal, HasDefault
    RecurFlag RF_CHECKED_LEFT_RECURSION = 4 : Public, Static, Literal, HasDefault
    RecurFlag RF_IN_LEFT_RECUR_CHECK = 8 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SrgsParser.ISubset: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
Class Microsoft.Speech.Internal.SrgsCompiler.Subset: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.SrgsCompiler.ParseElement
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.ParseElementCollection, Microsoft.Speech.Internal.SrgsCompiler.Backend, System.String, Microsoft.Speech.Internal.SrgsParser.MatchMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.ISubset
Class Microsoft.Speech.Internal.SrgsCompiler.Tag: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Tag): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Backend, Microsoft.Speech.Internal.SrgsCompiler.CfgSemanticTag): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.SrgsCompiler.Backend, CfgProperty): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[Microsoft.Speech.Internal.SrgsCompiler.Tag]
  Fields:
    Microsoft.Speech.Internal.SrgsCompiler.CfgSemanticTag _cfgTag : Assembly
    Microsoft.Speech.Internal.SrgsCompiler.Backend _be : Assembly
  Methods:
    Serialize(StreamMarshaler): PrivateScope, Assembly, HideBySig
Interface Microsoft.Speech.Internal.SrgsParser.IElementText: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
Struct Microsoft.Speech.Internal.SrgsParser.GrammarType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsParser.GrammarType VoiceGrammar = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.GrammarType DtmfGrammar = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SrgsParser.RuleDynamic: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsParser.RuleDynamic True = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.RuleDynamic False = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.RuleDynamic NotSet = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.SrgsParser.RulePublic: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsParser.RulePublic True = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.RulePublic False = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.RulePublic NotSet = 2 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SrgsParser.IScript: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
  Methods:
    Create(String, RuleMethodScript): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Microsoft.Speech.Internal.SrgsParser.RuleMethodScript: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsParser.RuleMethodScript onInit = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.RuleMethodScript onParse = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.RuleMethodScript onRecognition = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.RuleMethodScript onError = 4 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SrgsParser.ISrgsParser: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Speech.Internal.SrgsParser.IElementFactory ElementFactory 'set' : 
  Methods:
    Parse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    set_ElementFactory(IElementFactory): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Microsoft.Speech.Internal.SrgsParser.MatchMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.SrgsParser.MatchMode AllWords = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.MatchMode Subsequence = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.MatchMode OrderedSubset = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.MatchMode SubsequenceContentRequired = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.SrgsParser.MatchMode OrderedSubsetContentRequired = 7 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Internal.SrgsParser.IToken: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
  Properties:
    System.String Text 'set' : 
    System.String Display 'set' : 
    System.String Pronunciation 'set' : 
  Methods:
    set_Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Display(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Pronunciation(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Speech.Internal.SrgsParser.CreateTokenCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IElement, String, String, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IElement, String, String, String, Single, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Internal.SrgsParser.SrgsDocumentParser: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammar): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.ISrgsParser
  Properties:
    Microsoft.Speech.Internal.SrgsParser.IElementFactory ElementFactory 'set' : 
  Methods:
    Parse(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    set_ElementFactory(IElementFactory): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Microsoft.Speech.Internal.SrgsParser.XmlParser: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.XmlReader, System.Uri): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.ISrgsParser
  Fields:
    System.String emptyNamespace =  : Assembly, Static, Literal, HasDefault
    System.String xmlNamespace = http://www.w3.org/XML/1998/namespace : Assembly, Static, Literal, HasDefault
    System.String srgsNamespace = http://www.w3.org/2001/06/grammar : Assembly, Static, Literal, HasDefault
    System.String sapiNamespace = http://schemas.microsoft.com/Speech/2002/06/SRGSExtensions : Assembly, Static, Literal, HasDefault
    System.String srgsLexiconType = application/vdn.ms-sapi-lex : Assembly, Static, Literal, HasDefault
  Properties:
    Microsoft.Speech.Internal.SrgsParser.IElementFactory ElementFactory 'set' : 
  Methods:
    Parse(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ParseText(IElement, String, String, String, Single, CreateTokenCallback): PrivateScope, Assembly, Static, HideBySig
    ThrowSrgsException(SRID, Object[]): PrivateScope, Assembly, Static, HideBySig
    ThrowSrgsExceptionWithPosition(String, XmlReader, String, Exception): PrivateScope, Assembly, Static, HideBySig
    set_ElementFactory(IElementFactory): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ValidateRuleId(String): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.SrgsParser.XmlParser+ForwardReference: AutoLayout, AnsiClass, Class, NestedAssembly, Serializable, BeforeFieldInit
    Void .ctor(System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String _name : Assembly
    System.String _value : Assembly
Class Microsoft.Speech.Internal.Synthesis.AudioBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.TimeSpan Duration 'get ' : 
    Int64 Position 'get ' : 
    Boolean IsAborted 'get set' : 
    Boolean IsSkipping 'get ' : 
    Int32 CurrentOffset 'get set' : 
    Byte[] WaveFormat 'get ' : 
  Methods:
    Begin(Byte[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    End(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Play(IntPtr, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Play(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Pause(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Resume(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    InjectEvent(TTSEvent): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    WaitUntilDone(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Abort(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ConvertTimeToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    BeginSkip(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetBytesToSkip(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    WaitSkipComplete(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CompleteSkip(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ResetForNewPrompt(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    BeginWaveFile(AudioData, Int32, Int32): PrivateScope, Assembly, HideBySig
    PlayWaveFile(AudioData): PrivateScope, Assembly, HideBySig
    GetWaveFormat(BinaryReader): PrivateScope, Assembly, Static, HideBySig
    WriteWaveHeader(Stream, WAVEFORMATEX, Int64, Int32): PrivateScope, Assembly, Static, HideBySig
    get_Duration(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_Position(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    set_IsAborted(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_IsAborted(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_IsSkipping(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CurrentOffset(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_CurrentOffset(): PrivateScope, Assembly, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
Struct Microsoft.Speech.Internal.Synthesis.WAVEFORMATEX: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 wFormatTag : Assembly
    Int16 nChannels : Assembly
    Int32 nSamplesPerSec : Assembly
    Int32 nAvgBytesPerSec : Assembly
    Int16 nBlockAlign : Assembly
    Int16 wBitsPerSample : Assembly
    Int16 cbSize : Assembly
  Properties:
    Microsoft.Speech.Internal.Synthesis.WAVEFORMATEX Default 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    ToWaveHeader(Byte[]): PrivateScope, Assembly, Static, HideBySig
    AvgBytesPerSec(Byte[], Int32&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    ToBytes(): PrivateScope, Assembly, HideBySig
    ToBytes(IntPtr): PrivateScope, Assembly, Static, HideBySig
    get_Default(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Length(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.Synthesis.AudioFormatConverter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Convert(Byte[], AudioCodec, AudioCodec): PrivateScope, Assembly, Static, HideBySig
    Convert(Int16[], AudioCodec, AudioCodec): PrivateScope, Assembly, Static, HideBySig
    GetRate(AudioCodec): PrivateScope, Assembly, Static, HideBySig
    TypeOf(WAVEFORMATEX): PrivateScope, Assembly, Static, HideBySig
    ConvertLinear2ULaw(Int16[], Int32): PrivateScope, Assembly, Static, HideBySig
    ConvertULaw2Linear(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    ConvertLinear2ALaw(Int16[], Int32): PrivateScope, Assembly, Static, HideBySig
    ConvertALaw2Linear(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Speech.Internal.Synthesis.AudioFormatConverter+WaveFormatTag: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WaveFormatTag WAVE_FORMAT_PCM = 1 : Public, Static, Literal, HasDefault
    WaveFormatTag WAVE_FORMAT_ALAW = 6 : Public, Static, Literal, HasDefault
    WaveFormatTag WAVE_FORMAT_MULAW = 7 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.Synthesis.AudioCodec: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.Synthesis.AudioCodec PCM16 = 128 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.AudioCodec PCM8 = 127 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.AudioCodec G711U = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.AudioCodec G711A = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.AudioCodec Undefined = -1 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.Synthesis.AudioDeviceOut: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.Synthesis.AudioBase
    Void .ctor(Int32, Microsoft.Speech.Internal.IAsyncDispatch): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.TimeSpan Duration 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Begin(Byte[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    End(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Play(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Pause(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Resume(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Abort(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InjectEvent(TTSEvent): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WaitUntilDone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ConvertTimeToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    BeginSkip(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetBytesToSkip(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WaitSkipComplete(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CompleteSkip(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ResetForNewPrompt(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    NumDevices(): PrivateScope, Assembly, Static, HideBySig
    GetDevicedId(String): PrivateScope, Assembly, Static, HideBySig
    GetDeviceName(Int32, String&(Out, HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig
    get_Duration(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.Synthesis.AudioException: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.Synthesis.MMSYSERR): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Internal.Synthesis.AudioFileOut: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.Synthesis.AudioBase
    Void .ctor(System.IO.Stream, Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo, Boolean, Microsoft.Speech.Internal.IAsyncDispatch, System.Threading.WaitCallback): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.TimeSpan Duration 'get ' : 
    Int64 Position 'get ' : 
    Byte[] WaveFormat 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Begin(Byte[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    End(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Play(Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Pause(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Resume(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Abort(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InjectEvent(TTSEvent): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WaitUntilDone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ConvertTimeToBytes(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    BeginSkip(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetBytesToSkip(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WaitSkipComplete(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CompleteSkip(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ResetForNewPrompt(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Duration(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Position(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_WaveFormat(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.Synthesis.ConvertTextFrag: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToSapi(List`1, GCHandle&): PrivateScope, Assembly, Static, HideBySig
    FreeTextSegment(GCHandle&): PrivateScope, Assembly, Static, HideBySig
    SapiVolume(ProsodyNumber): PrivateScope, Assembly, Static, HideBySig
    SapiRate(ProsodyNumber): PrivateScope, Assembly, Static, HideBySig
Interface Microsoft.Speech.Internal.Synthesis.ISsmlParser: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.String Ssml 'get ' : 
  Methods:
    ProcessSpeak(String, String, CultureInfo, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessText(String, Object, FragmentState&, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessAudio(Object, String, String, Int32, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessBreak(Object, FragmentState&, EmphasisBreak, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessDesc(CultureInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessEmphasis(Boolean, EmphasisWord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessMark(Object, FragmentState&, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessTextBlock(Boolean, Object, FragmentState&, CultureInfo, Boolean, VoiceGender, VoiceAge): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndProcessTextBlock(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessPhoneme(FragmentState&, AlphabetType, String, Char[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessProsody(String, String, String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessSayAs(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessSub(String, Object, FragmentState&, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginVoice(String, CultureInfo, VoiceGender, VoiceAge, Int32, Boolean, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndVoice(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessLexicon(Uri, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndSpeakElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessUnknownElement(Object, FragmentState&, XmlReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StartProcessUnknownAttributes(Object, FragmentState&, String, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndProcessUnknownAttributes(Object, FragmentState&, String, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginBackup(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndBackup(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ContainsPexml(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginPromptEngineOutput(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndPromptEngineOutput(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessPromptEngineDatabase(Object, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessPromptEngineDiv(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessPromptEngineId(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginPromptEngineTts(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndPromptEngineTts(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginPromptEngineWithTag(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndPromptEngineWithTag(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginPromptEngineRule(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndPromptEngineRule(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Ssml(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Speech.Internal.Synthesis.LexiconEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Uri, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Uri _uri : Assembly
    System.String _mediaType : Assembly
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Speech.Internal.Synthesis.SsmlXmlAttribute: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String _prefix : Assembly
    System.String _name : Assembly
    System.String _value : Assembly
    System.String _ns : Assembly
Interface Microsoft.Speech.Synthesis.TtsEngine.ITtsEngineSite: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Int32 EventInterest 'get ' : 
    Int32 Actions 'get ' : 
    Int32 Rate 'get ' : 
    Int32 Volume 'get ' : 
  Methods:
    AddEvents(SpeechEventInfo[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSkipInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompleteSkip(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadResource(Uri, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_EventInterest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Actions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Rate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Volume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Speech.Internal.Synthesis.ITtsEventSink: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    AddEvent(TTSEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FlushEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.Synthesis.EngineSite: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.ResourceLoader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Synthesis.TtsEngine.ITtsEngineSite
    Microsoft.Speech.Internal.Synthesis.ITtsEventSink
  Properties:
    Microsoft.Speech.Internal.Synthesis.TtsEventMapper EventMapper 'get set' : 
    Int32 EventInterest 'get ' : 
    Int32 Actions 'get ' : 
    Int32 Rate 'get ' : 
    Int32 Volume 'get ' : 
    Int32 VoiceRate 'get set' : 
    Int32 VoiceVolume 'get set' : 
    Int32 TtsVolume 'get set' : 
    System.Exception LastException 'get set' : 
  Methods:
    get_EventMapper(): PrivateScope, Assembly, HideBySig, SpecialName
    set_EventMapper(TtsEventMapper): PrivateScope, Assembly, HideBySig, SpecialName
    AddEvents(SpeechEventInfo[](HasFieldMarshal), Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(IntPtr, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSkipInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompleteSkip(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_EventInterest(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Actions(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTtsVolumeAndResetAction(): PrivateScope, Assembly, HideBySig
    LoadResource(Uri, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddEvent(TTSEvent): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FlushEvent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetEventsInterest(Int32): PrivateScope, Assembly, HideBySig
    set_VoiceRate(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_VoiceRate(): PrivateScope, Assembly, HideBySig, SpecialName
    set_VoiceVolume(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_VoiceVolume(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TtsVolume(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_TtsVolume(): PrivateScope, Assembly, HideBySig, SpecialName
    set_LastException(Exception): PrivateScope, Assembly, HideBySig, SpecialName
    get_LastException(): PrivateScope, Assembly, HideBySig, SpecialName
    Abort(): PrivateScope, Assembly, HideBySig
    Skip(Int32): PrivateScope, Assembly, HideBySig
    InitRun(AudioBase, Int32, Prompt): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Synthesis.TtsEventMapper: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.Synthesis.ITtsEventSink): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.Synthesis.ITtsEventSink
  Methods:
    AddEvent(TTSEvent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FlushEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Speech.Internal.Synthesis.ISpEngineSite: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    AddEvents(SpeechEventSapi[](HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEventInterest(Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetActions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(IntPtr, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRate(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetVolume(Int16&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSkipInfo(Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompleteSkip(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadResource(String(HasFieldMarshal), String&, IStream&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.Synthesis.EngineSiteSapi: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.Synthesis.EngineSite, Microsoft.Speech.Internal.ResourceLoader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.Synthesis.ISpEngineSite
Struct Microsoft.Speech.Internal.Synthesis.SpeechEventSapi: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 EventId : Public
    Int16 ParameterType : Public
    Int32 StreamNumber : Public
    Int64 AudioStreamOffset : Public
    IntPtr Param1 : Public
    IntPtr Param2 : Public
  Methods:
    op_Equality(SpeechEventSapi, SpeechEventSapi): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(SpeechEventSapi, SpeechEventSapi): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Speech.Internal.Synthesis.PcmConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    PrepareConverter(WAVEFORMATEX&, WAVEFORMATEX&, Int32, Int32): PrivateScope, Assembly, HideBySig
    ConvertSamples(Byte[]): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Synthesis.SafeNativeMethods: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt32 TIME_MS = 1 : Assembly, Static, Literal, HasDefault
    UInt32 TIME_SAMPLES = 2 : Assembly, Static, Literal, HasDefault
    UInt32 TIME_BYTES = 4 : Assembly, Static, Literal, HasDefault
    UInt32 TIME_TICKS = 32 : Assembly, Static, Literal, HasDefault
    UInt32 CALLBACK_WINDOW = 65536 : Assembly, Static, Literal, HasDefault
    UInt32 CALLBACK_NULL = 0 : Assembly, Static, Literal, HasDefault
    UInt32 CALLBACK_FUNCTION = 196608 : Assembly, Static, Literal, HasDefault
  Methods:
    waveOutPrepareHeader(IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutWrite(IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutUnprepareHeader(IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutOpen(IntPtr&, Int32, Byte[], WaveOutProc, IntPtr, UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutClose(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutReset(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutPause(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutRestart(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutGetDevCaps(IntPtr, WAVEOUTCAPS&, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    waveOutGetNumDevs(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class Microsoft.Speech.Internal.Synthesis.SafeNativeMethods+WaveOutProc: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, MM_MSG, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, MM_MSG, IntPtr, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Speech.Internal.Synthesis.SafeNativeMethods+WAVEOUTCAPS: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String szPname : Assembly, HasFieldMarshal
Struct Microsoft.Speech.Internal.Synthesis.WAVEHDR: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr lpData : Assembly
    UInt32 dwBufferLength : Assembly
    UInt32 dwBytesRecorded : Assembly
    UInt32 dwUser : Assembly
    UInt32 dwFlags : Assembly
    UInt32 dwLoops : Assembly
    IntPtr lpNext : Assembly
    UInt32 reserved : Assembly
Struct Microsoft.Speech.Internal.Synthesis.MMSYSERR: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.Synthesis.MMSYSERR NOERROR = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR ERROR = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR BADDEVICEID = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR NOTENABLED = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR ALLOCATED = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR INVALHANDLE = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR NODRIVER = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR NOMEM = 7 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR NOTSUPPORTED = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR BADERRNUM = 9 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR INVALFLAG = 10 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR INVALPARAM = 11 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR HANDLEBUSY = 12 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR INVALIDALIAS = 13 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR BADDB = 14 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR KEYNOTFOUND = 15 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR READERROR = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR WRITEERROR = 17 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR DELETEERROR = 18 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR VALNOTFOUND = 19 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR NODRIVERCB = 20 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MMSYSERR LASTERROR = 20 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.Synthesis.MM_MSG: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.Synthesis.MM_MSG MM_WOM_OPEN = 955 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MM_MSG MM_WOM_CLOSE = 956 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.MM_MSG MM_WOM_DONE = 957 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.Synthesis.SpeakInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.Synthesis.VoiceSynthesis, Microsoft.Speech.Internal.Synthesis.TTSVoice): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Speech.Internal.Synthesis.TTSVoice Voice 'get set' : 
    System.Collections.ObjectModel.Collection`1[Microsoft.Speech.Internal.Synthesis.SpeechSeg] SpeechSegments 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Voice(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Voice(TTSVoice): PrivateScope, Assembly, HideBySig, SpecialName
    get_SpeechSegments(): PrivateScope, Assembly, HideBySig, SpecialName
    SetVoice(String, CultureInfo, VoiceGender, VoiceAge, Int32): PrivateScope, Assembly, HideBySig
    AddAudio(AudioData): PrivateScope, Assembly, HideBySig
    AddText(TTSVoice, TextFragment): PrivateScope, Assembly, HideBySig
    AddPexml(TTSVoice, TextFragment): PrivateScope, Assembly, HideBySig
    BeginPromptEngineOutput(Object): PrivateScope, Assembly, HideBySig
    EndPromptEngineOutput(Object): PrivateScope, Assembly, HideBySig
    AddPromptDatabase(Object, String): PrivateScope, Assembly, HideBySig
    AddBackupForAudio(): PrivateScope, Assembly, HideBySig
    FinalizeBackupForAudio(Boolean): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Synthesis.AudioData: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Uri, Microsoft.Speech.Internal.ResourceLoader, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Rate 'get ' : 
    Int32 Volume 'get ' : 
    Microsoft.Speech.Internal.SapiInterop.SapiStream Stream 'get ' : 
    System.Uri Uri 'get ' : 
    Microsoft.Speech.Internal.Synthesis.SpeakInfo Backup 'get set' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Rate(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Volume(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Stream(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Uri(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Backup(SpeakInfo): PrivateScope, Assembly, HideBySig, SpecialName
    get_Backup(): PrivateScope, Assembly, HideBySig, SpecialName
    DestroyBackup(): PrivateScope, Assembly, HideBySig
    DetachBackup(): PrivateScope, Assembly, HideBySig
Struct Microsoft.Speech.Internal.Synthesis.VOICEACTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.Synthesis.VOICEACTIONS VA_NONE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.VOICEACTIONS VA_SPEAK = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.VOICEACTIONS VA_LOAD_DB = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.VOICEACTIONS VA_UNLOAD_DB = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.VOICEACTIONS VA_SET_BACKUP = 4 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.Synthesis.SpeechSeg: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.Synthesis.TTSVoice, Microsoft.Speech.Internal.Synthesis.AudioData): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Microsoft.Speech.Synthesis.TtsEngine.TextFragment] FragmentList 'get ' : 
    Microsoft.Speech.Internal.Synthesis.AudioData Audio 'get ' : 
    Microsoft.Speech.Internal.Synthesis.TTSVoice Voice 'get ' : 
    Boolean IsText 'get ' : 
    Boolean ContainsPrompEngineFragment 'get set' : 
  Methods:
    get_FragmentList(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Audio(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Voice(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsText(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ContainsPrompEngineFragment(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ContainsPrompEngineFragment(): PrivateScope, Assembly, HideBySig, SpecialName
    AddFrag(TextFragment): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Synthesis.SsmlParser: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Parse(String, ISsmlParser, Object): PrivateScope, Assembly, Static, HideBySig
    Parse(XmlReader, ISsmlParser, Object): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.Synthesis.SsmlParserHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryConvertAge(String, VoiceAge&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryConvertGender(String, VoiceGender&(Out)): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Speech.Internal.Synthesis.SsmlElement: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Internal.Synthesis.SsmlElement Speak = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Voice = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Audio = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Lexicon = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Meta = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement MetaData = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Sentence = 64 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Paragraph = 128 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement SayAs = 256 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Phoneme = 512 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Sub = 1024 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Emphasis = 2048 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Break = 4096 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Prosody = 8192 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Mark = 16384 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Desc = 32768 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement Text = 65536 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineOutput = 131072 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineDatabase = 262144 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineDiv = 524288 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineId = 1048576 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineTTS = 2097152 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineWithTag = 4194304 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineRule = 8388608 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement ParagraphOrSentence = 192 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement AudioMarkTextWithStyle = 229126 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Internal.Synthesis.SsmlElement PromptEngineChildren = 16515264 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.Synthesis.TextFragmentEngine: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.Synthesis.SpeakInfo, System.String, Boolean, Microsoft.Speech.Internal.ResourceLoader, System.Collections.Generic.List`1[Microsoft.Speech.Internal.Synthesis.LexiconEntry]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.Synthesis.ISsmlParser
  Properties:
    System.String Ssml 'get ' : 
  Methods:
    ProcessSpeak(String, String, CultureInfo, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessText(String, Object, FragmentState&, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessAudio(Object, String, String, Int32, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBreak(Object, FragmentState&, EmphasisBreak, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessDesc(CultureInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessEmphasis(Boolean, EmphasisWord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessMark(Object, FragmentState&, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessTextBlock(Boolean, Object, FragmentState&, CultureInfo, Boolean, VoiceGender, VoiceAge): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndProcessTextBlock(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPhoneme(FragmentState&, AlphabetType, String, Char[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessProsody(String, String, String, String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessSayAs(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessSub(String, Object, FragmentState&, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginVoice(String, CultureInfo, VoiceGender, VoiceAge, Int32, Boolean, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndVoice(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessLexicon(Uri, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessUnknownElement(Object, FragmentState&, XmlReader): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartProcessUnknownAttributes(Object, FragmentState&, String, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndProcessUnknownAttributes(Object, FragmentState&, String, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginBackup(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndBackup(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsPexml(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineOutput(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineOutput(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPromptEngineDatabase(Object, String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPromptEngineDiv(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPromptEngineId(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineTts(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineTts(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineWithTag(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineWithTag(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineRule(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineRule(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndSpeakElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Ssml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Microsoft.Speech.Internal.Synthesis.TextWriterEngine: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.XmlTextWriter, System.Globalization.CultureInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.Synthesis.ISsmlParser
  Properties:
    System.String Ssml 'get ' : 
  Methods:
    ProcessSpeak(String, String, CultureInfo, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessText(String, Object, FragmentState&, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessAudio(Object, String, String, Int32, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessBreak(Object, FragmentState&, EmphasisBreak, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessDesc(CultureInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessEmphasis(Boolean, EmphasisWord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessMark(Object, FragmentState&, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessTextBlock(Boolean, Object, FragmentState&, CultureInfo, Boolean, VoiceGender, VoiceAge): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndProcessTextBlock(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPhoneme(FragmentState&, AlphabetType, String, Char[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessProsody(String, String, String, String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessSayAs(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessSub(String, Object, FragmentState&, Int32, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginVoice(String, CultureInfo, VoiceGender, VoiceAge, Int32, Boolean, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndVoice(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessLexicon(Uri, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndSpeakElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessUnknownElement(Object, FragmentState&, XmlReader): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartProcessUnknownAttributes(Object, FragmentState&, String, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndProcessUnknownAttributes(Object, FragmentState&, String, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginBackup(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndBackup(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsPexml(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineOutput(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPromptEngineDatabase(Object, String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPromptEngineDiv(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessPromptEngineId(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineTts(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineTts(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineWithTag(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineWithTag(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginPromptEngineRule(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineRule(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndPromptEngineOutput(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Ssml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Microsoft.Speech.Internal.Synthesis.Tsm: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Double, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 GetFrameLength 'get ' : 
  Methods:
    SetScaleFactor(Double): PrivateScope, Assembly, HideBySig
    SetSamplingFrequency(Int32): PrivateScope, Assembly, HideBySig
    FirstFrame(Double[]): PrivateScope, Assembly, HideBySig
    AddFrame(Double[], Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
    LastFrame(Double[], Int32, Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
    AdjustTimeScale(Int16[]): PrivateScope, Assembly, HideBySig
    ComputeRateAdj(Int32): PrivateScope, Assembly, Static, HideBySig
    get_GetFrameLength(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.Synthesis.ITtsEngineProxy: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.AlphabetType EngineAlphabet 'get ' : 
    Microsoft.Speech.Internal.AlphabetConverter AlphabetConverter 'get ' : 
  Methods:
    GetOutputFormat(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    AddLexicon(Uri, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    RemoveLexicon(Uri): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Speak(List`1, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReleaseInterface(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ConvertPhonemes(Char[], AlphabetType): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_EngineAlphabet(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_AlphabetConverter(): PrivateScope, Assembly, HideBySig, SpecialName
    BackupVoice(IPromptEngine): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
Class Microsoft.Speech.Internal.Synthesis.TtsProxySsml: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.Synthesis.ITtsEngineProxy
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.TtsEngineSsml, Microsoft.Speech.Synthesis.TtsEngine.ITtsEngineSite, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.AlphabetType EngineAlphabet 'get ' : 
  Methods:
    GetOutputFormat(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    AddLexicon(Uri, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveLexicon(Uri): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Speak(List`1, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ConvertPhonemes(Char[], AlphabetType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_EngineAlphabet(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    ReleaseInterface(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    BackupVoice(IPromptEngine): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Interface Microsoft.Speech.Synthesis.TtsEngine.ITtsEngineSsml: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetOutputFormat(SpeakOutputFormat, IntPtr, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLexicon(String, String, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveLexicon(String, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Speak(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Internal.Synthesis.TtsProxyCom: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.Synthesis.ITtsEngineProxy
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.ITtsEngineSsml, IntPtr, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.AlphabetType EngineAlphabet 'get ' : 
  Methods:
    GetOutputFormat(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    AddLexicon(Uri, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveLexicon(Uri): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Speak(List`1, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReleaseInterface(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_EngineAlphabet(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    ConvertPhonemes(Char[], AlphabetType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    BackupVoice(IPromptEngine): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Internal.Synthesis.TtsProxySapi: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.Synthesis.ITtsEngineProxy
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.ITtsEngine, IntPtr, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.AlphabetType EngineAlphabet 'get ' : 
  Methods:
    GetOutputFormat(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    AddLexicon(Uri, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveLexicon(Uri): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Speak(List`1, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_EngineAlphabet(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    ConvertPhonemes(Char[], AlphabetType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReleaseInterface(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    BackupVoice(IPromptEngine): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Internal.Synthesis.TextEngine: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Internal.Synthesis.ITtsEngineProxy
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.ITtsEngineSite, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.AlphabetType EngineAlphabet 'get ' : 
  Methods:
    GetOutputFormat(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    AddLexicon(Uri, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveLexicon(Uri): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Speak(List`1, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_EngineAlphabet(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    ConvertPhonemes(Char[], AlphabetType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReleaseInterface(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    BackupVoice(IPromptEngine): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Internal.Synthesis.Converter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    PtrToFragments(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.Synthesis.Converter+TextFragmentInterop: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    FragmentStateInterop _state : Assembly
    System.String _textToSpeak : Assembly, HasFieldMarshal
    Int32 _textOffset : Assembly
    Int32 _textLength : Assembly
Class Microsoft.Speech.Internal.Synthesis.Converter+FragmentStateInterop: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
  Fields:
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction _action : Assembly
    Int32 _langId : Assembly
    Int32 _emphasis : Assembly
    Int32 _duration : Assembly
    IntPtr _sayAs : Assembly
    IntPtr _prosody : Assembly
    IntPtr _phoneme : Assembly
  Methods:
    PtrToFragmentState(): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Synthesis.Converter+ProsodyInterop: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _pitch : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _range : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _rate : Assembly
    Int32 _duration : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _volume : Assembly
    IntPtr _contourPoints : Assembly
  Methods:
    PtrToProsody(): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Synthesis.TTSEvent: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.TtsEventId, Microsoft.Speech.Synthesis.Prompt, System.Exception, Microsoft.Speech.Synthesis.VoiceInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.TtsEventId, Microsoft.Speech.Synthesis.Prompt, System.Exception, Microsoft.Speech.Synthesis.VoiceInfo, System.TimeSpan, Int64, System.String, UInt32, IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId Id 'get ' : 
    System.Exception Exception 'get ' : 
    Microsoft.Speech.Synthesis.Prompt Prompt 'get ' : 
    Microsoft.Speech.Synthesis.VoiceInfo Voice 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    System.String Bookmark 'get ' : 
    IntPtr LParam 'get ' : 
    UInt32 WParam 'get ' : 
    Int64 StreamPosition 'get ' : 
  Methods:
    get_Id(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Exception(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Prompt(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Voice(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Bookmark(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LParam(): PrivateScope, Assembly, HideBySig, SpecialName
    get_WParam(): PrivateScope, Assembly, HideBySig, SpecialName
    get_StreamPosition(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.Synthesis.TTSVoice: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.Synthesis.ITtsEngineProxy, Microsoft.Speech.Synthesis.VoiceInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.Synthesis.ITtsEngineProxy TtsEngine 'get ' : 
    Microsoft.Speech.Synthesis.VoiceInfo VoiceInfo 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    UpdateLexicons(List`1): PrivateScope, Assembly, HideBySig
    WaveFormat(Byte[]): PrivateScope, Assembly, HideBySig
    get_TtsEngine(): PrivateScope, Assembly, HideBySig, SpecialName
    get_VoiceInfo(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.Synthesis.VoiceSynthesis: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.WeakReference): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.EventHandler`1[Microsoft.Speech.Synthesis.StateChangedEventArgs] _stateChanged : Assembly
    System.EventHandler`1[Microsoft.Speech.Synthesis.SpeakStartedEventArgs] _speakStarted : Assembly
    System.EventHandler`1[Microsoft.Speech.Synthesis.SpeakCompletedEventArgs] _speakCompleted : Assembly
    System.EventHandler`1[Microsoft.Speech.Synthesis.SpeakProgressEventArgs] _speakProgress : Assembly
    System.EventHandler`1[Microsoft.Speech.Synthesis.BookmarkReachedEventArgs] _bookmarkReached : Assembly
    System.EventHandler`1[Microsoft.Speech.Synthesis.VoiceChangeEventArgs] _voiceChange : Assembly
    System.EventHandler`1[Microsoft.Speech.Synthesis.ProprietaryEngineEventArgs] _proprietaryEngineEvent : Assembly
    Boolean _outputAsText : Assembly
  Properties:
    Microsoft.Speech.Synthesis.Prompt Prompt 'get ' : 
    Microsoft.Speech.Synthesis.SynthesizerState State 'get ' : 
    Int32 Rate 'get set' : 
    Int32 Volume 'get set' : 
    Int32 TtsVolume 'get set' : 
    Microsoft.Speech.Internal.Synthesis.TTSVoice Voice 'set' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Speak(Prompt): PrivateScope, Assembly, HideBySig
    SpeakAsync(Prompt): PrivateScope, Assembly, HideBySig
    OnSpeakStarted(SpeakStartedEventArgs): PrivateScope, Assembly, HideBySig
    FireSpeakCompleted(Object): PrivateScope, Assembly, HideBySig
    OnSpeakCompleted(Prompt): PrivateScope, Assembly, HideBySig
    OnSpeakProgress(SpeakProgressEventArgs): PrivateScope, Assembly, HideBySig
    OnBookmarkReached(BookmarkReachedEventArgs): PrivateScope, Assembly, HideBySig
    OnVoiceChange(VoiceChangeEventArgs): PrivateScope, Assembly, HideBySig
    OnProprietaryEngineEvent(ProprietaryEngineEventArgs): PrivateScope, Assembly, HideBySig
    AddEvent(TtsEventId, EventHandler`1&, EventHandler`1): PrivateScope, Assembly, HideBySig
    RemoveEvent(TtsEventId, EventHandler`1&, EventHandler`1): PrivateScope, Assembly, HideBySig
    SetOutput(Stream, SpeechAudioFormatInfo, Boolean): PrivateScope, Assembly, HideBySig
    Abort(): PrivateScope, Assembly, HideBySig
    Abort(Prompt): PrivateScope, Assembly, HideBySig
    Pause(): PrivateScope, Assembly, HideBySig
    Resume(): PrivateScope, Assembly, HideBySig
    AddLexicon(Uri, String): PrivateScope, Assembly, HideBySig
    RemoveLexicon(Uri): PrivateScope, Assembly, HideBySig
    GetEngine(String, CultureInfo, VoiceGender, VoiceAge, Int32, Boolean): PrivateScope, Assembly, HideBySig
    GetInstalledVoices(CultureInfo): PrivateScope, Assembly, HideBySig
    LoadDatabase(String, String): PrivateScope, Assembly, HideBySig
    UnloadDatabase(String): PrivateScope, Assembly, HideBySig
    SetResourceLoader(ISpeechResourceLoader): PrivateScope, Assembly, HideBySig
    get_Prompt(): PrivateScope, Assembly, HideBySig, SpecialName
    get_State(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Rate(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Rate(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Volume(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Volume(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TtsVolume(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_TtsVolume(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Voice(TTSVoice): PrivateScope, Assembly, HideBySig, SpecialName
    CurrentVoice(Boolean): PrivateScope, Assembly, HideBySig
    Skip(TimeSpan): PrivateScope, Assembly, HideBySig
    SentenceBoundaryHandler(Object): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.Synthesis.WaveHeader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 _dwBufferLength : Assembly
    Int32 WHDR_DONE = 1 : Assembly, Static, Literal, HasDefault
    Int32 WHDR_PREPARED = 2 : Assembly, Static, Literal, HasDefault
    Int32 WHDR_BEGINLOOP = 4 : Assembly, Static, Literal, HasDefault
    Int32 WHDR_ENDLOOP = 8 : Assembly, Static, Literal, HasDefault
    Int32 WHDR_INQUEUE = 16 : Assembly, Static, Literal, HasDefault
    Int32 WAVE_FORMAT_PCM = 1 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Runtime.InteropServices.GCHandle WAVEHDR 'get ' : 
    Int32 SizeHDR 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReleaseData(): PrivateScope, Assembly, HideBySig
    get_WAVEHDR(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SizeHDR(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.Synthesis.PromptOffsetHist: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddBoundary(BoundaryEntry): PrivateScope, Public, HideBySig
    GetNearestBoundary(Int32): PrivateScope, Public, HideBySig
    GetNewestOffset(): PrivateScope, Public, HideBySig
Class Microsoft.Speech.Internal.Synthesis.BoundaryEntry: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SegmentIndex 'get ' : 
    Int32 SentenceIndex 'get ' : 
    Int32 Offset 'get ' : 
  Methods:
    get_SegmentIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SentenceIndex(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Offset(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.Synthesis.BoundaryComparer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[Microsoft.Speech.Internal.Synthesis.BoundaryEntry]
  Methods:
    Compare(BoundaryEntry, BoundaryEntry): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Recognition.GrammarContent: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    System.String RuleName 'get ' : 
    System.Uri BaseUri 'get ' : 
    Boolean Enabled 'get set' : 
    Single Weight 'get set' : 
    Int32 Priority 'get set' : 
  Methods:
    GetInstance(Uri, String, Uri): PrivateScope, Public, Static, HideBySig
    GetInstance(SrgsDocument, String, Uri): PrivateScope, Public, Static, HideBySig
    GetInstance(Stream, String, Uri): PrivateScope, Public, Static, HideBySig
    GetInstance(GrammarBuilder): PrivateScope, Public, Static, HideBySig
    GetInstance(GrammarInfo): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig, Abstract
    get_RuleName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BaseUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ActivateRule(SPRULESTATE): PrivateScope, Public, HideBySig
    Load(SapiGrammar): PrivateScope, Public, HideBySig
    Unload(): PrivateScope, Public, HideBySig
    IsPronouncable(String): PrivateScope, Public, HideBySig
    SetWordSequenceData(String, SPTEXTSELECTIONINFO): PrivateScope, Public, HideBySig
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    set_Weight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Priority(): PrivateScope, Public, HideBySig, SpecialName
    set_Priority(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.DictationGrammarContent: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Recognition.GrammarContent
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RuleName 'get ' : 
    System.Uri BaseUri 'get ' : 
  Methods:
    get_RuleName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BaseUri(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Speech.Recognition.FileGrammarContent: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Recognition.GrammarContent
    Void .ctor(System.Uri, System.String, System.Uri): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RuleName 'get ' : 
    System.Uri BaseUri 'get ' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_RuleName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BaseUri(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.Grammar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Uri, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsDocument, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsDocument, System.String, System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.String, System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Enabled 'get set' : 
    Single Weight 'get set' : 
    Int32 Priority 'get set' : 
    System.String Name 'get set' : 
    System.String RuleName 'get ' : 
    Boolean Loaded 'get ' : 
    Microsoft.Speech.Recognition.GrammarState State 'get set' : 
    System.Exception LoadException 'get ' : 
    System.Nullable`1[System.UInt64] SapiGrammarId 'get ' : 
    Microsoft.Speech.Recognition.GrammarContent InternalContent 'get ' : 
  Events:
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechRecognizedEventArgs] SpeechRecognized: 
  Methods:
    IsPronounceable(String): PrivateScope, Public, HideBySig
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    set_Weight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Priority(): PrivateScope, Public, HideBySig, SpecialName
    set_Priority(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_RuleName(): PrivateScope, Public, HideBySig, SpecialName
    get_Loaded(): PrivateScope, Public, HideBySig, SpecialName
    add_SpeechRecognized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeechRecognized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Assembly, HideBySig, SpecialName
    set_State(GrammarState): PrivateScope, Assembly, HideBySig, SpecialName
    get_LoadException(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SapiGrammarId(): PrivateScope, Assembly, HideBySig, SpecialName
    get_InternalContent(): PrivateScope, Assembly, HideBySig, SpecialName
    Create(String, String, Uri&(Out)): PrivateScope, Assembly, Static, HideBySig
    OnRecognitionInternal(SpeechRecognizedEventArgs): PrivateScope, Assembly, HideBySig
    IsDictationGrammar(Uri): PrivateScope, Assembly, Static, HideBySig
    MethodInfo(String): PrivateScope, Assembly, HideBySig
    Load(SapiGrammar, IRecognizerInternal): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Unload(): PrivateScope, Assembly, HideBySig
    Activate(SPRULESTATE): PrivateScope, Assembly, HideBySig
    CheckGrammarOptionsOnSapi51(): PrivateScope, Assembly, HideBySig
Struct Microsoft.Speech.Recognition.GrammarState: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.GrammarState Unloaded = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.GrammarState Loading = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.GrammarState Loaded = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.GrammarState LoadFailed = 3 : Public, Static, Literal, HasDefault
Interface Microsoft.Speech.Recognition.IRecognizerInternal: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetGrammarFromId(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Recognition.MemoryGrammarContent: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Speech.Recognition.GrammarContent
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsDocument, System.String, System.Uri): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.String, System.Uri): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RuleName 'get ' : 
    System.Uri BaseUri 'get ' : 
  Methods:
    get_RuleName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BaseUri(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Speech.Recognition.SubsetMatchingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.SubsetMatchingMode Subsequence = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SubsetMatchingMode OrderedSubset = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SubsetMatchingMode SubsequenceContentRequired = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SubsetMatchingMode OrderedSubsetContentRequired = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.GrammarInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Microsoft.Speech.Recognition.GrammarInfoPartsCollection ExtraParts 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(Stream): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, HideBySig
    get_ExtraParts(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.GrammarInfoPartsCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpGrammarContent): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddEnginePart(SpeechRecognitionEngine): PrivateScope, Public, HideBySig
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsDocument: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.XmlReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Uri XmlBase 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule Root 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules 'get ' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat TagFormat 'set' : 
    System.Uri BaseUri 'get ' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammar Grammar 'get ' : 
  Methods:
    WriteSrgs(XmlWriter): PrivateScope, Public, HideBySig
    AddLexicon(Uri): PrivateScope, Public, HideBySig
    set_XmlBase(Uri): PrivateScope, Public, HideBySig, SpecialName
    get_XmlBase(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Root(SrgsRule): PrivateScope, Public, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(SrgsGrammarMode): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_PhoneticAlphabet(SrgsPhoneticAlphabet): PrivateScope, Public, HideBySig, SpecialName
    get_PhoneticAlphabet(): PrivateScope, Public, HideBySig, SpecialName
    get_Rules(): PrivateScope, Public, HideBySig, SpecialName
    Load(XmlReader): PrivateScope, Assembly, HideBySig
    TagFormat2GrammarOptions(SrgsTagFormat): PrivateScope, Assembly, Static, HideBySig
    GrammarOptions2TagFormat(GrammarOptions): PrivateScope, Assembly, Static, HideBySig
    set_TagFormat(SrgsTagFormat): PrivateScope, Assembly, HideBySig, SpecialName
    get_BaseUri(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Grammar(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammarMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Voice = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Dtmf = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet Sapi = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet Ipa = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet Ups = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElement
  Properties:
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[] Children 'get ' : 
  Methods:
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Validate(SrgsGrammar): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_Children(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement+SrgsElementDebugDisplay: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[] AKeys 'get ' : 
  Methods:
    get_AKeys(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsElementFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammar): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElementFactory
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsElementList: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammar: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IGrammar
    Microsoft.Speech.Internal.SrgsParser.IElement
  Properties:
    System.Uri XmlBase 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    Microsoft.Speech.Internal.SrgsParser.GrammarType Mode 'get set' : 
    Microsoft.Speech.Internal.AlphabetType PhoneticAlphabet 'get set' : 
    System.Uri LexiconUri 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule Root 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat TagFormat 'get set' : 
    System.Collections.ObjectModel.Collection`1[System.String] GlobalTags 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules 'get ' : 
    Boolean HasPronunciation 'get set' : 
    Boolean HasPhoneticAlphabetBeenSet 'set' : 
    Boolean HasSapiExtension 'get set' : 
  Methods:
    WriteSrgs(XmlWriter): PrivateScope, Assembly, HideBySig
    Validate(): PrivateScope, Assembly, HideBySig
    get_XmlBase(): PrivateScope, Public, HideBySig, SpecialName
    set_XmlBase(Uri): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(GrammarType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PhoneticAlphabet(): PrivateScope, Public, HideBySig, SpecialName
    set_PhoneticAlphabet(AlphabetType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LexiconUri(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LexiconUri(Uri): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    set_Root(SrgsRule): PrivateScope, Public, HideBySig, SpecialName
    get_TagFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TagFormat(SrgsTagFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GlobalTags(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GlobalTags(Collection`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rules(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HasPronunciation(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasPronunciation(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HasPhoneticAlphabetBeenSet(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    set_HasSapiExtension(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasSapiExtension(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Compile(String, Stream): PrivateScope, Public, Static, HideBySig
    Compile(SrgsDocument, Stream): PrivateScope, Public, Static, HideBySig
    Compile(XmlReader, Stream): PrivateScope, Public, Static, HideBySig
    CompileXmlOrCopyCfg(Stream, Stream, Uri, Boolean): PrivateScope, Assembly, Static, HideBySig
    CompileXmlOrCopyCfg(Stream, Stream, Uri, Boolean, GrammarInformation): PrivateScope, Assembly, Static, HideBySig
    ExtractHeaderInfo(Stream, CultureInfo&(Out), SrgsGrammarMode&(Out), Collection`1&(Out)): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Recognition.SrgsGrammar.GrammarInformation: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Uri lexicon : Assembly
    Microsoft.Speech.ISpeechResourceLoader resourceLoader : Assembly
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsItem: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IItem
  Properties:
    System.Collections.ObjectModel.Collection`1[Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement] Elements 'get ' : 
    Single RepeatProbability 'get set' : 
    Int32 MinRepeat 'get ' : 
    Int32 MaxRepeat 'get ' : 
    Single Weight 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[] Children 'get ' : 
  Methods:
    SetRepeat(Int32): PrivateScope, Public, HideBySig
    SetRepeat(Int32, Int32): PrivateScope, Public, HideBySig
    Add(SrgsElement): PrivateScope, Public, HideBySig
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    get_RepeatProbability(): PrivateScope, Public, HideBySig, SpecialName
    set_RepeatProbability(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinRepeat(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxRepeat(): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    set_Weight(Single): PrivateScope, Public, HideBySig, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsItem+SrgsItemDebugDisplay: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsItem): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Weight 'get ' : 
    System.Object MinRepeat 'get ' : 
    System.Object MaxRepeat 'get ' : 
    System.Object RepeatProbability 'get ' : 
    System.Object Count 'get ' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[] AKeys 'get ' : 
  Methods:
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
    get_MinRepeat(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxRepeat(): PrivateScope, Public, HideBySig, SpecialName
    get_RepeatProbability(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_AKeys(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsItemList: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[Microsoft.Speech.Recognition.SrgsGrammar.SrgsItem]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsNameValueTag: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IPropertyTag
  Properties:
    System.String Name 'get set' : 
    System.Object Value 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Validate(SrgsGrammar): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsOneOf: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsItem[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IOneOf
  Properties:
    System.Collections.ObjectModel.Collection`1[Microsoft.Speech.Recognition.SrgsGrammar.SrgsItem] Items 'get ' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[] Children 'get ' : 
  Methods:
    Add(SrgsItem): PrivateScope, Public, HideBySig
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Children(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsOneOf+OneOfDebugDisplay: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsOneOf): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsItem[] AKeys 'get ' : 
  Methods:
    get_AKeys(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IRule
    Microsoft.Speech.Internal.SrgsParser.IElement
  Properties:
    System.Collections.ObjectModel.Collection`1[Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement] Elements 'get ' : 
    System.String Id 'get set' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope 'get set' : 
    Microsoft.Speech.Internal.SrgsParser.RuleDynamic Dynamic 'get set' : 
  Methods:
    Add(SrgsElement): PrivateScope, Public, HideBySig
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(String): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    set_Scope(SrgsRuleScope): PrivateScope, Public, HideBySig, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, HideBySig
    Validate(SrgsGrammar): PrivateScope, Assembly, HideBySig
    set_Dynamic(RuleDynamic): PrivateScope, Assembly, HideBySig, SpecialName
    get_Dynamic(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule+SrgsRuleDebugDisplay: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Id 'get ' : 
    System.Object Scope 'get ' : 
    System.Object Count 'get ' : 
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement[] AKeys 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_AKeys(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleScope: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleScope Public = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleScope Private = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleRef: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Uri): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IRuleRef
  Fields:
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleRef Null : Public, Static, InitOnly
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleRef Void : Public, Static, InitOnly
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleRef Garbage : Public, Static, InitOnly
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleRef Dictation : Public, Static, InitOnly
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsRuleRef MnemonicSpelling : Public, Static, InitOnly
  Properties:
    System.Uri Uri 'get ' : 
    System.String SemanticKey 'get ' : 
    System.String Params 'get ' : 
  Methods:
    get_Uri(): PrivateScope, Public, HideBySig, SpecialName
    get_SemanticKey(): PrivateScope, Public, HideBySig, SpecialName
    get_Params(): PrivateScope, Public, HideBySig, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Validate(SrgsGrammar): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsRulesCollection: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Collections.ObjectModel.KeyedCollection`2[System.String,Microsoft.Speech.Recognition.SrgsGrammar.SrgsRule]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(SrgsRule[]): PrivateScope, Public, HideBySig
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsSubset: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Recognition.SubsetMatchingMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.ISubset
  Properties:
    Microsoft.Speech.Recognition.SubsetMatchingMode MatchingMode 'get set' : 
    System.String Text 'get set' : 
  Methods:
    get_MatchingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MatchingMode(SubsetMatchingMode): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Validate(SrgsGrammar): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.ISemanticTag
  Properties:
    System.String Script 'get set' : 
  Methods:
    get_Script(): PrivateScope, Public, HideBySig, SpecialName
    set_Script(String): PrivateScope, Public, HideBySig, SpecialName
    Validate(SrgsGrammar): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Struct Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat MssV1 = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat W3cV1 = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.SrgsGrammar.SrgsTagFormat KeyValuePairs = 3 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsText: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IElementText
  Properties:
    System.String Text 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Recognition.SrgsGrammar.SrgsToken: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.SrgsGrammar.SrgsElement
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Internal.SrgsParser.IToken
  Properties:
    System.String Text 'get set' : 
    System.String Pronunciation 'get set' : 
    System.String Display 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Pronunciation(): PrivateScope, Public, HideBySig, SpecialName
    set_Pronunciation(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Display(): PrivateScope, Public, HideBySig, SpecialName
    set_Display(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    WriteSrgs(XmlWriter): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Validate(SrgsGrammar): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DebuggerDisplayString(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Recognition.RecognitionEventArgs: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.RecognitionResult Result 'get ' : 
  Methods:
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SpeechRecognizedEventArgs: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.RecognitionEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsExtendable 'get ' : 
  Methods:
    get_IsExtendable(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SpeechRecognitionRejectedEventArgs: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.RecognitionEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Recognition.SpeechHypothesizedEventArgs: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.RecognitionEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Recognition.RecognizedPhrase: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Speech.Internal.SapiInterop.SPSERIALIZEDPHRASE _serializedPhrase : Assembly
    Byte[] _phraseBuffer : Assembly
    Boolean _isSapi53Header : Assembly
    Boolean _hasIPAPronunciation : Assembly
  Properties:
    System.String Text 'get ' : 
    Single Confidence 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.RecognizedWordUnit] Words 'get ' : 
    Microsoft.Speech.Recognition.SemanticValue Semantics 'get ' : 
    Microsoft.Speech.Recognition.SemanticValue RawSemantics 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.RecognizedPhrase] Homophones 'get ' : 
    Microsoft.Speech.Recognition.Grammar Grammar 'get ' : 
    System.Collections.ObjectModel.Collection`1[Microsoft.Speech.Recognition.ReplacementText] ReplacementWordUnits 'get ' : 
    Int32 HomophoneGroupId 'get ' : 
    UInt64 GrammarId 'get ' : 
    System.String SmlContent 'get set' : 
    Byte[] PhraseBuffer 'get ' : 
  Methods:
    ConstructSmlFromSemantics(): PrivateScope, Public, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_Confidence(): PrivateScope, Public, HideBySig, SpecialName
    get_Words(): PrivateScope, Public, HideBySig, SpecialName
    get_Semantics(): PrivateScope, Public, HideBySig, SpecialName
    get_RawSemantics(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Homophones(): PrivateScope, Public, HideBySig, SpecialName
    get_Grammar(): PrivateScope, Public, HideBySig, SpecialName
    get_ReplacementWordUnits(): PrivateScope, Public, HideBySig, SpecialName
    get_HomophoneGroupId(): PrivateScope, Public, HideBySig, SpecialName
    GetPhraseHeader(IntPtr, UInt32, Boolean): PrivateScope, Assembly, Static, HideBySig
    InitializeFromSerializedBuffer(RecognitionResult, SPSERIALIZEDPHRASE, IntPtr, Int32, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    get_GrammarId(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SmlContent(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_SmlContent(): PrivateScope, Assembly, HideBySig, SpecialName
    get_PhraseBuffer(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.RecognitionResult: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.RecognizedPhrase
    Void .ctor(Microsoft.Speech.Recognition.IRecognizerInternal, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.IRecognizerInternal, Microsoft.Speech.Internal.SapiInterop.ISpRecoResult, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    Microsoft.Speech.Recognition.RecognizedAudio Audio 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.RecognizedPhrase] Alternates 'get ' : 
    Microsoft.Speech.Recognition.IRecognizerInternal Recognizer 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    System.TimeSpan AudioDuration 'get ' : 
    Byte[] AlternatesBlob 'get ' : 
    Microsoft.Speech.Internal.SapiInterop.SPRESULTHEADER SPResultHeader 'get ' : 
    Boolean IsSapi53Header 'get ' : 
    System.String EmmaResult 'get ' : 
  Methods:
    get_Audio(): PrivateScope, Public, HideBySig, SpecialName
    get_Alternates(): PrivateScope, Public, HideBySig, SpecialName
    ConvertPronunciation(String, Int32): PrivateScope, Assembly, HideBySig
    get_Recognizer(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioDuration(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AlternatesBlob(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SPResultHeader(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsSapi53Header(): PrivateScope, Assembly, HideBySig, SpecialName
    DebuggerDisplayString(): PrivateScope, Assembly, HideBySig
    get_EmmaResult(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.ReplacementText: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Serializable, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.DisplayAttributes, System.String, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.DisplayAttributes DisplayAttributes 'get ' : 
    System.String Text 'get ' : 
    Int32 FirstWordIndex 'get ' : 
    Int32 CountOfWords 'get ' : 
  Methods:
    get_DisplayAttributes(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_FirstWordIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_CountOfWords(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.RecognizedAudio: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Byte[], Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo, System.DateTime, System.TimeSpan, System.TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo Format 'get ' : 
    System.DateTime StartTime 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    System.TimeSpan Duration 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_StartTime(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    WriteToWaveStream(Stream): PrivateScope, Public, HideBySig
    WriteToAudioStream(Stream): PrivateScope, Public, HideBySig
    GetRange(TimeSpan, TimeSpan): PrivateScope, Public, HideBySig
    RemoveMetaData(): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Recognition.RecognizedWordUnit: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String, Single, System.String, System.String, Microsoft.Speech.Recognition.DisplayAttributes, System.TimeSpan, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.TimeSpan _audioPosition : Assembly
    System.TimeSpan _audioDuration : Assembly
  Properties:
    System.String Text 'get ' : 
    Single Confidence 'get ' : 
    System.String Pronunciation 'get ' : 
    System.String LexicalForm 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    System.TimeSpan AudioDuration 'get ' : 
    Microsoft.Speech.Recognition.DisplayAttributes DisplayAttributes 'get ' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_Confidence(): PrivateScope, Public, HideBySig, SpecialName
    get_Pronunciation(): PrivateScope, Public, HideBySig, SpecialName
    get_LexicalForm(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioDuration(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayAttributes(): PrivateScope, Public, HideBySig, SpecialName
    DisplayAttributesToSapiAttributes(DisplayAttributes): PrivateScope, Assembly, Static, HideBySig
    SapiAttributesToDisplayAttributes(Byte): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Speech.Recognition.DisplayAttributes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.DisplayAttributes None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DisplayAttributes ZeroTrailingSpaces = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DisplayAttributes OneTrailingSpace = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DisplayAttributes TwoTrailingSpaces = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DisplayAttributes ConsumeLeadingSpaces = 16 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.SemanticValue: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String, System.Object, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[System.String,Microsoft.Speech.Recognition.SemanticValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[System.String,Microsoft.Speech.Recognition.SemanticValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,Microsoft.Speech.Recognition.SemanticValue]]
    System.Collections.IEnumerable
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,Microsoft.Speech.Recognition.SemanticValue] _dictionary : Assembly
    Boolean _valueFieldSet : Assembly
  Properties:
    System.Object Value 'get set' : 
    Single Confidence 'get ' : 
    Microsoft.Speech.Recognition.SemanticValue Item [System.String] 'get set' : 
    Int32 Count 'get ' : 
    System.String KeyName 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Assembly, HideBySig, SpecialName
    get_Confidence(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(String, SemanticValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeyName(): PrivateScope, Assembly, HideBySig, SpecialName
    Clone(): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Recognition.SemanticValue+SemanticValueDebugDisplay: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SemanticValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get ' : 
    System.Object Count 'get ' : 
    System.Object KeyName 'get ' : 
    System.Object Confidence 'get ' : 
    Microsoft.Speech.Recognition.SemanticValue[] AKeys 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyName(): PrivateScope, Public, HideBySig, SpecialName
    get_Confidence(): PrivateScope, Public, HideBySig, SpecialName
    get_AKeys(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.PromptEventArgs: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.ComponentModel.AsyncCompletedEventArgs
    Void .ctor(Microsoft.Speech.Synthesis.Prompt): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.Prompt Prompt 'get ' : 
  Methods:
    get_Prompt(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.BookmarkReachedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Synthesis.PromptEventArgs
    Void .ctor(Microsoft.Speech.Synthesis.Prompt, System.String, System.TimeSpan, Int64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Bookmark 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    Int64 StreamPosition 'get ' : 
  Methods:
    get_Bookmark(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_StreamPosition(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.Prompt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.PromptBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Synthesis.SynthesisTextFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri, Microsoft.Speech.Synthesis.SynthesisMediaType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String _text : Assembly
    System.Uri _audio : Assembly
    Microsoft.Speech.Synthesis.SynthesisMediaType _media : Assembly
    Boolean _syncSpeak : Assembly
    System.Exception _exception : Assembly
  Properties:
    Boolean IsCompleted 'get set' : 
    System.Object Synthesizer 'set' : 
  Methods:
    get_IsCompleted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCompleted(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    set_Synthesizer(Object): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.FilePrompt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Synthesis.Prompt
    Void .ctor(System.String, Microsoft.Speech.Synthesis.SynthesisMediaType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri, Microsoft.Speech.Synthesis.SynthesisMediaType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Synthesis.InstalledVoice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.Synthesis.VoiceSynthesis, Microsoft.Speech.Synthesis.VoiceInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.VoiceInfo VoiceInfo 'get ' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_VoiceInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Find(List`1, VoiceInfo): PrivateScope, Assembly, Static, HideBySig
    FirstEnabled(List`1, CultureInfo, Int32): PrivateScope, Assembly, Static, HideBySig
    SetEnabledFlag(Boolean, Boolean): PrivateScope, Assembly, HideBySig
Interface Microsoft.Speech.Synthesis.ISesSynthesizer: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    LoadDatabase(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnloadDatabase(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetResourceLoader(ISpeechResourceLoader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.ISpeechResourceLoader: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetLocalCopy(Uri, String&(Out), Uri&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReleaseLocalCopy(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Microsoft.Speech.Synthesis.SynthesisMediaType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.SynthesisMediaType Text = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SynthesisMediaType Ssml = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SynthesisMediaType WaveAudio = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.SynthesisTextFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.SynthesisTextFormat Text = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SynthesisTextFormat Ssml = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.PromptPriority: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.PromptPriority Normal = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptPriority High = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Synthesis.PromptBuilder: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Globalization.CultureInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
    System.String Id 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    ClearContent(): PrivateScope, Public, HideBySig
    SetText(String): PrivateScope, Public, HideBySig
    SetText(String, Object[]): PrivateScope, Public, HideBySig
    AppendText(String, Object[]): PrivateScope, Public, HideBySig
    AppendText(String): PrivateScope, Public, HideBySig
    AppendText(String, PromptRate): PrivateScope, Public, HideBySig
    AppendText(String, PromptVolume): PrivateScope, Public, HideBySig
    AppendText(String, PromptEmphasis): PrivateScope, Public, HideBySig
    StartStyle(PromptStyle): PrivateScope, Public, HideBySig
    EndStyle(): PrivateScope, Public, HideBySig
    StartVoice(VoiceInfo): PrivateScope, Public, HideBySig
    StartVoice(String): PrivateScope, Public, HideBySig
    StartVoice(VoiceGender): PrivateScope, Public, HideBySig
    StartVoice(VoiceGender, VoiceAge): PrivateScope, Public, HideBySig
    StartVoice(VoiceGender, VoiceAge, Int32): PrivateScope, Public, HideBySig
    StartVoice(CultureInfo): PrivateScope, Public, HideBySig
    EndVoice(): PrivateScope, Public, HideBySig
    StartParagraph(): PrivateScope, Public, HideBySig
    StartParagraph(CultureInfo): PrivateScope, Public, HideBySig
    EndParagraph(): PrivateScope, Public, HideBySig
    StartSentence(): PrivateScope, Public, HideBySig
    StartSentence(CultureInfo): PrivateScope, Public, HideBySig
    EndSentence(): PrivateScope, Public, HideBySig
    AppendTextWithHint(String, SayAs): PrivateScope, Public, HideBySig
    AppendTextWithHint(String, String): PrivateScope, Public, HideBySig
    AppendTextWithPronunciation(String, String): PrivateScope, Public, HideBySig
    AppendTextWithAlias(String, String): PrivateScope, Public, HideBySig
    AppendBreak(): PrivateScope, Public, HideBySig
    AppendBreak(PromptBreak): PrivateScope, Public, HideBySig
    AppendBreak(TimeSpan): PrivateScope, Public, HideBySig
    AppendAudio(String): PrivateScope, Public, HideBySig
    AppendAudio(Uri): PrivateScope, Public, HideBySig
    AppendAudio(Uri, String): PrivateScope, Public, HideBySig
    AppendBookmark(String): PrivateScope, Public, HideBySig
    AppendPromptBuilder(PromptBuilder): PrivateScope, Public, HideBySig
    AppendSsml(String): PrivateScope, Assembly, HideBySig
    AppendSsml(Uri): PrivateScope, Assembly, HideBySig
    AppendSsml(XmlReader): PrivateScope, Public, HideBySig
    AppendSsmlMarkup(String): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Public, HideBySig
    AddPromptDatabase(Uri): PrivateScope, Public, HideBySig
    RemovePromptDatabase(Uri): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(String): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Synthesis.PromptBuilder+SsmlState: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SsmlState Header = 1 : Public, Static, Literal, HasDefault
    SsmlState Paragraph = 2 : Public, Static, Literal, HasDefault
    SsmlState Sentence = 4 : Public, Static, Literal, HasDefault
    SsmlState StyleEmphasis = 8 : Public, Static, Literal, HasDefault
    SsmlState StyleProsody = 16 : Public, Static, Literal, HasDefault
    SsmlState Voice = 32 : Public, Static, Literal, HasDefault
    SsmlState Ended = 64 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Synthesis.SpeakStartedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Synthesis.PromptEventArgs
    Void .ctor(Microsoft.Speech.Synthesis.Prompt): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Synthesis.PromptStyle: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.PromptRate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.PromptVolume): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.PromptEmphasis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.PromptRate Rate 'get set' : 
    Microsoft.Speech.Synthesis.PromptVolume Volume 'get set' : 
    Microsoft.Speech.Synthesis.PromptEmphasis Emphasis 'get set' : 
  Methods:
    get_Rate(): PrivateScope, Public, HideBySig, SpecialName
    set_Rate(PromptRate): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(PromptVolume): PrivateScope, Public, HideBySig, SpecialName
    get_Emphasis(): PrivateScope, Public, HideBySig, SpecialName
    set_Emphasis(PromptEmphasis): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Synthesis.SayAs: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.SayAs SpellOut = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs NumberOrdinal = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs NumberCardinal = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Date = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs DayMonthYear = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs MonthDayYear = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs YearMonthDay = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs YearMonth = 7 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs MonthYear = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs MonthDay = 9 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs DayMonth = 10 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Year = 11 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Month = 12 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Day = 13 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Time = 14 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Time24 = 15 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Time12 = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Telephone = 17 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Currency = 18 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SayAs Text = 19 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.VoiceGender: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.VoiceGender NotSet = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.VoiceGender Male = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.VoiceGender Female = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.VoiceGender Neutral = 3 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.VoiceAge: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.VoiceAge NotSet = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.VoiceAge Child = 10 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.VoiceAge Teen = 15 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.VoiceAge Adult = 30 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.VoiceAge Senior = 65 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.PromptRate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.PromptRate NotSet = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptRate ExtraFast = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptRate Fast = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptRate Medium = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptRate Slow = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptRate ExtraSlow = 5 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.PromptVolume: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.PromptVolume NotSet = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptVolume Silent = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptVolume ExtraSoft = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptVolume Soft = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptVolume Medium = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptVolume Loud = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptVolume ExtraLoud = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptVolume Default = 7 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.PromptEmphasis: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.PromptEmphasis NotSet = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptEmphasis Strong = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptEmphasis Moderate = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptEmphasis None = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptEmphasis Reduced = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.PromptBreak: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.PromptBreak None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptBreak ExtraSmall = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptBreak Small = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptBreak Medium = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptBreak Large = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.PromptBreak ExtraLarge = 5 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Synthesis.SpeechSynthesizer: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    Microsoft.Speech.Synthesis.ISesSynthesizer
  Properties:
    Microsoft.Speech.Synthesis.SynthesizerState State 'get ' : 
    Int32 Rate 'get set' : 
    Int32 Volume 'get set' : 
    Int32 TtsVolume 'get set' : 
    Microsoft.Speech.Synthesis.VoiceInfo Voice 'get ' : 
    System.String PromptVoices 'get set' : 
  Events:
    System.EventHandler`1[Microsoft.Speech.Synthesis.SpeakStartedEventArgs] SpeakStarted: 
    System.EventHandler`1[Microsoft.Speech.Synthesis.SpeakCompletedEventArgs] SpeakCompleted: 
    System.EventHandler`1[Microsoft.Speech.Synthesis.SpeakProgressEventArgs] SpeakProgress: 
    System.EventHandler`1[Microsoft.Speech.Synthesis.BookmarkReachedEventArgs] BookmarkReached: 
    System.EventHandler`1[Microsoft.Speech.Synthesis.VoiceChangeEventArgs] VoiceChange: 
    System.EventHandler`1[Microsoft.Speech.Synthesis.ProprietaryEngineEventArgs] ProprietaryEngineEvent: 
    System.EventHandler`1[Microsoft.Speech.Synthesis.StateChangedEventArgs] StateChanged: 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SelectVoice(String): PrivateScope, Public, HideBySig
    SelectVoiceByHints(VoiceGender): PrivateScope, Public, HideBySig
    SelectVoiceByHints(VoiceGender, VoiceAge): PrivateScope, Public, HideBySig
    SelectVoiceByHints(VoiceGender, VoiceAge, Int32): PrivateScope, Public, HideBySig
    SelectVoiceByHints(VoiceGender, VoiceAge, Int32, CultureInfo): PrivateScope, Public, HideBySig
    SpeakAsync(String): PrivateScope, Public, HideBySig
    SpeakAsync(Prompt): PrivateScope, Public, HideBySig
    SpeakSsmlAsync(String): PrivateScope, Public, HideBySig
    SpeakAsync(PromptBuilder): PrivateScope, Public, HideBySig
    Speak(String): PrivateScope, Public, HideBySig
    Speak(Prompt): PrivateScope, Public, HideBySig
    Speak(PromptBuilder): PrivateScope, Public, HideBySig
    SpeakSsml(String): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, HideBySig
    Resume(): PrivateScope, Public, HideBySig
    SpeakAsyncCancel(Prompt): PrivateScope, Public, HideBySig
    SpeakAsyncCancelAll(): PrivateScope, Public, HideBySig
    SetOutputToWaveFile(String): PrivateScope, Public, HideBySig
    SetOutputToWaveFile(String, SpeechAudioFormatInfo): PrivateScope, Public, HideBySig
    SetOutputToWaveStream(Stream): PrivateScope, Public, HideBySig
    SetOutputToAudioStream(Stream, SpeechAudioFormatInfo): PrivateScope, Public, HideBySig
    SetOutputToDefaultAudioDevice(): PrivateScope, Public, HideBySig
    SetOutputToNull(): PrivateScope, Public, HideBySig
    GetCurrentlySpokenPrompt(): PrivateScope, Public, HideBySig
    GetInstalledVoices(): PrivateScope, Public, HideBySig
    GetInstalledVoices(CultureInfo): PrivateScope, Public, HideBySig
    AddLexicon(Uri, String): PrivateScope, Public, HideBySig
    RemoveLexicon(Uri): PrivateScope, Public, HideBySig
    add_SpeakStarted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeakStarted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_SpeakCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeakCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_SpeakProgress(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeakProgress(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_BookmarkReached(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_BookmarkReached(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_VoiceChange(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_VoiceChange(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_ProprietaryEngineEvent(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ProprietaryEngineEvent(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_StateChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_StateChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    set_Rate(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Rate(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_TtsVolume(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TtsVolume(): PrivateScope, Public, HideBySig, SpecialName
    get_Voice(): PrivateScope, Public, HideBySig, SpecialName
    Skip(TimeSpan): PrivateScope, Public, HideBySig
    set_PromptVoices(String): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_PromptVoices(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Struct Microsoft.Speech.Synthesis.SynthesizerState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.SynthesizerState Ready = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SynthesizerState Speaking = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.SynthesizerState Paused = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Synthesis.SpeakCompletedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Synthesis.PromptEventArgs
    Void .ctor(Microsoft.Speech.Synthesis.Prompt): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Synthesis.SpeakProgressEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Synthesis.PromptEventArgs
    Void .ctor(Microsoft.Speech.Synthesis.Prompt, System.TimeSpan, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.TimeSpan AudioPosition 'get ' : 
    Int32 CharacterPosition 'get ' : 
    Int32 CharacterCount 'get set' : 
    System.String Text 'get set' : 
  Methods:
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_CharacterPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_CharacterCount(): PrivateScope, Public, HideBySig, SpecialName
    set_CharacterCount(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.StateChangedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Speech.Synthesis.SynthesizerState, Microsoft.Speech.Synthesis.SynthesizerState): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.SynthesizerState State 'get ' : 
    Microsoft.Speech.Synthesis.SynthesizerState PreviousState 'get ' : 
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_PreviousState(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.VoiceInfo: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Globalization.CultureInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.ObjectTokens.VoiceObjectToken): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.VoiceGender): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.VoiceGender, Microsoft.Speech.Synthesis.VoiceAge): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.VoiceGender, Microsoft.Speech.Synthesis.VoiceAge, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Globalization.CultureInfo, Microsoft.Speech.Synthesis.VoiceGender, System.String, Microsoft.Speech.Synthesis.VoiceAge): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.VoiceGender Gender 'get ' : 
    Microsoft.Speech.Synthesis.VoiceAge Age 'get ' : 
    System.String Name 'get ' : 
    System.Globalization.CultureInfo Culture 'get ' : 
    System.String Id 'get ' : 
    System.String Description 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo] SupportedAudioFormats 'get ' : 
    System.Collections.Generic.IDictionary`2[System.String,System.String] AdditionalInfo 'get ' : 
    Int32 Variant 'get ' : 
    System.String AssemblyName 'get ' : 
    System.String Clsid 'get ' : 
    System.String RegistryKeyPath 'get ' : 
    Microsoft.Speech.Internal.ObjectTokens.VoiceCategory VoiceCategory 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Gender(): PrivateScope, Public, HideBySig, SpecialName
    get_Age(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportedAudioFormats(): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalInfo(): PrivateScope, Public, HideBySig, SpecialName
    ValidateGender(VoiceGender): PrivateScope, Assembly, Static, HideBySig
    ValidateAge(VoiceAge): PrivateScope, Assembly, Static, HideBySig
    get_Variant(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AssemblyName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Clsid(): PrivateScope, Assembly, HideBySig, SpecialName
    get_RegistryKeyPath(): PrivateScope, Assembly, HideBySig, SpecialName
    get_VoiceCategory(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.VoiceChangeEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Synthesis.PromptEventArgs
    Void .ctor(Microsoft.Speech.Synthesis.Prompt, Microsoft.Speech.Synthesis.VoiceInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.VoiceInfo Voice 'get ' : 
  Methods:
    get_Voice(): PrivateScope, Public, HideBySig, SpecialName
Interface Microsoft.Speech.Synthesis.TtsEngine.IPromptEngine: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetBackupVoice(ITtsEngineSsml): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadDatabase(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnloadDatabase(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Speech.Synthesis.TtsEngine.ITtsEngine: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    Speak(SPEAKFLAGS, Guid&, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputFormat(Guid&, IntPtr, Guid&(Out), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Synthesis.TtsEngine.SPVTEXTFRAG: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr pNext : Public
    Microsoft.Speech.Synthesis.TtsEngine.SPVSTATE State : Public
    IntPtr pTextStart : Public
    Int32 ulTextLen : Public
    Int32 ulTextSrcOffset : Public
    System.Runtime.InteropServices.GCHandle gcText : Public
    System.Runtime.InteropServices.GCHandle gcNext : Public
    System.Runtime.InteropServices.GCHandle gcPhoneme : Public
    System.Runtime.InteropServices.GCHandle gcSayAsCategory : Public
Struct Microsoft.Speech.Synthesis.TtsEngine.SPVSKIPTYPE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.SPVSKIPTYPE SPVST_SENTENCE = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.SPVSTATE: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS eAction : Public
    Int16 LangID : Public
    Int16 wReserved : Public
    Int32 EmphAdj : Public
    Int32 RateAdj : Public
    Int32 Volume : Public
    Microsoft.Speech.Synthesis.TtsEngine.SPVPITCH PitchAdj : Public
    Int32 SilenceMSecs : Public
    IntPtr pPhoneIds : Public
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH ePartOfSpeech : Public
    Microsoft.Speech.Synthesis.TtsEngine.SPVCONTEXT Context : Public
Struct Microsoft.Speech.Synthesis.TtsEngine.SPVCONTEXT: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr pCategory : Public
    IntPtr pBefore : Public
    IntPtr pAfter : Public
Struct Microsoft.Speech.Synthesis.TtsEngine.SPVPITCH: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 MiddleAdj : Public
    Int32 RangeAdj : Public
Class Microsoft.Speech.Synthesis.TtsEngine.SAPIGuids: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid SPDFID_WaveFormatEx : Assembly, Static, InitOnly
    System.Guid SPDFID_Text : Assembly, Static, InitOnly
Struct Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_DEFAULT = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_ASYNC = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_PURGEBEFORESPEAK = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_IS_FILENAME = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_IS_XML = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_IS_NOT_XML = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_PERSIST_XML = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_NLP_SPEAK_PUNC = 64 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_PARSE_SAPI = 128 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPEAKFLAGS SPF_PARSE_SSML = 256 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.SPVESACTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.SPVESACTIONS SPVES_CONTINUE = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVESACTIONS SPVES_ABORT = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVESACTIONS SPVES_SKIP = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVESACTIONS SPVES_RATE = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVESACTIONS SPVES_VOLUME = 8 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS SPVA_Speak = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS SPVA_Silence = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS SPVA_Pronounce = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS SPVA_Bookmark = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS SPVA_SpellOut = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS SPVA_Section = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPVACTIONS SPVA_ParseUnknownTag = 6 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_NotOverriden = -1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_Unknown = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_Noun = 4096 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_Verb = 8192 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_Modifier = 12288 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_Function = 16384 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_Interjection = 20480 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SPPARTOFSPEECH SPPS_SuppressWord = 61440 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Synthesis.TtsEngine.TtsEngineSsml: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    GetOutputFormat(SpeakOutputFormat, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddLexicon(Uri, String, ITtsEngineSite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveLexicon(Uri, ITtsEngineSite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Speak(TextFragment[], IntPtr, ITtsEngineSite): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Microsoft.Speech.Synthesis.TtsEngine.SpeechEventInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16, Int32, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Speech.Synthesis.TtsEngine.SpeechEventInfo]
  Properties:
    Int16 EventId 'get set' : 
    Int16 ParameterType 'get set' : 
    Int32 Param1 'get set' : 
    IntPtr Param2 'get set' : 
  Methods:
    get_EventId(): PrivateScope, Public, HideBySig, SpecialName
    set_EventId(Int16): PrivateScope, Assembly, HideBySig, SpecialName
    get_ParameterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ParameterType(Int16): PrivateScope, Assembly, HideBySig, SpecialName
    get_Param1(): PrivateScope, Public, HideBySig, SpecialName
    set_Param1(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Param2(): PrivateScope, Public, HideBySig, SpecialName
    set_Param2(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(SpeechEventInfo, SpeechEventInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(SpeechEventInfo, SpeechEventInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(SpeechEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Speech.Synthesis.TtsEngine.SkipInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Type 'get set' : 
    Int32 Count 'get set' : 
  Methods:
    set_Type(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Count(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Synthesis.TtsEngine.TextFragment: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.FragmentState): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.FragmentState, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.FragmentState, System.String, System.String, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Synthesis.TtsEngine.FragmentState State 'get set' : 
    System.String TextToSpeak 'get set' : 
    Int32 TextOffset 'get set' : 
    Int32 TextLength 'get set' : 
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    set_State(FragmentState): PrivateScope, Public, HideBySig, SpecialName
    get_TextToSpeak(): PrivateScope, Public, HideBySig, SpecialName
    set_TextToSpeak(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_TextOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TextLength(): PrivateScope, Public, HideBySig, SpecialName
    set_TextLength(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Synthesis.TtsEngine.FragmentState: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction, Int32, Int32, Int32, Microsoft.Speech.Synthesis.TtsEngine.SayAs, Microsoft.Speech.Synthesis.TtsEngine.Prosody, Char[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Speech.Synthesis.TtsEngine.FragmentState]
  Properties:
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction Action 'get set' : 
    Int32 LangId 'get set' : 
    Int32 Emphasis 'get set' : 
    Int32 Duration 'get set' : 
    Microsoft.Speech.Synthesis.TtsEngine.SayAs SayAs 'get set' : 
    Microsoft.Speech.Synthesis.TtsEngine.Prosody Prosody 'get set' : 
    Char[] Phoneme 'get set' : 
  Methods:
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(TtsEngineAction): PrivateScope, Assembly, HideBySig, SpecialName
    get_LangId(): PrivateScope, Public, HideBySig, SpecialName
    set_LangId(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Emphasis(): PrivateScope, Public, HideBySig, SpecialName
    set_Emphasis(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    set_Duration(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_SayAs(): PrivateScope, Public, HideBySig, SpecialName
    set_SayAs(SayAs): PrivateScope, Assembly, HideBySig, SpecialName
    get_Prosody(): PrivateScope, Public, HideBySig, SpecialName
    set_Prosody(Prosody): PrivateScope, Assembly, HideBySig, SpecialName
    get_Phoneme(): PrivateScope, Public, HideBySig, SpecialName
    set_Phoneme(Char[]): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(FragmentState, FragmentState): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(FragmentState, FragmentState): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(FragmentState): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Speech.Synthesis.TtsEngine.Prosody: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _pitch : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _range : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _rate : Assembly
    Int32 _duration : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _volume : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ContourPoint[] _contourPoints : Assembly
  Properties:
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber Pitch 'get set' : 
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber Range 'get set' : 
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber Rate 'get set' : 
    Int32 Duration 'get set' : 
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber Volume 'get set' : 
  Methods:
    get_Pitch(): PrivateScope, Public, HideBySig, SpecialName
    set_Pitch(ProsodyNumber): PrivateScope, Public, HideBySig, SpecialName
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    set_Range(ProsodyNumber): PrivateScope, Public, HideBySig, SpecialName
    get_Rate(): PrivateScope, Public, HideBySig, SpecialName
    set_Rate(ProsodyNumber): PrivateScope, Public, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    set_Duration(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(ProsodyNumber): PrivateScope, Public, HideBySig, SpecialName
    GetContourPoints(): PrivateScope, Public, HideBySig
    SetContourPoints(ContourPoint[]): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Assembly, HideBySig
Struct Microsoft.Speech.Synthesis.TtsEngine.ContourPoint: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Microsoft.Speech.Synthesis.TtsEngine.ContourPointChangeType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Speech.Synthesis.TtsEngine.ContourPoint]
  Properties:
    Single Start 'get ' : 
    Single Change 'get ' : 
    Microsoft.Speech.Synthesis.TtsEngine.ContourPointChangeType ChangeType 'get ' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    get_Change(): PrivateScope, Public, HideBySig, SpecialName
    get_ChangeType(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ContourPoint, ContourPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ContourPoint, ContourPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(ContourPoint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber]
  Fields:
    Int32 AbsoluteNumber = 2147483647 : Public, Static, Literal, HasDefault
  Properties:
    Int32 SsmlAttributeId 'get set' : 
    Boolean IsNumberPercent 'get set' : 
    Single Number 'get set' : 
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyUnit Unit 'get set' : 
  Methods:
    get_SsmlAttributeId(): PrivateScope, Public, HideBySig, SpecialName
    set_SsmlAttributeId(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsNumberPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsNumberPercent(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Number(): PrivateScope, Public, HideBySig, SpecialName
    set_Number(Single): PrivateScope, Assembly, HideBySig, SpecialName
    get_Unit(): PrivateScope, Public, HideBySig, SpecialName
    set_Unit(ProsodyUnit): PrivateScope, Assembly, HideBySig, SpecialName
    op_Equality(ProsodyNumber, ProsodyNumber): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ProsodyNumber, ProsodyNumber): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(ProsodyNumber): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Speech.Synthesis.TtsEngine.SayAs: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String InterpretAs 'get set' : 
    System.String Format 'get set' : 
    System.String Detail 'get set' : 
  Methods:
    get_InterpretAs(): PrivateScope, Public, HideBySig, SpecialName
    set_InterpretAs(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Detail(): PrivateScope, Public, HideBySig, SpecialName
    set_Detail(String): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction Speak = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction Silence = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction Pronounce = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction Bookmark = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction SpellOut = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction StartSentence = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction StartParagraph = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction ParseUnknownTag = 7 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction BeginPromptEngineOutput = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction EndPromptEngineOutput = 9 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction PromptEngineDatabase = 10 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction PromptEngineSpeak = 11 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction PromptEngineId = 12 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction BeginPromptEngineWithTag = 13 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction EndPromptEngineWithTag = 14 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction BeginPromptEngineRule = 15 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction EndPromptEngineRule = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction PromptEngineAudio = 17 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.EmphasisWord: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisWord Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisWord Strong = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisWord Moderate = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisWord None = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisWord Reduced = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak None = -1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak ExtraWeak = -2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak Weak = -3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak Medium = -4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak Strong = -5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak ExtraStrong = -6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EmphasisBreak Default = -7 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.ProsodyPitch: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyPitch Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyPitch ExtraLow = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyPitch Low = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyPitch Medium = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyPitch High = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyPitch ExtraHigh = 5 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.ProsodyRange: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRange Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRange ExtraLow = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRange Low = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRange Medium = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRange High = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRange ExtraHigh = 5 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.ProsodyRate: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRate Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRate ExtraSlow = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRate Slow = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRate Medium = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRate Fast = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyRate ExtraFast = 5 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume Default = -1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume Silent = -2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume ExtraSoft = -3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume Soft = -4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume Medium = -5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume Loud = -6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyVolume ExtraLoud = -7 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.ProsodyUnit: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyUnit Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyUnit Hz = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyUnit Semitone = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.TtsEventId: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId StartInputStream = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId EndInputStream = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId VoiceChange = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId Bookmark = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId WordBoundary = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId Phoneme = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId SentenceBoundary = 7 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId Viseme = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId AudioLevel = 9 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.TtsEventId Private = 15 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.EventParameterType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.EventParameterType Undefined = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EventParameterType Token = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EventParameterType Object = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EventParameterType Pointer = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.EventParameterType String = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.SpeakOutputFormat: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.SpeakOutputFormat WaveFormat = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.SpeakOutputFormat Text = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.ContourPointChangeType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Synthesis.TtsEngine.ContourPointChangeType Hz = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Synthesis.TtsEngine.ContourPointChangeType Percentage = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Synthesis.TtsEngine.DestroyStructureInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr Obj : Assembly
    System.Type MyType : Assembly
Struct Microsoft.Speech.Synthesis.TtsEngine.TextFragmentInterop: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Synthesis.TtsEngine.FragmentStateInterop _state : Assembly
    System.String _textToSpeak : Assembly, HasFieldMarshal
    Int32 _textOffset : Assembly
    Int32 _textLength : Assembly
  Methods:
    FragmentToPtr(List`1, Collection`1, Collection`1): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Speech.Synthesis.TtsEngine.FragmentStateInterop: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Synthesis.TtsEngine.TtsEngineAction _action : Assembly
    Int32 _langId : Assembly
    Int32 _emphasis : Assembly
    Int32 _duration : Assembly
    IntPtr _sayAs : Assembly
    IntPtr _prosody : Assembly
    IntPtr _phoneme : Assembly
  Methods:
    FragmentStateToPtr(FragmentState, Collection`1, Collection`1): PrivateScope, Assembly, HideBySig
Struct Microsoft.Speech.Synthesis.TtsEngine.ProsodyInterop: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _pitch : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _range : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _rate : Assembly
    Int32 _duration : Assembly
    Microsoft.Speech.Synthesis.TtsEngine.ProsodyNumber _volume : Assembly
    IntPtr _contourPoints : Assembly
  Methods:
    ProsodyToPtr(Prosody, Collection`1, Collection`1): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Text.NormalizerCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Internal.SapiInterop.ISpEnginePronunciation, System.Globalization.CultureInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Dispose(): PrivateScope, Public, HideBySig
    Normalize(String): PrivateScope, Public, HideBySig
Class Microsoft.Speech.Text.NormalizedResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String InputString 'get ' : 
    Microsoft.Speech.Text.NormalizedResultAlternate TopAlternate 'get ' : 
  Methods:
    get_InputString(): PrivateScope, Public, HideBySig, SpecialName
    get_TopAlternate(): PrivateScope, Public, HideBySig, SpecialName
    GetAlternates(): PrivateScope, Public, HideBySig
    AddAlternate(String): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Text.NormalizedResultAlternate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Microsoft.Speech.Text.NormalizedResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Text.NormalizedResult Result 'get ' : 
    System.String NormalizedString 'get ' : 
  Methods:
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    get_NormalizedString(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Text.NormalizedResultAlternateCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Text.NormalizedResultAlternate]
    Void .ctor(System.Collections.Generic.IList`1[Microsoft.Speech.Text.NormalizedResultAlternate]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct Microsoft.Speech.SRID: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.SRID NullParamIllegal = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ArrayOfNullIllegal = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ParamsEntryNullIllegal = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID Unavailable = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnexpectedError = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CollectionReadOnly = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID StringCanNotBeEmpty = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EnumInvalid = 7 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotSupportedWithThisVersionOfSAPI = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotSupportedWithThisVersionOfSAPI2 = 9 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotSupportedWithThisVersionOfSAPICompareOption = 10 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EngineDoesNotSupportAddCustomPart = 11 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MustBeGreaterThanZero = 12 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidXml = 13 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID OperationAborted = 14 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvariantCultureInfo = 15 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DuplicatedEntry = 16 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID StreamMustBeReadable = 17 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID StreamMustBeWriteable = 18 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID StreamMustBeSeekable = 19 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID StreamEndedUnexpectedly = 20 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CannotReadFromDirectory = 21 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnknownMimeFormat = 22 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CannotLoadResourceFromManifest = 23 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TokenInUse = 24 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TokenDeleted = 25 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TokenUninitialized = 26 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidTokenId = 27 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotFound = 28 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoBackSlash = 29 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRegistryEntry = 30 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TokenCannotCreateInstance = 31 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidXmlFormat = 32 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID IncorrectAttributeValue = 33 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MissingRequiredAttribute = 34 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRuleRefSelf = 35 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidDynamicExport = 36 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidToken = 37 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MetaNameHTTPEquiv = 38 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EmptyRule = 39 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidTokenString = 40 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidQuotedString = 41 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ExportDynamicRule = 42 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EmptyDisplayString = 43 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EmptyPronunciationString = 44 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidPhoneme = 45 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MultiplePronunciationString = 46 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MultipleDisplayString = 47 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleRedefinition = 48 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EmptyOneOf = 49 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidGrammarOrdering = 50 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GlobalTagPlacement = 51 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GlobalTagNotAllowed = 52 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MinMaxOutOfRange = 53 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidExampleOrdering = 54 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarDefTwice = 55 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnsupportedFormat = 56 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidImport = 57 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DuplicatedRuleName = 58 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RootRuleAlreadyDefined = 59 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleNameIdConflict = 60 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleNotDynamic = 61 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID StateWithNoArcs = 62 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoTerminatingRulePath = 63 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleRefNoUri = 64 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnavailableProperty = 65 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MinGreaterThanMax = 66 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ReqConfidenceNotSupported = 67 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiPropertiesAndSemantics = 68 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarCompilerError = 69 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleScriptNotFound = 70 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DynamicRuleNotFound = 71 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleScriptInvalidParameters = 72 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleScriptInvalidReturnType = 73 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoClassname = 74 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EmbeddedClassLibraryFailed = 75 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CannotFindClass = 76 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID StrongTypedGrammarNotAGrammar = 77 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoScriptsForRules = 78 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ClassNotPublic = 79 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MethodNotPublic = 80 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID IncompatibleLanguageProperties = 81 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID IncompatibleNamespaceProperties = 82 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID IncompatibleDebugProperties = 83 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CannotLoadDotNetSemanticCode = 84 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidSemanticProcessingType = 85 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidScriptDefinition = 86 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidMethodName = 87 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ConstructorNotAllowed = 88 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID OverloadNotAllowed = 89 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID OnInitOnPublicRule = 90 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ArgumentMismatch = 91 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CantGetPropertyFromSerializedInfo = 92 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CantFindAConstructor = 93 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TooManyArcs = 94 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TooManyRulesWithSemanticsGlobals = 95 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MaxTransitionsCount = 96 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnknownElement = 97 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CircularRuleRef = 98 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidFlagsSet = 99 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleDefinedMultipleTimes = 100 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleDefinedMultipleTimes2 = 101 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleNotDefined = 102 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RootNotDefined = 103 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidLanguage = 104 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRuleId = 105 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRepeatProbability = 106 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidConfidence = 107 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidMinRepeat = 108 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidMaxRepeat = 109 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidWeight = 110 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidName = 111 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidValueType = 112 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TagFormatNotSet = 113 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoName = 114 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoName1 = 115 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidSpecialRuleRef = 116 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRuleRef = 117 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidNotEmptyElement = 118 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidEmptyElement = 119 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidEmptyRule = 120 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UndefRuleRef = 121 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnsupportedLanguage = 122 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnsupportedPhoneticAlphabet = 123 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidScriptAttribute = 124 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoLanguageSet = 125 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MethodAttributeDefinedMultipeTimes = 126 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RuleAttributeDefinedMultipeTimes = 127 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidAssemblyReferenceAttribute = 128 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidImportNamespaceAttribute = 129 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoUriForSpecialRuleRef = 130 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoAliasForSpecialRuleRef = 131 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoSmlData = 132 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidNameValueProperty = 133 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidTagInAnEmptyItem = 134 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MoreThanOneLexicon = 135 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidSrgs = 136 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidSrgsNamespace = 137 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID Line = 138 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID Position = 139 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidVersion = 140 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidTagFormat = 141 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MissingTagFormat = 142 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidGrammarMode = 143 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidGrammarAttribute = 144 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRuleAttribute = 145 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRulerefAttribute = 146 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidOneOfAttribute = 147 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidItemAttribute = 148 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidTokenAttribute = 149 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidItemRepeatAttribute = 150 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidReqConfAttribute = 151 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidTagAttribute = 152 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidLexiconAttribute = 153 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidMetaAttribute = 154 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidItemAttribute2 = 155 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidElement = 156 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidElementContent = 157 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidBothStrengthAndSize = 158 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidRuleScope = 159 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidDynamicSetting = 160 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidSubsetAttribute = 161 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidVoiceElementInPromptOutput = 162 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MultipleXmlElement = 163 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidXmlAttribute = 164 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidXmlAttributeValue = 165 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnexpectedAttributeValue = 166 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoRuleId = 167 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderInvalideState = 168 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderStateEnded = 169 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderStateSentence = 170 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderStateParagraph = 171 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderStateVoice = 172 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderStateStyle = 173 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderAgeOutOfRange = 174 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderMismatchStyle = 175 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderMismatchVoice = 176 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderMismatchParagraph = 177 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderMismatchSentence = 178 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderNestedParagraph = 179 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderNestedSentence = 180 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderInvalidAttribute = 181 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderInvalidElement = 182 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderInvalidVariant = 183 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptBuilderDatabaseName = 184 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PromptAsyncOperationCancelled = 185 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerPauseResumeMismatched = 186 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerInvalidMediaType = 187 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerUnknownMediaType = 188 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerSpeakError = 189 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerInvalidWaveFile = 190 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerPromptInUse = 191 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerUnknownPriority = 192 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerUnknownEvent = 193 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerVoiceFailed = 194 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerSetVoiceNoMatch = 195 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerNoCulture = 196 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerSyncOperationWhilePaused = 197 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerSyncSetOutputWhilePaused = 198 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerNoCulture2 = 199 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerNoSpeak = 200 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerSetOutputSpeaking = 201 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SynthesizerSkipNoActivePrompt = 202 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InvalidSpeakAttribute = 203 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnsupportedAlphabet = 204 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarInvalidWeight = 205 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarInvalidPriority = 206 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DictationInvalidTopic = 207 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DictationTopicNotFound = 208 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerGrammarNotFound = 209 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerRuleNotFound = 210 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerInvalidBinaryGrammar = 211 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerRuleNotFoundStream = 212 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerNoRootRuleToActivate = 213 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerNoRootRuleToActivate1 = 214 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerRuleActivationFailed = 215 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerAlreadyRecognizing = 216 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerHasNoGrammar = 217 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NegativeTimesNotSupported = 218 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID AudioDeviceFormatError = 219 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID AudioDeviceError = 220 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID AudioDeviceInternalError = 221 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerNotFound = 222 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerNotEnabled = 223 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognitionNotSupported = 224 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognitionNotSupportedOn64bit = 225 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarAlreadyLoaded = 226 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerNoInputSource = 227 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarNotLoaded = 228 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarLoadingInProgress = 229 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarLoadFailed = 230 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID GrammarWrongRecognizer = 231 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotSupportedOnDictationGrammars = 232 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID LocalFilesOnly = 233 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotValidAudioFile = 234 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotValidAudioStream = 235 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID FileNotFound = 236 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CannotSetPriorityOnDictation = 237 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerUpdateTableTooLarge = 238 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID MaxAlternatesInvalid = 239 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerSettingGetError = 240 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerSettingUpdateError = 241 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RecognizerSettingNotSupported = 242 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ResourceUsageOutOfRange = 243 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RateOutOfRange = 244 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID EndSilenceOutOfRange = 245 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RejectionThresholdOutOfRange = 246 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ReferencedGrammarNotFound = 247 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRuleNotFound2 = 248 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CannotCallMethodWhileActive = 249 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TimeoutCannotBeNegative = 250 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID TimeoutTooLarge = 251 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoAudioAvailable = 252 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ResultNotGrammarAvailable = 253 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ResultInvalidFormat = 254 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID UnhandledVariant = 255 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DupSemanticKey = 256 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DupSemanticValue = 257 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID CannotUseCustomFormat = 258 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoPromptEngine = 259 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoPromptEngineInterface = 260 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SeekNotSupported = 261 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID ExtraDataNotPresent = 262 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID BitsPerSampleInvalid = 263 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DataBlockSizeInvalid = 264 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotWholeNumberBlocks = 265 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID BlockSignatureInvalid = 266 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NumberOfSamplesInvalid = 267 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUninitialized = 268 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAlreadyInitialized = 269 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotSupportedFormat = 270 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidFlags = 271 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorEndOfStream = 272 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorDeviceBusy = 273 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorDeviceNotSupported = 274 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorDeviceNotEnabled = 275 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoDriver = 276 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorFileMustBeUnicode = 277 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID InsufficientData = 278 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidPhraseID = 279 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorBufferTooSmall = 280 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorFormatNotSpecified = 281 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAudioStopped0 = 282 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID AudioPaused = 283 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRuleNotFound = 284 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorTTSEngineException = 285 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorTTSNLPException = 286 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorEngineBUSY = 287 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID AudioConversionEnabled = 288 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoHypothesisAvailable = 289 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorCantCreate = 290 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID AlreadyInLex = 291 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotInLex = 292 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID LexNothingToSync = 293 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorLexVeryOutOfSync = 294 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUndefinedForwardRuleRef = 295 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorEmptyRule = 296 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorGrammarCompilerInternalError = 297 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRuleNotDynamic = 298 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorDuplicateRuleName = 299 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorDuplicateResourceName = 300 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorTooManyGrammars = 301 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorCircularReference = 302 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidImport = 303 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidWAVFile = 304 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID RequestPending = 305 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAllWordsOptional = 306 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInstanceChangeInvalid = 307 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRuleNameIdConflict = 308 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoRules = 309 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorCircularRuleRef = 310 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NoParseFound = 311 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidHandle = 312 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRemoteCallTimedout = 313 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAudioBufferOverflow = 314 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoAudioData = 315 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorDeadAlternate = 316 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorHighLowConfidence = 317 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidFormatString = 318 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SPNotSupportedOnStreamInput = 319 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAppLexReadOnly = 320 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoTerminatingRulePath = 321 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID WordExistsWithoutPronunciation = 322 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorStreamClosed = 323 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoMoreItems = 324 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotFound = 325 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidAudioState = 326 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorGenericMMSYS = 327 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorMarshalerException = 328 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotDynamicGrammar = 329 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAmbiguousProperty = 330 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidRegistrykey = 331 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorInvalidTokenId = 332 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorXMLBadSyntax = 333 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorXMLResourceNotFound = 334 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorTokenInUse = 335 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorTokenDeleted = 336 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorMultilingualNotSupported = 337 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorExportDynamicRule = 338 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorSTGF = 339 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorWordFormat = 340 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorStreamNotActive = 341 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorEngineResponseInvalid = 342 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorSREngineException = 343 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorStreamPosInvalid = 344 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRecognizerInactive = 345 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRemoteCallOnWrongThread = 346 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRemoteProcessTerminated = 347 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRemoteProcessAlreadyRunning = 348 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorLangIdMismatch = 349 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorPartialParseFound = 350 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotTopLevelRule = 351 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoRuleActive = 352 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorLexRequiresCookie = 353 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorStreamUninitialized = 354 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUnused0 = 355 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotSupportedLang = 356 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorVoicePaused = 357 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAudioBufferUnderflow = 358 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAudioStoppedUnexpectedly = 359 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoWordPronunciation = 360 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAlternatesWouldBeInconsistent = 361 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotSupportedForSharedRecognizer = 362 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorTimeOut = 363 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorReenterSynchronize = 364 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorStateWithNoArcs = 365 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotActiveSession = 366 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAlreadyDeleted = 367 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAudioStopped = 368 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRecoXMLGenerationFail = 369 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorSMLGenerationFail = 370 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotPromptVoice = 371 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRootRuleAlreadyDefined = 372 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUnused1 = 373 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUnused2 = 374 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUnused3 = 375 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUnused4 = 376 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUnused5 = 377 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorUnused6 = 378 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorScriptDisallowed = 379 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRemoteCallTimedOutStart = 380 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRemoteCallTimedOutConnect = 381 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorSecMgrChangeNotAllowed = 382 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorCompleteButExtendable = 383 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorFailedToDeleteFile = 384 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorSharedEngineDisabled = 385 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorRecognizerNotFound = 386 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorAudioNotFound = 387 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoVowel = 388 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotSupportedPhoneme = 389 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoRulesToActivate = 390 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNoWordEntryNotification = 391 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorWordNeedsNormalization = 392 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorCannotNormalize = 393 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID LimitReached = 394 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID NotSupported = 395 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorTopicNotADaptable = 396 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorPhonemeConversion = 397 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorNotSupportedForInprocRecognizer = 398 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorOverload = 399 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorLexInvalidData = 400 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID SapiErrorCfgInvalidData = 401 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DBBadFormat = 402 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DBDuplicateId = 403 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DBIdNotFound = 404 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DBNotFound = 405 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DBEntryNotFound = 406 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DBDuplicateDBName = 407 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEReserved1 = 408 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEBadXmlTag = 409 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEBadAudioFile = 410 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID DBLoadFailed = 411 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PETooBigToConvert = 412 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEMissingBoundaryTimes = 413 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEReserved2 = 414 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEReserved3 = 415 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEReserved4 = 416 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEFileNotFound = 417 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEIoErr = 418 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PENoTtsVoice = 419 : Public, Static, Literal, HasDefault
    Microsoft.Speech.SRID PEScriptLanguage = 420 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.SR: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Get(SRID, Object[]): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Internal.ReadOnlyDictionary`2[K,V]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: K
  Type parameter: V
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[K,V]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[K,V]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[K,V]]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    V Item [K] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    System.Collections.Generic.ICollection`1[K] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[V] Values 'get ' : 
    System.Collections.Generic.Dictionary`2[K,V] InternalDictionary 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(K): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(K, V): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(K): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(K, V): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(K): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_InternalDictionary(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.AudioLevelUpdatedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 AudioLevel 'get ' : 
  Methods:
    get_AudioLevel(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.AudioSignalProblem: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.AudioSignalProblem None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioSignalProblem TooNoisy = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioSignalProblem NoSignal = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioSignalProblem TooLoud = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioSignalProblem TooSoft = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioSignalProblem TooFast = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioSignalProblem TooSlow = 6 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.AudioSignalProblemOccurredEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Speech.Recognition.AudioSignalProblem, Int32, System.TimeSpan, System.TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.AudioSignalProblem AudioSignalProblem 'get ' : 
    Int32 AudioLevel 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    System.TimeSpan RecognizerAudioPosition 'get ' : 
  Methods:
    get_AudioSignalProblem(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_RecognizerAudioPosition(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.AudioState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.AudioState Stopped = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioState Silence = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.AudioState Speech = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.AudioStateChangedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Speech.Recognition.AudioState): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.AudioState AudioState 'get ' : 
  Methods:
    get_AudioState(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.Choices: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.GrammarBuilding.OneOfElement OneOf 'get ' : 
  Methods:
    Add(String[]): PrivateScope, Public, HideBySig
    Add(GrammarBuilder[]): PrivateScope, Public, HideBySig
    ToGrammarBuilder(): PrivateScope, Public, HideBySig
    get_OneOf(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.DtmfHypothesizedEventArgs: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.RecognitionEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Speech.Recognition.DtmfRecognitionEngine: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.ISpeechRecognitionEngine): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.Grammar] Grammars 'get ' : 
    System.TimeSpan InitialSilenceTimeout 'get set' : 
    System.TimeSpan InterToneTimeout 'get set' : 
    System.TimeSpan EndSilenceTimeoutAmbiguous 'get set' : 
  Events:
    System.EventHandler`1[Microsoft.Speech.Recognition.LoadGrammarCompletedEventArgs] LoadGrammarCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.DtmfHypothesizedEventArgs] DtmfHypothesized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.DtmfRecognizedEventArgs] DtmfRecognized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.DtmfRecognitionRejectedEventArgs] DtmfRecognitionRejected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.DtmfRecognizeCompletedEventArgs] RecognizeCompleted: 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddTone(Byte): PrivateScope, Public, HideBySig
    AddTone(DtmfTone): PrivateScope, Public, HideBySig
    FlushToneBuffer(): PrivateScope, Public, HideBySig
    LoadGrammar(Grammar): PrivateScope, Public, HideBySig
    LoadGrammarAsync(Grammar): PrivateScope, Public, HideBySig
    add_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    UnloadGrammar(Grammar): PrivateScope, Public, HideBySig
    UnloadAllGrammars(): PrivateScope, Public, HideBySig
    get_Grammars(): PrivateScope, Public, HideBySig, SpecialName
    get_InitialSilenceTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_InitialSilenceTimeout(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_InterToneTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_InterToneTimeout(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_EndSilenceTimeoutAmbiguous(): PrivateScope, Public, HideBySig, SpecialName
    set_EndSilenceTimeoutAmbiguous(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    GetTerminationTones(): PrivateScope, Public, HideBySig
    SetTerminationTones(ICollection`1): PrivateScope, Public, HideBySig
    SetTerminationTone(DtmfTone): PrivateScope, Public, HideBySig
    RecognizeAsync(): PrivateScope, Public, HideBySig
    RecognizeAsync(Boolean): PrivateScope, Public, HideBySig
    RecognizeAsyncCancel(): PrivateScope, Public, HideBySig
    add_DtmfHypothesized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DtmfHypothesized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_DtmfRecognized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DtmfRecognized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_DtmfRecognitionRejected(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_DtmfRecognitionRejected(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_RecognizeCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RecognizeCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    ToneToString(Byte): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Speech.Recognition.DtmfRecognitionRejectedEventArgs: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Microsoft.Speech.Recognition.RecognitionEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult, System.Nullable`1[Microsoft.Speech.Recognition.DtmfTone]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[Microsoft.Speech.Recognition.DtmfTone] TerminationTone 'get ' : 
  Methods:
    get_TerminationTone(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.DtmfRecognizeCompletedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.AsyncCompletedEventArgs
    Void .ctor(System.Exception, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult, System.Nullable`1[Microsoft.Speech.Recognition.DtmfTone]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.RecognitionResult Result 'get ' : 
    Boolean InitialSilenceTimeout 'get ' : 
    Boolean InterToneTimeout 'get ' : 
    System.Nullable`1[Microsoft.Speech.Recognition.DtmfTone] TerminationTone 'get ' : 
  Methods:
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    get_InitialSilenceTimeout(): PrivateScope, Public, HideBySig, SpecialName
    get_InterToneTimeout(): PrivateScope, Public, HideBySig, SpecialName
    get_TerminationTone(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.DtmfRecognizedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Recognition.RecognitionEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult, System.Nullable`1[Microsoft.Speech.Recognition.DtmfTone]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[Microsoft.Speech.Recognition.DtmfTone] TerminationTone 'get ' : 
  Methods:
    get_TerminationTone(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.DtmfTone: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.DtmfTone Zero = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone One = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Two = 2 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Three = 3 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Four = 4 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Five = 5 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Six = 6 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Seven = 7 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Eight = 8 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Nine = 9 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Star = 10 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone Hash = 11 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone A = 12 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone B = 13 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone C = 14 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.DtmfTone D = 15 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.EmulateRecognizeCompletedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.AsyncCompletedEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult, System.Exception, Boolean, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.RecognitionResult Result 'get ' : 
  Methods:
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.GrammarBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Recognition.SubsetMatchingMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.Choices): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SemanticResultKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.SemanticResultValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugShowPhrases 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String DebugSummary 'get ' : 
    Microsoft.Speech.Internal.GrammarBuilding.BuilderElements InternalBuilder 'get ' : 
  Methods:
    Append(String): PrivateScope, Public, HideBySig
    Append(String, SubsetMatchingMode): PrivateScope, Public, HideBySig
    Append(String, Int32, Int32): PrivateScope, Public, HideBySig
    Append(GrammarBuilder): PrivateScope, Public, HideBySig
    Append(Choices): PrivateScope, Public, HideBySig
    Append(SemanticResultKey): PrivateScope, Public, HideBySig
    Append(SemanticResultValue): PrivateScope, Public, HideBySig
    Append(GrammarBuilder, Int32, Int32): PrivateScope, Public, HideBySig
    AppendDictation(): PrivateScope, Public, HideBySig
    AppendDictation(String): PrivateScope, Public, HideBySig
    AppendWildcard(): PrivateScope, Public, HideBySig
    AppendRuleReference(String): PrivateScope, Public, HideBySig
    AppendRuleReference(String, String): PrivateScope, Public, HideBySig
    get_DebugShowPhrases(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(String, GrammarBuilder): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(String, GrammarBuilder): PrivateScope, Public, Static, HideBySig
    op_Addition(GrammarBuilder, String): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(GrammarBuilder, String): PrivateScope, Public, Static, HideBySig
    op_Addition(Choices, GrammarBuilder): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Choices, GrammarBuilder): PrivateScope, Public, Static, HideBySig
    op_Addition(GrammarBuilder, Choices): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(GrammarBuilder, Choices): PrivateScope, Public, Static, HideBySig
    op_Addition(GrammarBuilder, GrammarBuilder): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(GrammarBuilder, GrammarBuilder): PrivateScope, Public, Static, HideBySig
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Choices): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(SemanticResultKey): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(SemanticResultValue): PrivateScope, Public, Static, HideBySig, SpecialName
    ValidateRepeatArguments(Int32, Int32, String, String): PrivateScope, Assembly, Static, HideBySig
    ValidateSubsetMatchingCriteriaArgument(SubsetMatchingMode, String): PrivateScope, Assembly, Static, HideBySig
    CreateGrammar(IElementFactory): PrivateScope, Assembly, HideBySig
    Compile(Stream): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, HideBySig
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_InternalBuilder(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Int32 Count 'get set' : 
    Boolean Marked 'get set' : 
    Microsoft.Speech.Internal.GrammarBuilding.BuilderElements Parent 'get set' : 
    System.String DebugSummary 'get ' : 
  Methods:
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CalcCount(BuilderElements): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_Count(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    set_Count(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_Marked(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    set_Marked(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_Parent(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    set_Parent(BuilderElements): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.BuilderElements: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase] Items 'get ' : 
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Add(String): PrivateScope, Assembly, HideBySig
    Add(GrammarBuilder): PrivateScope, Assembly, HideBySig
    Add(GrammarBuilderBase): PrivateScope, Assembly, HideBySig
    CloneItems(BuilderElements): PrivateScope, Assembly, HideBySig
    CreateChildrenElements(IElementFactory, IRule, IdentifierCollection): PrivateScope, Assembly, HideBySig
    CreateChildrenElements(IElementFactory, IItem, IRule, IdentifierCollection): PrivateScope, Assembly, HideBySig
    CalcCount(BuilderElements): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Items(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Recognition.InvalidCultureException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Microsoft.Speech.Recognition.ISpeechRecognitionEngine: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.Grammar] Grammars 'get ' : 
  Events:
    System.EventHandler`1[Microsoft.Speech.Recognition.LoadGrammarCompletedEventArgs] LoadGrammarCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechHypothesizedEventArgs] SpeechHypothesized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechRecognizedEventArgs] SpeechRecognized: 
  Methods:
    get_Grammars(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_SpeechHypothesized(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_SpeechHypothesized(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_SpeechRecognized(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_SpeechRecognized(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EmulateRecognize(String, CompareOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadGrammar(Grammar): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadGrammarAsync(Grammar): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnloadAllGrammars(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnloadGrammar(Grammar): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Speech.Recognition.LoadGrammarCompletedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.AsyncCompletedEventArgs
    Void .ctor(Microsoft.Speech.Recognition.Grammar, System.Exception, Boolean, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.Grammar Grammar 'get ' : 
  Methods:
    get_Grammar(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.RecognizeCompletedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.AsyncCompletedEventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognitionResult, Boolean, Boolean, Boolean, System.TimeSpan, System.Exception, Boolean, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.RecognitionResult Result 'get ' : 
    Boolean InitialSilenceTimeout 'get ' : 
    Boolean BabbleTimeout 'get ' : 
    Boolean InputStreamEnded 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
  Methods:
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    get_InitialSilenceTimeout(): PrivateScope, Public, HideBySig, SpecialName
    get_BabbleTimeout(): PrivateScope, Public, HideBySig, SpecialName
    get_InputStreamEnded(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.RecognizeMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.RecognizeMode Single = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.RecognizeMode Multiple = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.RecognizerBase: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Recognition.IRecognizerInternal
    System.IDisposable
  Fields:
    Microsoft.Speech.Recognition.AudioState _audioState : Assembly
    Boolean _haveInputSource : Assembly
  Properties:
    Boolean PauseRecognizerOnRecognition 'get set' : 
    System.TimeSpan InitialSilenceTimeout 'get set' : 
    System.TimeSpan BabbleTimeout 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.Grammar] Grammars 'get ' : 
    Microsoft.Speech.Recognition.RecognizerInfo RecognizerInfo 'get ' : 
    Microsoft.Speech.Recognition.AudioState AudioState 'get set' : 
    Int32 AudioLevel 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    System.TimeSpan RecognizerAudioPosition 'get ' : 
    Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo AudioFormat 'get ' : 
    Int32 MaxAlternates 'get set' : 
    Microsoft.Speech.Internal.SapiInterop.ISpRecoContext RecoContext 'get ' : 
    Boolean ReturnEmmaResult 'get set' : 
  Events:
    System.EventHandler`1[Microsoft.Speech.Recognition.RecognizeCompletedEventArgs] RecognizeCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.EmulateRecognizeCompletedEventArgs] EmulateRecognizeCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.StateChangedEventArgs] StateChanged: 
    System.EventHandler`1[Microsoft.Speech.Recognition.LoadGrammarCompletedEventArgs] LoadGrammarCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechDetectedEventArgs] SpeechDetected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SoundDetectedEventArgs] SoundDetected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SoundDetectedEventArgs] SoundEndDetected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechRecognizedEventArgs] SpeechRecognized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechRecognitionRejectedEventArgs] SpeechRecognitionRejected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechHypothesizedEventArgs] SpeechHypothesized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.AudioSignalProblemOccurredEventArgs] AudioSignalProblemOccurred: 
    System.EventHandler`1[Microsoft.Speech.Recognition.AudioLevelUpdatedEventArgs] AudioLevelUpdated: 
    System.EventHandler`1[Microsoft.Speech.Recognition.AudioStateChangedEventArgs] AudioStateChanged: 
    System.EventHandler`1[Microsoft.Speech.Recognition.RecognizerUpdateReachedEventArgs] RecognizerUpdateReached: 
    System.EventHandler`1[Microsoft.Speech.Recognition.RecognizeCompletedEventArgs] RecognizeCompletedSync: 
    System.EventHandler`1[Microsoft.Speech.Recognition.EmulateRecognizeCompletedEventArgs] EmulateRecognizeCompletedSync: 
  Methods:
    ThrowIfSapiErrorCode(SAPIErrorCodes): PrivateScope, Assembly, Static, HideBySig
    AddEventInterest(UInt64): PrivateScope, Assembly, HideBySig
    RemoveEventInterest(UInt64): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadGrammar(Grammar): PrivateScope, Assembly, HideBySig
    LoadGrammarAsync(Grammar): PrivateScope, Assembly, HideBySig
    UnloadGrammar(Grammar): PrivateScope, Assembly, HideBySig
    UnloadAllGrammars(): PrivateScope, Assembly, HideBySig
    SimulateRecognize(String): PrivateScope, Assembly, HideBySig
    EmulateRecognize(String): PrivateScope, Assembly, HideBySig
    EmulateRecognizeAsync(String): PrivateScope, Assembly, HideBySig
    EmulateRecognize(String, CompareOptions): PrivateScope, Assembly, HideBySig
    EmulateRecognizeAsync(String, CompareOptions): PrivateScope, Assembly, HideBySig
    EmulateRecognize(RecognizedWordUnit[], CompareOptions): PrivateScope, Assembly, HideBySig
    EmulateRecognizeAsync(RecognizedWordUnit[], CompareOptions): PrivateScope, Assembly, HideBySig
    RequestRecognizerUpdate(): PrivateScope, Assembly, HideBySig
    RequestRecognizerUpdate(Object): PrivateScope, Assembly, HideBySig
    RequestRecognizerUpdate(Object, TimeSpan): PrivateScope, Assembly, HideBySig
    Initialize(SapiRecognizer, Boolean): PrivateScope, Assembly, HideBySig
    RecognizeAsync(RecognizeMode): PrivateScope, Assembly, HideBySig
    Recognize(TimeSpan): PrivateScope, Assembly, HideBySig
    RecognizeAsyncCancel(): PrivateScope, Assembly, HideBySig
    RecognizeAsyncStop(): PrivateScope, Assembly, HideBySig
    get_PauseRecognizerOnRecognition(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PauseRecognizerOnRecognition(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    SetInput(String): PrivateScope, Assembly, HideBySig
    SetInput(Stream, SpeechAudioFormatInfo): PrivateScope, Assembly, HideBySig
    SetInputToDefaultAudioDevice(): PrivateScope, Assembly, HideBySig
    QueryRecognizerSettingAsInt(String): PrivateScope, Assembly, HideBySig
    QueryRecognizerSetting(String): PrivateScope, Assembly, HideBySig
    UpdateRecognizerSetting(String, String): PrivateScope, Assembly, HideBySig
    UpdateRecognizerSetting(String, Int32): PrivateScope, Assembly, HideBySig
    SetSerializedState(Byte[]): PrivateScope, Assembly, HideBySig
    GetSerializedState(): PrivateScope, Assembly, HideBySig
    ExceptionFromSapiCreateRecognizerError(COMException): PrivateScope, Assembly, Static, HideBySig
    ExceptionFromSapiCreateRecognizerError(SAPIErrorCodes): PrivateScope, Assembly, Static, HideBySig
    get_InitialSilenceTimeout(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InitialSilenceTimeout(TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName
    get_BabbleTimeout(): PrivateScope, Assembly, HideBySig, SpecialName
    set_BabbleTimeout(TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName
    get_Grammars(): PrivateScope, Assembly, HideBySig, SpecialName
    get_RecognizerInfo(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioState(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AudioState(AudioState): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioLevel(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_RecognizerAudioPosition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AudioFormat(): PrivateScope, Assembly, HideBySig, SpecialName
    get_MaxAlternates(): PrivateScope, Assembly, HideBySig, SpecialName
    set_MaxAlternates(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_RecoContext(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ReturnEmmaResult(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ReturnEmmaResult(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    add_RecognizeCompleted(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_RecognizeCompleted(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_EmulateRecognizeCompleted(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_EmulateRecognizeCompleted(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_StateChanged(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_StateChanged(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_LoadGrammarCompleted(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_LoadGrammarCompleted(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SpeechDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SpeechDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SoundDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SoundDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SoundEndDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SoundEndDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SpeechRecognized(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SpeechRecognized(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SpeechRecognitionRejected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SpeechRecognitionRejected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SpeechHypothesized(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SpeechHypothesized(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_AudioSignalProblemOccurred(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_AudioSignalProblemOccurred(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_AudioLevelUpdated(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_AudioLevelUpdated(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_AudioStateChanged(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_AudioStateChanged(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_RecognizerUpdateReached(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_RecognizerUpdateReached(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.InternalGrammarData: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UInt64, Microsoft.Speech.Internal.SapiInterop.SapiGrammar, Boolean, Single, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt64 _grammarId : Assembly
    Microsoft.Speech.Internal.SapiInterop.SapiGrammar _sapiGrammar : Assembly
    Boolean _grammarEnabled : Assembly
    Single _grammarWeight : Assembly
    Int32 _grammarPriority : Assembly
Class Microsoft.Speech.Recognition.OperationLock: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartOperation(): PrivateScope, Assembly, HideBySig
    FinishOperation(): PrivateScope, Assembly, HideBySig
    WaitForOperationsToFinish(): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Recognition.RecognizerInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.String Id 'get ' : 
    System.String Name 'get ' : 
    System.String Description 'get ' : 
    System.Globalization.CultureInfo Culture 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo] SupportedAudioFormats 'get ' : 
    System.Collections.Generic.IDictionary`2[System.String,System.String] AdditionalInfo 'get ' : 
    System.String SapiObjectTokenId 'get ' : 
  Methods:
    FindBestMatch(String, String): PrivateScope, Assembly, Static, HideBySig
    Create(ObjectToken): PrivateScope, Assembly, Static, HideBySig
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportedAudioFormats(): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_SapiObjectTokenId(): PrivateScope, Assembly, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.RecognizerState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.RecognizerState Stopped = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.RecognizerState Listening = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Recognition.StateChangedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Microsoft.Speech.Recognition.RecognizerState): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Recognition.RecognizerState RecognizerState 'get ' : 
  Methods:
    get_RecognizerState(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SemanticResultKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Recognition.GrammarBuilder[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.GrammarBuilding.SemanticKeyElement SemanticKeyElement 'get ' : 
  Methods:
    ToGrammarBuilder(): PrivateScope, Public, HideBySig
    get_SemanticKeyElement(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SemanticResultValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.GrammarBuilding.TagElement Tag 'get ' : 
  Methods:
    ToGrammarBuilder(): PrivateScope, Public, HideBySig
    get_Tag(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SoundDetectedEventArgs: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.TimeSpan AudioPosition 'get ' : 
  Methods:
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SpeechDetectedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.TimeSpan AudioPosition 'get ' : 
  Methods:
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SpeechRecognitionEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Globalization.CultureInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.RecognizerInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.TimeSpan InitialSilenceTimeout 'get set' : 
    System.TimeSpan BabbleTimeout 'get set' : 
    System.TimeSpan EndSilenceTimeout 'get set' : 
    System.TimeSpan EndSilenceTimeoutAmbiguous 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.Grammar] Grammars 'get ' : 
    Microsoft.Speech.Recognition.RecognizerInfo RecognizerInfo 'get ' : 
    Microsoft.Speech.Recognition.AudioState AudioState 'get ' : 
    Int32 AudioLevel 'get ' : 
    System.TimeSpan RecognizerAudioPosition 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
    Microsoft.Speech.AudioFormat.SpeechAudioFormatInfo AudioFormat 'get ' : 
    Int32 MaxAlternates 'get set' : 
    Microsoft.Speech.Text.NormalizerCollection NormalizerCollection 'get ' : 
    Boolean PauseRecognizerOnRecognition 'get set' : 
    Microsoft.Speech.Recognition.RecognizerBase RecoBase 'get ' : 
    Boolean ReturnEmmaResult 'get set' : 
  Events:
    System.EventHandler`1[Microsoft.Speech.Recognition.RecognizeCompletedEventArgs] RecognizeCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.EmulateRecognizeCompletedEventArgs] EmulateRecognizeCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.LoadGrammarCompletedEventArgs] LoadGrammarCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechDetectedEventArgs] SpeechDetected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SoundDetectedEventArgs] SoundDetected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SoundDetectedEventArgs] SoundEndDetected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechRecognizedEventArgs] SpeechRecognized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechRecognitionRejectedEventArgs] SpeechRecognitionRejected: 
    System.EventHandler`1[Microsoft.Speech.Recognition.RecognizerUpdateReachedEventArgs] RecognizerUpdateReached: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechHypothesizedEventArgs] SpeechHypothesized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.AudioSignalProblemOccurredEventArgs] AudioSignalProblemOccurred: 
    System.EventHandler`1[Microsoft.Speech.Recognition.AudioLevelUpdatedEventArgs] AudioLevelUpdated: 
    System.EventHandler`1[Microsoft.Speech.Recognition.AudioStateChangedEventArgs] AudioStateChanged: 
  Methods:
    get_RecoBase(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ReturnEmmaResult(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ReturnEmmaResult(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InstalledRecognizers(): PrivateScope, Public, Static, HideBySig
    get_InitialSilenceTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_InitialSilenceTimeout(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_BabbleTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_BabbleTimeout(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_EndSilenceTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_EndSilenceTimeout(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_EndSilenceTimeoutAmbiguous(): PrivateScope, Public, HideBySig, SpecialName
    set_EndSilenceTimeoutAmbiguous(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_Grammars(): PrivateScope, Public, HideBySig, SpecialName
    get_RecognizerInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioState(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_RecognizerAudioPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxAlternates(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxAlternates(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NormalizerCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_PauseRecognizerOnRecognition(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PauseRecognizerOnRecognition(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    SetInputToWaveFile(String): PrivateScope, Public, HideBySig
    SetInputToWaveStream(Stream): PrivateScope, Public, HideBySig
    SetInputToAudioStream(Stream, SpeechAudioFormatInfo): PrivateScope, Public, HideBySig
    SetInputToNull(): PrivateScope, Public, HideBySig
    SetInputToDefaultAudioDevice(): PrivateScope, Public, HideBySig
    Recognize(): PrivateScope, Public, HideBySig
    Recognize(TimeSpan): PrivateScope, Public, HideBySig
    RecognizeAsync(): PrivateScope, Public, HideBySig
    RecognizeAsync(RecognizeMode): PrivateScope, Public, HideBySig
    RecognizeAsyncCancel(): PrivateScope, Public, HideBySig
    RecognizeAsyncStop(): PrivateScope, Public, HideBySig
    QueryRecognizerSetting(String): PrivateScope, Public, HideBySig
    UpdateRecognizerSetting(String, String): PrivateScope, Public, HideBySig
    UpdateRecognizerSetting(String, Int32): PrivateScope, Public, HideBySig
    LoadGrammar(Grammar): PrivateScope, Public, HideBySig
    LoadGrammarAsync(Grammar): PrivateScope, Public, HideBySig
    UnloadGrammar(Grammar): PrivateScope, Public, HideBySig
    UnloadAllGrammars(): PrivateScope, Public, HideBySig
    SimulateRecognize(String): PrivateScope, Public, HideBySig
    EmulateRecognize(String): PrivateScope, Public, HideBySig
    EmulateRecognize(String, CompareOptions): PrivateScope, Public, HideBySig
    EmulateRecognize(RecognizedWordUnit[], CompareOptions): PrivateScope, Public, HideBySig
    EmulateRecognizeAsync(String): PrivateScope, Public, HideBySig
    EmulateRecognizeAsync(String, CompareOptions): PrivateScope, Public, HideBySig
    EmulateRecognizeAsync(RecognizedWordUnit[], CompareOptions): PrivateScope, Public, HideBySig
    RequestRecognizerUpdate(): PrivateScope, Public, HideBySig
    RequestRecognizerUpdate(Object): PrivateScope, Public, HideBySig
    RequestRecognizerUpdate(Object, TimeSpan): PrivateScope, Public, HideBySig
    SetSerializedState(Byte[]): PrivateScope, Assembly, HideBySig
    GetSerializedState(): PrivateScope, Assembly, HideBySig
    add_RecognizeCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RecognizeCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_EmulateRecognizeCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_EmulateRecognizeCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_SpeechDetected(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeechDetected(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_SoundDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SoundDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SoundEndDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    remove_SoundEndDetected(EventHandler`1): PrivateScope, Assembly, HideBySig, SpecialName
    add_SpeechRecognized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeechRecognized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_SpeechRecognitionRejected(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeechRecognitionRejected(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_RecognizerUpdateReached(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RecognizerUpdateReached(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_SpeechHypothesized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_SpeechHypothesized(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_AudioSignalProblemOccurred(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AudioSignalProblemOccurred(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_AudioLevelUpdated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AudioLevelUpdated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_AudioStateChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AudioStateChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Recognition.SpeechRecognitionEngineWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Microsoft.Speech.Recognition.SpeechRecognitionEngine): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Speech.Recognition.ISpeechRecognitionEngine
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.Speech.Recognition.Grammar] Grammars 'get ' : 
  Events:
    System.EventHandler`1[Microsoft.Speech.Recognition.LoadGrammarCompletedEventArgs] LoadGrammarCompleted: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechHypothesizedEventArgs] SpeechHypothesized: 
    System.EventHandler`1[Microsoft.Speech.Recognition.SpeechRecognizedEventArgs] SpeechRecognized: 
  Methods:
    get_Grammars(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_LoadGrammarCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_SpeechHypothesized(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_SpeechHypothesized(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_SpeechRecognized(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_SpeechRecognized(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EmulateRecognize(String, CompareOptions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadGrammar(Grammar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadGrammarAsync(Grammar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UnloadAllGrammars(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UnloadGrammar(Grammar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Speech.Recognition.RecognizerUpdateReachedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Object, System.TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object UserToken 'get ' : 
    System.TimeSpan AudioPosition 'get ' : 
  Methods:
    get_UserToken(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioPosition(): PrivateScope, Public, HideBySig, SpecialName
Struct Microsoft.Speech.Recognition.Pronounceable: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Speech.Recognition.Pronounceable UnknownWordUnpronounceable = 0 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.Pronounceable UnknownWordPronounceable = 1 : Public, Static, Literal, HasDefault
    Microsoft.Speech.Recognition.Pronounceable KnownWordPronounceable = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderDictation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderPhrase: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Speech.Recognition.SubsetMatchingMode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderRuleRef: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase
    Void .ctor(System.Uri, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderWildcard: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.IdentifierCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateNewIdentifier(String): PrivateScope, Assembly, HideBySig
Class Microsoft.Speech.Internal.GrammarBuilding.ItemElement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.BuilderElements
    Void .ctor(Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.List`1[Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase], Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Microsoft.Speech.Internal.GrammarBuilding.OneOfElement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.BuilderElements
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
  Methods:
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.RuleElement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.BuilderElements
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
    System.String Name 'get ' : 
    System.String RuleName 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CalcCount(BuilderElements): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    get_RuleName(): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.RuleRefElement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase
    Void .ctor(Microsoft.Speech.Internal.GrammarBuilding.RuleElement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.GrammarBuilding.RuleElement, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Speech.Internal.GrammarBuilding.RuleElement Rule 'get ' : 
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Add(GrammarBuilderBase): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CloneItems(RuleRefElement): PrivateScope, Assembly, HideBySig
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Rule(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.SemanticKeyElement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.BuilderElements
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Add(String): PrivateScope, Assembly, HideBySig
    Add(GrammarBuilder): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Internal.GrammarBuilding.TagElement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Speech.Internal.GrammarBuilding.BuilderElements
    Void .ctor(System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Internal.GrammarBuilding.GrammarBuilderBase, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Speech.Recognition.GrammarBuilder, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DebugSummary 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateElement(IElementFactory, IElement, IRule, IdentifierCollection): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_DebugSummary(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
Class Microsoft.Speech.Recognition.SrgsGrammar.MssGrammarCompiler: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Compile(Stream, Stream, CultureInfo&(Out), SrgsGrammarMode&(Out), Collection`1&(Out)): PrivateScope, Public, Static, HideBySig
    Compile(Stream, ISpeechResourceLoader, Stream, CultureInfo&(Out), SrgsGrammarMode&(Out), Collection`1&(Out), Uri&(Out)): PrivateScope, Public, Static, HideBySig
Class Microsoft.Speech.Synthesis.ProprietaryEngineEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Speech.Synthesis.PromptEventArgs
    Void .ctor(Microsoft.Speech.Synthesis.Prompt, Int32, IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EventId 'get ' : 
    IntPtr ProprietaryData 'get ' : 
  Methods:
    get_EventId(): PrivateScope, Public, HideBySig, SpecialName
    get_ProprietaryData(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Speech.Internal.TraceProvider: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.Guid, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    WMIDPREQUEST etwCallback : Assembly
  Properties:
    Int32 Flags 'get ' : 
    Byte Level 'get ' : 
    Boolean IsEnabled 'get ' : 
    System.String ApplicationName 'get ' : 
  Methods:
    get_Flags(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Level(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsEnabled(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ApplicationName(): PrivateScope, Assembly, HideBySig, SpecialName
    MakeStringArg(Object): PrivateScope, Assembly, Static, HideBySig
    MakeTimeStampArg(Object): PrivateScope, Assembly, Static, HideBySig
    GetBufferSize(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceBuffer(Void*, Guid, Int32): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceBuffer(Void*, Guid, Int32, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Char*, Int32, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Byte*, Int32, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Char, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Byte, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Int16, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, UInt16, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Int32, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, UInt32, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, IntPtr, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Int64, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, UInt64, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Double, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, Guid, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    InitializeTraceField(Void*, DateTime, Void*, Int32&): PrivateScope, Assembly, Static, HideBySig
    TraceEvent(Void*): PrivateScope, Assembly, HideBySig
Struct Microsoft.Speech.Internal.TraceProvider+TraceLevel: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    TraceLevel TL_VERBOSE = 5 : Public, Static, Literal, HasDefault
    TraceLevel TL_NOISE = 6 : Public, Static, Literal, HasDefault
    TraceLevel TL_ERROR = 2 : Public, Static, Literal, HasDefault
    TraceLevel TL_INFO = 4 : Public, Static, Literal, HasDefault
    TraceLevel TL_WARN = 3 : Public, Static, Literal, HasDefault
    TraceLevel TL_FATAL = 1 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.UnsafeNativeMethods: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 TRACE_MESSAGE_MAXIMUM_SIZE = 8192 : Assembly, Static, Literal, HasDefault
    UInt32 ERROR_INVALID_PARAMETER = 87 : Assembly, Static, Literal, HasDefault
  Methods:
    RegisterTraceGuids(WMIDPREQUEST(In), Void*(In), Guid&(In), UInt32(In), TRACE_GUID_REGISTRATION&, String(In), String(In), UInt64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    UnregisterTraceGuids(UInt64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    TraceEvent(UInt64, EVENT_TRACE_BUFFER*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    TraceMessageVa(UInt64, UInt32, Guid*, UInt16, Void*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetModuleHandle(String(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetProcAddress(IntPtr(In), String(In, HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+VALIST_FIELD: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Void* DataPointer : Assembly
    UInt32 DataLength : Assembly
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+VALIST_HEADER: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid MessageGuid : Assembly
    UInt16 MessageNumber : Assembly
    UInt16 NumberOfFields : Assembly
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+MOF_FIELD: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 ZeroInit : Assembly
    Void* DataPointer : Assembly
    UInt32 DataLength : Assembly
    UInt32 DataType : Assembly
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+WNODE_HEADER: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 BufferSize : Assembly
    UInt32 ProviderId : Assembly
    IntPtr HistoricalContext : Assembly
    Int64 TimeStamp : Assembly
    System.Guid Guid : Assembly
    UInt32 ClientContext : Assembly
    UInt32 Flags : Assembly
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+TRACE_GUID_REGISTRATION: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid* Guid : Assembly
    IntPtr RegHandle : Assembly
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+EVENT_TRACE_BUFFER: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 BufferSize : Assembly
    UInt32 ProviderId : Assembly
    UInt32 ThreadId : Assembly
    UInt32 ProcessId : Assembly
    Int64 TimeStamp : Assembly
    System.Guid Guid : Assembly
    UInt32 ClientContext : Assembly
    UInt32 Flags : Assembly
    MOF_FIELD UserData : Assembly
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+WNODE_FLAGS: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    WNODE_FLAGS WNODE_FLAG_TRACED_GUID = 131072 : Public, Static, Literal, HasDefault
    WNODE_FLAGS WNODE_FLAG_USE_GUID_PTR = 524288 : Public, Static, Literal, HasDefault
    WNODE_FLAGS WNODE_FLAG_USE_MOF_PTR = 1048576 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+TRACE_MESSAGE_FLAGS: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    TRACE_MESSAGE_FLAGS TRACE_MESSAGE_SEQUENCE = 1 : Public, Static, Literal, HasDefault
    TRACE_MESSAGE_FLAGS TRACE_MESSAGE_GUID = 2 : Public, Static, Literal, HasDefault
    TRACE_MESSAGE_FLAGS TRACE_MESSAGE_COMPONENTID = 4 : Public, Static, Literal, HasDefault
    TRACE_MESSAGE_FLAGS TRACE_MESSAGE_TIMESTAMP = 8 : Public, Static, Literal, HasDefault
    TRACE_MESSAGE_FLAGS TRACE_MESSAGE_PERFORMANCE_TIMESTAMP = 16 : Public, Static, Literal, HasDefault
    TRACE_MESSAGE_FLAGS TRACE_MESSAGE_SYSTEMINFO = 32 : Public, Static, Literal, HasDefault
Struct Microsoft.Speech.Internal.UnsafeNativeMethods+WMIDPREQUESTCODE: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    WMIDPREQUESTCODE WMI_ENABLE_EVENTS = 4 : Public, Static, Literal, HasDefault
    WMIDPREQUESTCODE WMI_DISABLE_EVENTS = 5 : Public, Static, Literal, HasDefault
Class Microsoft.Speech.Internal.UnsafeNativeMethods+WMIDPREQUEST: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(WMIDPREQUESTCODE, IntPtr, UInt32*, Byte*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(WMIDPREQUESTCODE, IntPtr, UInt32*, Byte*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Internal.ManagedWPP.WPP_161fc3f6768b8d0ff16e1bea1b999731: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    WPP_ss(Int32, Int32, String, String): PrivateScope, Assembly, Static, HideBySig
    WPP_pus(Int32, Int32, IntPtr, UInt32, String): PrivateScope, Assembly, Static, HideBySig
    WPP_pss(Int32, Int32, IntPtr, String, String): PrivateScope, Assembly, Static, HideBySig
    WPP_p(Int32, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig
    WPP_s(Int32, Int32, String): PrivateScope, Assembly, Static, HideBySig
    WPP_psss(Int32, Int32, IntPtr, String, String, String): PrivateScope, Assembly, Static, HideBySig
    WPP_pi(Int32, Int32, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig
    WPP_pu(Int32, Int32, IntPtr, UInt32): PrivateScope, Assembly, Static, HideBySig
    WPP_NOARGS(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    WPP_ps(Int32, Int32, IntPtr, String): PrivateScope, Assembly, Static, HideBySig
